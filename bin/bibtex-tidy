#!/usr/bin/env node
/* jshint node: true, esversion: 6 */
'use strict';

const tidy = require('../bibtex-tidy.js');
const fs = require('fs');

const options = {};

const unCamelCase = str => str.replace(/[A-Z]/g, c => `-${c.toLowerCase()}`);
const camelCase = str => str.replace(/-[a-z]/g, c => c.charAt(1).toUpperCase());

for (let k of Object.keys(tidy.options)) {
	options[unCamelCase(k)] = {
		description: tidy.options[k].description,
		type: tidy.options[k].type,
		default: tidy.options[k].value
	};
}

const argv = require('yargs')
	.usage('Usage: $0 <file.bib> [options]')
	.demandCommand(1)
	.options(options)
	.boolean('stats')
	.describe('stats', 'Print statistics about entries')
	.default('stats', false)
	.help('help')
	.argv;
const input = argv._[0];

//console.log(argv._);

const idx = str => str.toLowerCase().replace(/^the /, '');
const alphabetical = (a, b) => idx(a) < idx(b) ? -1 : idx(a) > idx(b) ? 1 : 0;

console.log('Tidying...');

const bibtex = fs.readFileSync(input, 'utf8');

let opts = {};
for (let k of Object.keys(argv)) {
	let def = options[k];
	if (!def) { continue; }
	if (def.type === 'number') {
		opts[camelCase(k)] = argv[k] === undefined ? def.default : argv[k];
	} else {
		opts[camelCase(k)] = argv[k];
	}
	
}

//console.log(opts);

if (opts.sort && opts.sort.length === 0) { opts.sort = true; }
if (opts.sort && typeof opts.sort[0] === 'boolean') { opts.sort = opts.sort[0]; }
if (opts.sortFields && opts.sortFields.length === 0) { opts.sortFields = true; }
if (opts.sortFields && typeof opts.sortFields[0] === 'boolean') { opts.sortFields = opts.sortFields[0]; }

const result = tidy.tidy(bibtex, opts);

for (let warning of result.warnings) {
	console.error(warning.code + ': ' + warning.message);
}

console.log(`Done. Successfully tidied ${result.entries.length} entries.`);
if (argv.merge) {
	let dupes = result.warnings.filter(w => w.code === 'DUPLICATE_ENTRY');
	console.log(`${dupes.length} entries merged`);
}
fs.writeFileSync(`${input}.original`, bibtex, 'utf8');
fs.writeFileSync(input, result.bibtex, 'utf8');
