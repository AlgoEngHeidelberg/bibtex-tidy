TODO:
* Store/Load CLI args as URLParams
* Generate test/index.ts


const cliOutput: Record<Node['type'], (char: string) => void> = {
	root: (char) => process.stdout.write(`\x1b[31m${char}\x1b[0m`), //red
	text: (char) => process.stdout.write(`\x1b[32m${char}\x1b[0m`), //green
	block: (char) => process.stdout.write(`\x1b[33m${char}\x1b[0m`), // yellow
	entry: (char) => process.stdout.write(`\x1b[34m${char}\x1b[0m`), // blue
	comment: (char) => process.stdout.write(`\x1b[35m${char}\x1b[0m`), // magenta
	preamble: (char) => process.stdout.write(`\x1b[30m\x1b[46m${char}\x1b[0m`), // bg cyan
	string: (char) => process.stdout.write(`\x1b[30m\x1b[41m${char}\x1b[0m`), // bg red
	field: (char) => process.stdout.write(`\x1b[36m${char}\x1b[0m`), // cyan
	values: (char) => process.stdout.write(`\x1b[30m\x1b[43m${char}\x1b[0m`), // bg yellow
	literal: (char) => process.stdout.write(`\x1b[30m\x1b[44m${char}\x1b[0m`), // bg blue
	braced: (char) => process.stdout.write(`\x1b[30m\x1b[45m${char}\x1b[0m`), // bg magenta
	quoted: (char) => process.stdout.write(`\x1b[30m\x1b[42m${char}\x1b[0m`), // bg green
};
		 cliOutput[node.type](
		 	char.replace(' ', '_').replace('\t', '_').replace('\n', 'Â¶\n')
		 );

	//console.log('\n------------------');
	// console.dir(node, { depth: 100 });
	//console.log('------------------');

