(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.bibtexTidy = factory());
}(this, (function () { 'use strict';

	var commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var bibtexParse = createCommonjsModule(function (module, exports) {
	(function (global, factory) {
		module.exports = factory();
	}(commonjsGlobal, (function () {
		var parser = /*
		 * Generated by PEG.js 0.10.0.
		 *
		 * http://pegjs.org/
		 */
		(function() {

		  function peg$subclass(child, parent) {
		    function ctor() { this.constructor = child; }
		    ctor.prototype = parent.prototype;
		    child.prototype = new ctor();
		  }

		  function peg$SyntaxError(message, expected, found, location) {
		    this.message  = message;
		    this.expected = expected;
		    this.found    = found;
		    this.location = location;
		    this.name     = "SyntaxError";

		    if (typeof Error.captureStackTrace === "function") {
		      Error.captureStackTrace(this, peg$SyntaxError);
		    }
		  }

		  peg$subclass(peg$SyntaxError, Error);

		  peg$SyntaxError.buildMessage = function(expected, found) {
		    var DESCRIBE_EXPECTATION_FNS = {
		          literal: function(expectation) {
		            return "\"" + literalEscape(expectation.text) + "\"";
		          },

		          "class": function(expectation) {
		            var escapedParts = "",
		                i;

		            for (i = 0; i < expectation.parts.length; i++) {
		              escapedParts += expectation.parts[i] instanceof Array
		                ? classEscape(expectation.parts[i][0]) + "-" + classEscape(expectation.parts[i][1])
		                : classEscape(expectation.parts[i]);
		            }

		            return "[" + (expectation.inverted ? "^" : "") + escapedParts + "]";
		          },

		          any: function(expectation) {
		            return "any character";
		          },

		          end: function(expectation) {
		            return "end of input";
		          },

		          other: function(expectation) {
		            return expectation.description;
		          }
		        };

		    function hex(ch) {
		      return ch.charCodeAt(0).toString(16).toUpperCase();
		    }

		    function literalEscape(s) {
		      return s
		        .replace(/\\/g, '\\\\')
		        .replace(/"/g,  '\\"')
		        .replace(/\0/g, '\\0')
		        .replace(/\t/g, '\\t')
		        .replace(/\n/g, '\\n')
		        .replace(/\r/g, '\\r')
		        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
		        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
		    }

		    function classEscape(s) {
		      return s
		        .replace(/\\/g, '\\\\')
		        .replace(/\]/g, '\\]')
		        .replace(/\^/g, '\\^')
		        .replace(/-/g,  '\\-')
		        .replace(/\0/g, '\\0')
		        .replace(/\t/g, '\\t')
		        .replace(/\n/g, '\\n')
		        .replace(/\r/g, '\\r')
		        .replace(/[\x00-\x0F]/g,          function(ch) { return '\\x0' + hex(ch); })
		        .replace(/[\x10-\x1F\x7F-\x9F]/g, function(ch) { return '\\x'  + hex(ch); });
		    }

		    function describeExpectation(expectation) {
		      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
		    }

		    function describeExpected(expected) {
		      var descriptions = new Array(expected.length),
		          i, j;

		      for (i = 0; i < expected.length; i++) {
		        descriptions[i] = describeExpectation(expected[i]);
		      }

		      descriptions.sort();

		      if (descriptions.length > 0) {
		        for (i = 1, j = 1; i < descriptions.length; i++) {
		          if (descriptions[i - 1] !== descriptions[i]) {
		            descriptions[j] = descriptions[i];
		            j++;
		          }
		        }
		        descriptions.length = j;
		      }

		      switch (descriptions.length) {
		        case 1:
		          return descriptions[0];

		        case 2:
		          return descriptions[0] + " or " + descriptions[1];

		        default:
		          return descriptions.slice(0, -1).join(", ")
		            + ", or "
		            + descriptions[descriptions.length - 1];
		      }
		    }

		    function describeFound(found) {
		      return found ? "\"" + literalEscape(found) + "\"" : "end of input";
		    }

		    return "Expected " + describeExpected(expected) + " but " + describeFound(found) + " found.";
		  };

		  function peg$parse(input, options) {
		    options = options !== void 0 ? options : {};

		    var peg$FAILED = {},

		        peg$startRuleFunctions = { start: peg$parsestart },
		        peg$startRuleFunction  = peg$parsestart,

		        peg$c0 = function(commentsBefore, preamble, entries, commentsAfter) {
		        		return {
		        			commentsBefore,
		        			preamble: preamble,
		        			entries: [].concat(...entries),
		        			commentsAfter
		        		};
		        	},
		        peg$c1 = peg$otherExpectation("entry"),
		        peg$c2 = "@",
		        peg$c3 = peg$literalExpectation("@", false),
		        peg$c4 = "{",
		        peg$c5 = peg$literalExpectation("{", false),
		        peg$c6 = ",",
		        peg$c7 = peg$literalExpectation(",", false),
		        peg$c8 = "}",
		        peg$c9 = peg$literalExpectation("}", false),
		        peg$c10 = function(comments, type, id, properties) { return [{ type: type.toLowerCase(), id, properties, comments }]; },
		        peg$c11 = peg$otherExpectation("preamble"),
		        peg$c12 = "@preamble",
		        peg$c13 = peg$literalExpectation("@preamble", true),
		        peg$c14 = function(value) { return value; },
		        peg$c15 = peg$otherExpectation("properties"),
		        peg$c16 = function(head, tail) { return Object.assign(head, tail); },
		        peg$c17 = function(head) { return head || {}; },
		        peg$c18 = peg$otherExpectation("property"),
		        peg$c19 = "=",
		        peg$c20 = peg$literalExpectation("=", false),
		        peg$c21 = function(key, val) { return { [key.toLowerCase()]: val }; },
		        peg$c22 = peg$otherExpectation("key"),
		        peg$c23 = /^[^=\n\t\r,{}[\]]/,
		        peg$c24 = peg$classExpectation(["=", "\n", "\t", "\r", ",", "{", "}", "[", "]"], true, false),
		        peg$c25 = function(letters) { return letters.join('').trim(); },
		        peg$c26 = peg$otherExpectation("value"),
		        peg$c27 = function(value) { return { value, brace: 'curly' }; },
		        peg$c28 = "\"",
		        peg$c29 = peg$literalExpectation("\"", false),
		        peg$c30 = function(value) { return { value: value.join(''), brace: 'quote' }; },
		        peg$c31 = /^[0-9]/,
		        peg$c32 = peg$classExpectation([["0", "9"]], false, false),
		        peg$c33 = function(value) { return { value: Number(value.join('')), brace: 'none' }; },
		        peg$c34 = function(value) { return { value, brace: 'none' }; },
		        peg$c35 = peg$otherExpectation("braced value"),
		        peg$c36 = /^[^{}]/,
		        peg$c37 = peg$classExpectation(["{", "}"], true, false),
		        peg$c38 = function(head, braced, tail) { return head.join('') + `{${braced}}` + tail; },
		        peg$c39 = function(head) { return head.join(''); },
		        peg$c40 = peg$otherExpectation("quoted"),
		        peg$c41 = "\\\"",
		        peg$c42 = peg$literalExpectation("\\\"", false),
		        peg$c43 = /^[^"]/,
		        peg$c44 = peg$classExpectation(["\""], true, false),
		        peg$c45 = peg$otherExpectation("whitespace"),
		        peg$c46 = /^[ \t\n\r]/,
		        peg$c47 = peg$classExpectation([" ", "\t", "\n", "\r"], false, false),
		        peg$c48 = peg$otherExpectation("comment"),
		        peg$c49 = "%",
		        peg$c50 = peg$literalExpectation("%", false),
		        peg$c51 = /^[^\r\n]/,
		        peg$c52 = peg$classExpectation(["\r", "\n"], true, false),
		        peg$c53 = function(comment) { return comment.join(''); },
		        peg$c54 = peg$otherExpectation("end of line"),
		        peg$c55 = "\n",
		        peg$c56 = peg$literalExpectation("\n", false),
		        peg$c57 = "\r\n",
		        peg$c58 = peg$literalExpectation("\r\n", false),
		        peg$c59 = "\r",
		        peg$c60 = peg$literalExpectation("\r", false),
		        peg$c61 = "\u2028",
		        peg$c62 = peg$literalExpectation("\u2028", false),
		        peg$c63 = "\u2029",
		        peg$c64 = peg$literalExpectation("\u2029", false),
		        peg$c65 = peg$anyExpectation(),

		        peg$currPos          = 0,
		        peg$posDetailsCache  = [{ line: 1, column: 1 }],
		        peg$maxFailPos       = 0,
		        peg$maxFailExpected  = [],
		        peg$silentFails      = 0,

		        peg$result;

		    if ("startRule" in options) {
		      if (!(options.startRule in peg$startRuleFunctions)) {
		        throw new Error("Can't start parsing from rule \"" + options.startRule + "\".");
		      }

		      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
		    }

		    function peg$literalExpectation(text, ignoreCase) {
		      return { type: "literal", text: text, ignoreCase: ignoreCase };
		    }

		    function peg$classExpectation(parts, inverted, ignoreCase) {
		      return { type: "class", parts: parts, inverted: inverted, ignoreCase: ignoreCase };
		    }

		    function peg$anyExpectation() {
		      return { type: "any" };
		    }

		    function peg$endExpectation() {
		      return { type: "end" };
		    }

		    function peg$otherExpectation(description) {
		      return { type: "other", description: description };
		    }

		    function peg$computePosDetails(pos) {
		      var details = peg$posDetailsCache[pos], p;

		      if (details) {
		        return details;
		      } else {
		        p = pos - 1;
		        while (!peg$posDetailsCache[p]) {
		          p--;
		        }

		        details = peg$posDetailsCache[p];
		        details = {
		          line:   details.line,
		          column: details.column
		        };

		        while (p < pos) {
		          if (input.charCodeAt(p) === 10) {
		            details.line++;
		            details.column = 1;
		          } else {
		            details.column++;
		          }

		          p++;
		        }

		        peg$posDetailsCache[pos] = details;
		        return details;
		      }
		    }

		    function peg$computeLocation(startPos, endPos) {
		      var startPosDetails = peg$computePosDetails(startPos),
		          endPosDetails   = peg$computePosDetails(endPos);

		      return {
		        start: {
		          offset: startPos,
		          line:   startPosDetails.line,
		          column: startPosDetails.column
		        },
		        end: {
		          offset: endPos,
		          line:   endPosDetails.line,
		          column: endPosDetails.column
		        }
		      };
		    }

		    function peg$fail(expected) {
		      if (peg$currPos < peg$maxFailPos) { return; }

		      if (peg$currPos > peg$maxFailPos) {
		        peg$maxFailPos = peg$currPos;
		        peg$maxFailExpected = [];
		      }

		      peg$maxFailExpected.push(expected);
		    }

		    function peg$buildStructuredError(expected, found, location) {
		      return new peg$SyntaxError(
		        peg$SyntaxError.buildMessage(expected, found),
		        expected,
		        found,
		        location
		      );
		    }

		    function peg$parsestart() {
		      var s0, s1, s2, s3, s4, s5, s6;

		      s0 = peg$currPos;
		      s1 = [];
		      s2 = peg$parsecomment();
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        s2 = peg$parsecomment();
		      }
		      if (s1 !== peg$FAILED) {
		        s2 = peg$parsepreamble();
		        if (s2 === peg$FAILED) {
		          s2 = null;
		        }
		        if (s2 !== peg$FAILED) {
		          s3 = [];
		          s4 = peg$parseentry();
		          while (s4 !== peg$FAILED) {
		            s3.push(s4);
		            s4 = peg$parseentry();
		          }
		          if (s3 !== peg$FAILED) {
		            s4 = [];
		            s5 = peg$parsecomment();
		            while (s5 !== peg$FAILED) {
		              s4.push(s5);
		              s5 = peg$parsecomment();
		            }
		            if (s4 !== peg$FAILED) {
		              s5 = [];
		              s6 = peg$parse_();
		              while (s6 !== peg$FAILED) {
		                s5.push(s6);
		                s6 = peg$parse_();
		              }
		              if (s5 !== peg$FAILED) {
		                s1 = peg$c0(s1, s2, s3, s4);
		                s0 = s1;
		              } else {
		                peg$currPos = s0;
		                s0 = peg$FAILED;
		              }
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }

		      return s0;
		    }

		    function peg$parseentry() {
		      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15, s16;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      s2 = peg$parsecomment();
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        s2 = peg$parsecomment();
		      }
		      if (s1 !== peg$FAILED) {
		        s2 = [];
		        s3 = peg$parse_();
		        while (s3 !== peg$FAILED) {
		          s2.push(s3);
		          s3 = peg$parse_();
		        }
		        if (s2 !== peg$FAILED) {
		          if (input.charCodeAt(peg$currPos) === 64) {
		            s3 = peg$c2;
		            peg$currPos++;
		          } else {
		            s3 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c3); }
		          }
		          if (s3 !== peg$FAILED) {
		            s4 = peg$parsekey();
		            if (s4 !== peg$FAILED) {
		              s5 = [];
		              s6 = peg$parse_();
		              while (s6 !== peg$FAILED) {
		                s5.push(s6);
		                s6 = peg$parse_();
		              }
		              if (s5 !== peg$FAILED) {
		                if (input.charCodeAt(peg$currPos) === 123) {
		                  s6 = peg$c4;
		                  peg$currPos++;
		                } else {
		                  s6 = peg$FAILED;
		                  if (peg$silentFails === 0) { peg$fail(peg$c5); }
		                }
		                if (s6 !== peg$FAILED) {
		                  s7 = [];
		                  s8 = peg$parse_();
		                  while (s8 !== peg$FAILED) {
		                    s7.push(s8);
		                    s8 = peg$parse_();
		                  }
		                  if (s7 !== peg$FAILED) {
		                    s8 = peg$parsekey();
		                    if (s8 !== peg$FAILED) {
		                      s9 = peg$parseproperties();
		                      if (s9 !== peg$FAILED) {
		                        if (input.charCodeAt(peg$currPos) === 44) {
		                          s10 = peg$c6;
		                          peg$currPos++;
		                        } else {
		                          s10 = peg$FAILED;
		                          if (peg$silentFails === 0) { peg$fail(peg$c7); }
		                        }
		                        if (s10 === peg$FAILED) {
		                          s10 = null;
		                        }
		                        if (s10 !== peg$FAILED) {
		                          s11 = [];
		                          s12 = peg$parse_();
		                          while (s12 !== peg$FAILED) {
		                            s11.push(s12);
		                            s12 = peg$parse_();
		                          }
		                          if (s11 !== peg$FAILED) {
		                            if (input.charCodeAt(peg$currPos) === 125) {
		                              s12 = peg$c8;
		                              peg$currPos++;
		                            } else {
		                              s12 = peg$FAILED;
		                              if (peg$silentFails === 0) { peg$fail(peg$c9); }
		                            }
		                            if (s12 !== peg$FAILED) {
		                              s13 = [];
		                              s14 = peg$parse_();
		                              while (s14 !== peg$FAILED) {
		                                s13.push(s14);
		                                s14 = peg$parse_();
		                              }
		                              if (s13 !== peg$FAILED) {
		                                if (input.charCodeAt(peg$currPos) === 44) {
		                                  s14 = peg$c6;
		                                  peg$currPos++;
		                                } else {
		                                  s14 = peg$FAILED;
		                                  if (peg$silentFails === 0) { peg$fail(peg$c7); }
		                                }
		                                if (s14 === peg$FAILED) {
		                                  s14 = null;
		                                }
		                                if (s14 !== peg$FAILED) {
		                                  s15 = [];
		                                  s16 = peg$parse_();
		                                  while (s16 !== peg$FAILED) {
		                                    s15.push(s16);
		                                    s16 = peg$parse_();
		                                  }
		                                  if (s15 !== peg$FAILED) {
		                                    s1 = peg$c10(s1, s4, s8, s9);
		                                    s0 = s1;
		                                  } else {
		                                    peg$currPos = s0;
		                                    s0 = peg$FAILED;
		                                  }
		                                } else {
		                                  peg$currPos = s0;
		                                  s0 = peg$FAILED;
		                                }
		                              } else {
		                                peg$currPos = s0;
		                                s0 = peg$FAILED;
		                              }
		                            } else {
		                              peg$currPos = s0;
		                              s0 = peg$FAILED;
		                            }
		                          } else {
		                            peg$currPos = s0;
		                            s0 = peg$FAILED;
		                          }
		                        } else {
		                          peg$currPos = s0;
		                          s0 = peg$FAILED;
		                        }
		                      } else {
		                        peg$currPos = s0;
		                        s0 = peg$FAILED;
		                      }
		                    } else {
		                      peg$currPos = s0;
		                      s0 = peg$FAILED;
		                    }
		                  } else {
		                    peg$currPos = s0;
		                    s0 = peg$FAILED;
		                  }
		                } else {
		                  peg$currPos = s0;
		                  s0 = peg$FAILED;
		                }
		              } else {
		                peg$currPos = s0;
		                s0 = peg$FAILED;
		              }
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c1); }
		      }

		      return s0;
		    }

		    function peg$parsepreamble() {
		      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      s2 = peg$parse_();
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        s2 = peg$parse_();
		      }
		      if (s1 !== peg$FAILED) {
		        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c12) {
		          s2 = input.substr(peg$currPos, 9);
		          peg$currPos += 9;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c13); }
		        }
		        if (s2 !== peg$FAILED) {
		          s3 = [];
		          s4 = peg$parse_();
		          while (s4 !== peg$FAILED) {
		            s3.push(s4);
		            s4 = peg$parse_();
		          }
		          if (s3 !== peg$FAILED) {
		            if (input.charCodeAt(peg$currPos) === 123) {
		              s4 = peg$c4;
		              peg$currPos++;
		            } else {
		              s4 = peg$FAILED;
		              if (peg$silentFails === 0) { peg$fail(peg$c5); }
		            }
		            if (s4 !== peg$FAILED) {
		              s5 = [];
		              s6 = peg$parse_();
		              while (s6 !== peg$FAILED) {
		                s5.push(s6);
		                s6 = peg$parse_();
		              }
		              if (s5 !== peg$FAILED) {
		                s6 = peg$parsevalue();
		                if (s6 !== peg$FAILED) {
		                  s7 = [];
		                  s8 = peg$parse_();
		                  while (s8 !== peg$FAILED) {
		                    s7.push(s8);
		                    s8 = peg$parse_();
		                  }
		                  if (s7 !== peg$FAILED) {
		                    if (input.charCodeAt(peg$currPos) === 125) {
		                      s8 = peg$c8;
		                      peg$currPos++;
		                    } else {
		                      s8 = peg$FAILED;
		                      if (peg$silentFails === 0) { peg$fail(peg$c9); }
		                    }
		                    if (s8 !== peg$FAILED) {
		                      s9 = [];
		                      s10 = peg$parse_();
		                      while (s10 !== peg$FAILED) {
		                        s9.push(s10);
		                        s10 = peg$parse_();
		                      }
		                      if (s9 !== peg$FAILED) {
		                        if (input.charCodeAt(peg$currPos) === 44) {
		                          s10 = peg$c6;
		                          peg$currPos++;
		                        } else {
		                          s10 = peg$FAILED;
		                          if (peg$silentFails === 0) { peg$fail(peg$c7); }
		                        }
		                        if (s10 === peg$FAILED) {
		                          s10 = null;
		                        }
		                        if (s10 !== peg$FAILED) {
		                          s11 = [];
		                          s12 = peg$parse_();
		                          while (s12 !== peg$FAILED) {
		                            s11.push(s12);
		                            s12 = peg$parse_();
		                          }
		                          if (s11 !== peg$FAILED) {
		                            s1 = peg$c14(s6);
		                            s0 = s1;
		                          } else {
		                            peg$currPos = s0;
		                            s0 = peg$FAILED;
		                          }
		                        } else {
		                          peg$currPos = s0;
		                          s0 = peg$FAILED;
		                        }
		                      } else {
		                        peg$currPos = s0;
		                        s0 = peg$FAILED;
		                      }
		                    } else {
		                      peg$currPos = s0;
		                      s0 = peg$FAILED;
		                    }
		                  } else {
		                    peg$currPos = s0;
		                    s0 = peg$FAILED;
		                  }
		                } else {
		                  peg$currPos = s0;
		                  s0 = peg$FAILED;
		                }
		              } else {
		                peg$currPos = s0;
		                s0 = peg$FAILED;
		              }
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c11); }
		      }

		      return s0;
		    }

		    function peg$parseproperties() {
		      var s0, s1, s2;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = peg$parseproperty();
		      if (s1 !== peg$FAILED) {
		        s2 = peg$parseproperties();
		        if (s2 !== peg$FAILED) {
		          s1 = peg$c16(s1, s2);
		          s0 = s1;
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      if (s0 === peg$FAILED) {
		        s0 = peg$currPos;
		        s1 = peg$parseproperty();
		        if (s1 === peg$FAILED) {
		          s1 = null;
		        }
		        if (s1 !== peg$FAILED) {
		          s1 = peg$c17(s1);
		        }
		        s0 = s1;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c15); }
		      }

		      return s0;
		    }

		    function peg$parseproperty() {
		      var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      s2 = peg$parse_();
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        s2 = peg$parse_();
		      }
		      if (s1 !== peg$FAILED) {
		        if (input.charCodeAt(peg$currPos) === 44) {
		          s2 = peg$c6;
		          peg$currPos++;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c7); }
		        }
		        if (s2 !== peg$FAILED) {
		          s3 = [];
		          s4 = peg$parse_();
		          while (s4 !== peg$FAILED) {
		            s3.push(s4);
		            s4 = peg$parse_();
		          }
		          if (s3 !== peg$FAILED) {
		            s4 = peg$parsekey();
		            if (s4 !== peg$FAILED) {
		              s5 = [];
		              s6 = peg$parse_();
		              while (s6 !== peg$FAILED) {
		                s5.push(s6);
		                s6 = peg$parse_();
		              }
		              if (s5 !== peg$FAILED) {
		                if (input.charCodeAt(peg$currPos) === 61) {
		                  s6 = peg$c19;
		                  peg$currPos++;
		                } else {
		                  s6 = peg$FAILED;
		                  if (peg$silentFails === 0) { peg$fail(peg$c20); }
		                }
		                if (s6 !== peg$FAILED) {
		                  s7 = [];
		                  s8 = peg$parse_();
		                  while (s8 !== peg$FAILED) {
		                    s7.push(s8);
		                    s8 = peg$parse_();
		                  }
		                  if (s7 !== peg$FAILED) {
		                    s8 = peg$parsevalue();
		                    if (s8 !== peg$FAILED) {
		                      s9 = [];
		                      s10 = peg$parse_();
		                      while (s10 !== peg$FAILED) {
		                        s9.push(s10);
		                        s10 = peg$parse_();
		                      }
		                      if (s9 !== peg$FAILED) {
		                        s1 = peg$c21(s4, s8);
		                        s0 = s1;
		                      } else {
		                        peg$currPos = s0;
		                        s0 = peg$FAILED;
		                      }
		                    } else {
		                      peg$currPos = s0;
		                      s0 = peg$FAILED;
		                    }
		                  } else {
		                    peg$currPos = s0;
		                    s0 = peg$FAILED;
		                  }
		                } else {
		                  peg$currPos = s0;
		                  s0 = peg$FAILED;
		                }
		              } else {
		                peg$currPos = s0;
		                s0 = peg$FAILED;
		              }
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c18); }
		      }

		      return s0;
		    }

		    function peg$parsekey() {
		      var s0, s1, s2;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      if (peg$c23.test(input.charAt(peg$currPos))) {
		        s2 = input.charAt(peg$currPos);
		        peg$currPos++;
		      } else {
		        s2 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c24); }
		      }
		      if (s2 !== peg$FAILED) {
		        while (s2 !== peg$FAILED) {
		          s1.push(s2);
		          if (peg$c23.test(input.charAt(peg$currPos))) {
		            s2 = input.charAt(peg$currPos);
		            peg$currPos++;
		          } else {
		            s2 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c24); }
		          }
		        }
		      } else {
		        s1 = peg$FAILED;
		      }
		      if (s1 !== peg$FAILED) {
		        s1 = peg$c25(s1);
		      }
		      s0 = s1;
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c22); }
		      }

		      return s0;
		    }

		    function peg$parsevalue() {
		      var s0, s1, s2, s3;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      if (input.charCodeAt(peg$currPos) === 123) {
		        s1 = peg$c4;
		        peg$currPos++;
		      } else {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c5); }
		      }
		      if (s1 !== peg$FAILED) {
		        s2 = peg$parsebraced();
		        if (s2 !== peg$FAILED) {
		          if (input.charCodeAt(peg$currPos) === 125) {
		            s3 = peg$c8;
		            peg$currPos++;
		          } else {
		            s3 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c9); }
		          }
		          if (s3 !== peg$FAILED) {
		            s1 = peg$c27(s2);
		            s0 = s1;
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      if (s0 === peg$FAILED) {
		        s0 = peg$currPos;
		        if (input.charCodeAt(peg$currPos) === 34) {
		          s1 = peg$c28;
		          peg$currPos++;
		        } else {
		          s1 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c29); }
		        }
		        if (s1 !== peg$FAILED) {
		          s2 = [];
		          s3 = peg$parsequoted();
		          while (s3 !== peg$FAILED) {
		            s2.push(s3);
		            s3 = peg$parsequoted();
		          }
		          if (s2 !== peg$FAILED) {
		            if (input.charCodeAt(peg$currPos) === 34) {
		              s3 = peg$c28;
		              peg$currPos++;
		            } else {
		              s3 = peg$FAILED;
		              if (peg$silentFails === 0) { peg$fail(peg$c29); }
		            }
		            if (s3 !== peg$FAILED) {
		              s1 = peg$c30(s2);
		              s0 = s1;
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		        if (s0 === peg$FAILED) {
		          s0 = peg$currPos;
		          s1 = [];
		          if (peg$c31.test(input.charAt(peg$currPos))) {
		            s2 = input.charAt(peg$currPos);
		            peg$currPos++;
		          } else {
		            s2 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c32); }
		          }
		          if (s2 !== peg$FAILED) {
		            while (s2 !== peg$FAILED) {
		              s1.push(s2);
		              if (peg$c31.test(input.charAt(peg$currPos))) {
		                s2 = input.charAt(peg$currPos);
		                peg$currPos++;
		              } else {
		                s2 = peg$FAILED;
		                if (peg$silentFails === 0) { peg$fail(peg$c32); }
		              }
		            }
		          } else {
		            s1 = peg$FAILED;
		          }
		          if (s1 !== peg$FAILED) {
		            s1 = peg$c33(s1);
		          }
		          s0 = s1;
		          if (s0 === peg$FAILED) {
		            s0 = peg$currPos;
		            s1 = peg$parsekey();
		            if (s1 !== peg$FAILED) {
		              s1 = peg$c34(s1);
		            }
		            s0 = s1;
		          }
		        }
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c26); }
		      }

		      return s0;
		    }

		    function peg$parsebraced() {
		      var s0, s1, s2, s3, s4, s5;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      if (peg$c36.test(input.charAt(peg$currPos))) {
		        s2 = input.charAt(peg$currPos);
		        peg$currPos++;
		      } else {
		        s2 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c37); }
		      }
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        if (peg$c36.test(input.charAt(peg$currPos))) {
		          s2 = input.charAt(peg$currPos);
		          peg$currPos++;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c37); }
		        }
		      }
		      if (s1 !== peg$FAILED) {
		        if (input.charCodeAt(peg$currPos) === 123) {
		          s2 = peg$c4;
		          peg$currPos++;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c5); }
		        }
		        if (s2 !== peg$FAILED) {
		          s3 = peg$parsebraced();
		          if (s3 !== peg$FAILED) {
		            if (input.charCodeAt(peg$currPos) === 125) {
		              s4 = peg$c8;
		              peg$currPos++;
		            } else {
		              s4 = peg$FAILED;
		              if (peg$silentFails === 0) { peg$fail(peg$c9); }
		            }
		            if (s4 !== peg$FAILED) {
		              s5 = peg$parsebraced();
		              if (s5 !== peg$FAILED) {
		                s1 = peg$c38(s1, s3, s5);
		                s0 = s1;
		              } else {
		                peg$currPos = s0;
		                s0 = peg$FAILED;
		              }
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      if (s0 === peg$FAILED) {
		        s0 = peg$currPos;
		        s1 = [];
		        if (peg$c36.test(input.charAt(peg$currPos))) {
		          s2 = input.charAt(peg$currPos);
		          peg$currPos++;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c37); }
		        }
		        while (s2 !== peg$FAILED) {
		          s1.push(s2);
		          if (peg$c36.test(input.charAt(peg$currPos))) {
		            s2 = input.charAt(peg$currPos);
		            peg$currPos++;
		          } else {
		            s2 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c37); }
		          }
		        }
		        if (s1 !== peg$FAILED) {
		          s1 = peg$c39(s1);
		        }
		        s0 = s1;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c35); }
		      }

		      return s0;
		    }

		    function peg$parsequoted() {
		      var s0;

		      peg$silentFails++;
		      if (input.substr(peg$currPos, 2) === peg$c41) {
		        s0 = peg$c41;
		        peg$currPos += 2;
		      } else {
		        s0 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c42); }
		      }
		      if (s0 === peg$FAILED) {
		        if (peg$c43.test(input.charAt(peg$currPos))) {
		          s0 = input.charAt(peg$currPos);
		          peg$currPos++;
		        } else {
		          s0 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c44); }
		        }
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        if (peg$silentFails === 0) { peg$fail(peg$c40); }
		      }

		      return s0;
		    }

		    function peg$parse_() {
		      var s0, s1;

		      peg$silentFails++;
		      s0 = [];
		      if (peg$c46.test(input.charAt(peg$currPos))) {
		        s1 = input.charAt(peg$currPos);
		        peg$currPos++;
		      } else {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c47); }
		      }
		      if (s1 !== peg$FAILED) {
		        while (s1 !== peg$FAILED) {
		          s0.push(s1);
		          if (peg$c46.test(input.charAt(peg$currPos))) {
		            s1 = input.charAt(peg$currPos);
		            peg$currPos++;
		          } else {
		            s1 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c47); }
		          }
		        }
		      } else {
		        s0 = peg$FAILED;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c45); }
		      }

		      return s0;
		    }

		    function peg$parsecomment() {
		      var s0, s1, s2, s3, s4;

		      peg$silentFails++;
		      s0 = peg$currPos;
		      s1 = [];
		      s2 = peg$parse_();
		      while (s2 !== peg$FAILED) {
		        s1.push(s2);
		        s2 = peg$parse_();
		      }
		      if (s1 !== peg$FAILED) {
		        if (input.charCodeAt(peg$currPos) === 37) {
		          s2 = peg$c49;
		          peg$currPos++;
		        } else {
		          s2 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c50); }
		        }
		        if (s2 !== peg$FAILED) {
		          s3 = [];
		          if (peg$c51.test(input.charAt(peg$currPos))) {
		            s4 = input.charAt(peg$currPos);
		            peg$currPos++;
		          } else {
		            s4 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c52); }
		          }
		          while (s4 !== peg$FAILED) {
		            s3.push(s4);
		            if (peg$c51.test(input.charAt(peg$currPos))) {
		              s4 = input.charAt(peg$currPos);
		              peg$currPos++;
		            } else {
		              s4 = peg$FAILED;
		              if (peg$silentFails === 0) { peg$fail(peg$c52); }
		            }
		          }
		          if (s3 !== peg$FAILED) {
		            s4 = peg$parselineend();
		            if (s4 !== peg$FAILED) {
		              s1 = peg$c53(s3);
		              s0 = s1;
		            } else {
		              peg$currPos = s0;
		              s0 = peg$FAILED;
		            }
		          } else {
		            peg$currPos = s0;
		            s0 = peg$FAILED;
		          }
		        } else {
		          peg$currPos = s0;
		          s0 = peg$FAILED;
		        }
		      } else {
		        peg$currPos = s0;
		        s0 = peg$FAILED;
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c48); }
		      }

		      return s0;
		    }

		    function peg$parselineend() {
		      var s0, s1;

		      peg$silentFails++;
		      if (input.charCodeAt(peg$currPos) === 10) {
		        s0 = peg$c55;
		        peg$currPos++;
		      } else {
		        s0 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c56); }
		      }
		      if (s0 === peg$FAILED) {
		        if (input.substr(peg$currPos, 2) === peg$c57) {
		          s0 = peg$c57;
		          peg$currPos += 2;
		        } else {
		          s0 = peg$FAILED;
		          if (peg$silentFails === 0) { peg$fail(peg$c58); }
		        }
		        if (s0 === peg$FAILED) {
		          if (input.charCodeAt(peg$currPos) === 13) {
		            s0 = peg$c59;
		            peg$currPos++;
		          } else {
		            s0 = peg$FAILED;
		            if (peg$silentFails === 0) { peg$fail(peg$c60); }
		          }
		          if (s0 === peg$FAILED) {
		            if (input.charCodeAt(peg$currPos) === 8232) {
		              s0 = peg$c61;
		              peg$currPos++;
		            } else {
		              s0 = peg$FAILED;
		              if (peg$silentFails === 0) { peg$fail(peg$c62); }
		            }
		            if (s0 === peg$FAILED) {
		              if (input.charCodeAt(peg$currPos) === 8233) {
		                s0 = peg$c63;
		                peg$currPos++;
		              } else {
		                s0 = peg$FAILED;
		                if (peg$silentFails === 0) { peg$fail(peg$c64); }
		              }
		              if (s0 === peg$FAILED) {
		                s0 = peg$currPos;
		                peg$silentFails++;
		                if (input.length > peg$currPos) {
		                  s1 = input.charAt(peg$currPos);
		                  peg$currPos++;
		                } else {
		                  s1 = peg$FAILED;
		                  if (peg$silentFails === 0) { peg$fail(peg$c65); }
		                }
		                peg$silentFails--;
		                if (s1 === peg$FAILED) {
		                  s0 = void 0;
		                } else {
		                  peg$currPos = s0;
		                  s0 = peg$FAILED;
		                }
		              }
		            }
		          }
		        }
		      }
		      peg$silentFails--;
		      if (s0 === peg$FAILED) {
		        s1 = peg$FAILED;
		        if (peg$silentFails === 0) { peg$fail(peg$c54); }
		      }

		      return s0;
		    }

		    peg$result = peg$startRuleFunction();

		    if (peg$result !== peg$FAILED && peg$currPos === input.length) {
		      return peg$result;
		    } else {
		      if (peg$result !== peg$FAILED && peg$currPos < input.length) {
		        peg$fail(peg$endExpectation());
		      }

		      throw peg$buildStructuredError(
		        peg$maxFailExpected,
		        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
		        peg$maxFailPos < input.length
		          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
		          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
		      );
		    }
		  }

		  return {
		    SyntaxError: peg$SyntaxError,
		    parse:       peg$parse
		  };
		})();

		/* jshint node: true, esversion: 6, unused: true */

		return parser;

	})));
	});

	var unicode = [ [ /\u{0023}/gu,
	    "\\#" ],
	  [ /\u{0024}/gu,
	    "\\$" ],
	  [ /\u{0025}/gu,
	    "\\%" ],
	  [ /\u{0026}/gu,
	    "\\&" ],
	  [ /\u{0027}/gu,
	    "'" ],
	  [ /\u{0040}/gu,
	    "\\@" ],
	  [ /\u{002A}/gu,
	    "\\textasteriskcentered" ],
	  [ /\u{005E}/gu,
	    "\\^{}" ],
	  [ /\u{005F}/gu,
	    "\\_" ],
	  [ /\u{0060}/gu,
	    "\\textasciigrave{}" ],
	  [ /\u{007C}/gu,
	    "\\vert{}" ],
	  [ /\u{007E}/gu,
	    "\\textasciitilde{}" ],
	  [ /\u{00A0}/gu,
	    "~" ],
	  [ /\u{00A1}/gu,
	    "\\textexclamdown{}" ],
	  [ /\u{00A2}/gu,
	    "\\textcent{}" ],
	  [ /\u{00A3}/gu,
	    "\\textsterling{}" ],
	  [ /\u{00A4}/gu,
	    "\\textcurrency{}" ],
	  [ /\u{00A5}/gu,
	    "\\textyen{}" ],
	  [ /\u{00A6}/gu,
	    "\\textbrokenbar{}" ],
	  [ /\u{00A7}/gu,
	    "\\textsection{}" ],
	  [ /\u{00A8}/gu,
	    "\\textasciidieresis{}" ],
	  [ /\u{00A9}/gu,
	    "\\textcopyright{}" ],
	  [ /\u{00AA}/gu,
	    "\\textordfeminine{}" ],
	  [ /\u{00AB}/gu,
	    "\\guillemotleft{}" ],
	  [ /\u{00AC}/gu,
	    "\\lnot{}" ],
	  [ /\u{00AD}/gu,
	    "\\-" ],
	  [ /\u{00AE}/gu,
	    "\\textregistered{}" ],
	  [ /\u{00AF}/gu,
	    "\\textasciimacron{}" ],
	  [ /\u{00B0}/gu,
	    "\\textdegree{}" ],
	  [ /\u{00B1}/gu,
	    "\\pm{}" ],
	  [ /\u{00B2}/gu,
	    "\\ensuremath{^2}" ],
	  [ /\u{00B3}/gu,
	    "\\ensuremath{^3}" ],
	  [ /\u{00B4}/gu,
	    "\\textasciiacute{}" ],
	  [ /\u{00B5}/gu,
	    "\\mathrm{\\mu}" ],
	  [ /\u{00B6}/gu,
	    "\\textparagraph{}" ],
	  [ /\u{00B7}/gu,
	    "\\cdot{}" ],
	  [ /\u{00B8}/gu,
	    "\\c{}" ],
	  [ /\u{00B9}/gu,
	    "\\ensuremath{^1}" ],
	  [ /\u{00BA}/gu,
	    "\\textordmasculine{}" ],
	  [ /\u{00BB}/gu,
	    "\\guillemotright{}" ],
	  [ /\u{00BC}/gu,
	    "\\textonequarter{}" ],
	  [ /\u{00BD}/gu,
	    "\\textonehalf{}" ],
	  [ /\u{00BE}/gu,
	    "\\textthreequarters{}" ],
	  [ /\u{00BF}/gu,
	    "\\textquestiondown{}" ],
	  [ /\u{00C0}/gu,
	    "\\`{A}" ],
	  [ /\u{00C1}/gu,
	    "\\'{A}" ],
	  [ /\u{00C2}/gu,
	    "\\^{A}" ],
	  [ /\u{00C3}/gu,
	    "\\~{A}" ],
	  [ /\u{00C4}/gu,
	    "\\\"{A}" ],
	  [ /\u{00C5}/gu,
	    "\\AA{}" ],
	  [ /\u{00C6}/gu,
	    "\\AE{}" ],
	  [ /\u{00C7}/gu,
	    "\\c{C}" ],
	  [ /\u{00C8}/gu,
	    "\\`{E}" ],
	  [ /\u{00C9}/gu,
	    "\\'{E}" ],
	  [ /\u{00CA}/gu,
	    "\\^{E}" ],
	  [ /\u{00CB}/gu,
	    "\\\"{E}" ],
	  [ /\u{00CC}/gu,
	    "\\`{I}" ],
	  [ /\u{00CD}/gu,
	    "\\'{I}" ],
	  [ /\u{00CE}/gu,
	    "\\^{I}" ],
	  [ /\u{00CF}/gu,
	    "\\\"{I}" ],
	  [ /\u{00D0}/gu,
	    "\\DH{}" ],
	  [ /\u{00D1}/gu,
	    "\\~{N}" ],
	  [ /\u{00D2}/gu,
	    "\\`{O}" ],
	  [ /\u{00D3}/gu,
	    "\\'{O}" ],
	  [ /\u{00D4}/gu,
	    "\\^{O}" ],
	  [ /\u{00D5}/gu,
	    "\\~{O}" ],
	  [ /\u{00D6}/gu,
	    "\\\"{O}" ],
	  [ /\u{00D7}/gu,
	    "\\texttimes{}" ],
	  [ /\u{00D8}/gu,
	    "\\O{}" ],
	  [ /\u{00D9}/gu,
	    "\\`{U}" ],
	  [ /\u{00DA}/gu,
	    "\\'{U}" ],
	  [ /\u{00DB}/gu,
	    "\\^{U}" ],
	  [ /\u{00DC}/gu,
	    "\\\"{U}" ],
	  [ /\u{00DD}/gu,
	    "\\'{Y}" ],
	  [ /\u{00DE}/gu,
	    "\\TH{}" ],
	  [ /\u{00DF}/gu,
	    "\\ss{}" ],
	  [ /\u{00E0}/gu,
	    "\\`{a}" ],
	  [ /\u{00E1}/gu,
	    "\\'{a}" ],
	  [ /\u{00E2}/gu,
	    "\\^{a}" ],
	  [ /\u{00E3}/gu,
	    "\\~{a}" ],
	  [ /\u{00E4}/gu,
	    "\\\"{a}" ],
	  [ /\u{00E5}/gu,
	    "\\aa{}" ],
	  [ /\u{00E6}/gu,
	    "\\ae{}" ],
	  [ /\u{00E7}/gu,
	    "\\c{c}" ],
	  [ /\u{00E8}/gu,
	    "\\`{e}" ],
	  [ /\u{00E9}/gu,
	    "\\'{e}" ],
	  [ /\u{00EA}/gu,
	    "\\^{e}" ],
	  [ /\u{00EB}/gu,
	    "\\\"{e}" ],
	  [ /\u{00EC}/gu,
	    "\\`{\\i}" ],
	  [ /\u{00ED}/gu,
	    "\\'{\\i}" ],
	  [ /\u{00EE}/gu,
	    "\\^{\\i}" ],
	  [ /\u{00EF}/gu,
	    "\\\"{\\i}" ],
	  [ /\u{00F0}/gu,
	    "\\dh{}" ],
	  [ /\u{00F1}/gu,
	    "\\~{n}" ],
	  [ /\u{00F2}/gu,
	    "\\`{o}" ],
	  [ /\u{00F3}/gu,
	    "\\'{o}" ],
	  [ /\u{00F4}/gu,
	    "\\^{o}" ],
	  [ /\u{00F5}/gu,
	    "\\~{o}" ],
	  [ /\u{00F6}/gu,
	    "\\\"{o}" ],
	  [ /\u{00F7}/gu,
	    "\\div{}" ],
	  [ /\u{00F8}/gu,
	    "\\o{}" ],
	  [ /\u{00F9}/gu,
	    "\\`{u}" ],
	  [ /\u{00FA}/gu,
	    "\\'{u}" ],
	  [ /\u{00FB}/gu,
	    "\\^{u}" ],
	  [ /\u{00FC}/gu,
	    "\\\"{u}" ],
	  [ /\u{00FD}/gu,
	    "\\'{y}" ],
	  [ /\u{00FE}/gu,
	    "\\th{}" ],
	  [ /\u{00FF}/gu,
	    "\\\"{y}" ],
	  [ /\u{0100}/gu,
	    "\\={A}" ],
	  [ /\u{0101}/gu,
	    "\\={a}" ],
	  [ /\u{0102}/gu,
	    "\\u{A}" ],
	  [ /\u{0103}/gu,
	    "\\u{a}" ],
	  [ /\u{0104}/gu,
	    "\\k{A}" ],
	  [ /\u{0105}/gu,
	    "\\k{a}" ],
	  [ /\u{0106}/gu,
	    "\\'{C}" ],
	  [ /\u{0107}/gu,
	    "\\'{c}" ],
	  [ /\u{0108}/gu,
	    "\\^{C}" ],
	  [ /\u{0109}/gu,
	    "\\^{c}" ],
	  [ /\u{010A}/gu,
	    "\\.{C}" ],
	  [ /\u{010B}/gu,
	    "\\.{c}" ],
	  [ /\u{010C}/gu,
	    "\\v{C}" ],
	  [ /\u{010D}/gu,
	    "\\v{c}" ],
	  [ /\u{010E}/gu,
	    "\\v{D}" ],
	  [ /\u{010F}/gu,
	    "\\v{d}" ],
	  [ /\u{0110}/gu,
	    "\\DJ{}" ],
	  [ /\u{0111}/gu,
	    "\\dj{}" ],
	  [ /\u{0112}/gu,
	    "\\={E}" ],
	  [ /\u{0113}/gu,
	    "\\={e}" ],
	  [ /\u{0114}/gu,
	    "\\u{E}" ],
	  [ /\u{0115}/gu,
	    "\\u{e}" ],
	  [ /\u{0116}/gu,
	    "\\.{E}" ],
	  [ /\u{0117}/gu,
	    "\\.{e}" ],
	  [ /\u{0118}/gu,
	    "\\k{E}" ],
	  [ /\u{0119}/gu,
	    "\\k{e}" ],
	  [ /\u{011A}/gu,
	    "\\v{E}" ],
	  [ /\u{011B}/gu,
	    "\\v{e}" ],
	  [ /\u{011C}/gu,
	    "\\^{G}" ],
	  [ /\u{011D}/gu,
	    "\\^{g}" ],
	  [ /\u{011E}/gu,
	    "\\u{G}" ],
	  [ /\u{011F}/gu,
	    "\\u{g}" ],
	  [ /\u{0120}/gu,
	    "\\.{G}" ],
	  [ /\u{0121}/gu,
	    "\\.{g}" ],
	  [ /\u{0122}/gu,
	    "\\c{G}" ],
	  [ /\u{0123}/gu,
	    "\\c{g}" ],
	  [ /\u{0124}/gu,
	    "\\^{H}" ],
	  [ /\u{0125}/gu,
	    "\\^{h}" ],
	  [ /\u{0126}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char40}" ],
	  [ /\u{0127}/gu,
	    "\\Elzxh{}" ],
	  [ /\u{0128}/gu,
	    "\\~{I}" ],
	  [ /\u{0129}/gu,
	    "\\~{\\i}" ],
	  [ /\u{012A}/gu,
	    "\\={I}" ],
	  [ /\u{012B}/gu,
	    "\\={\\i}" ],
	  [ /\u{012C}/gu,
	    "\\u{I}" ],
	  [ /\u{012D}/gu,
	    "\\u{\\i}" ],
	  [ /\u{012E}/gu,
	    "\\k{I}" ],
	  [ /\u{012F}/gu,
	    "\\k{i}" ],
	  [ /\u{0130}/gu,
	    "\\.{I}" ],
	  [ /\u{0131}/gu,
	    "\\i{}" ],
	  [ /\u{0132}/gu,
	    "IJ" ],
	  [ /\u{0133}/gu,
	    "ij" ],
	  [ /\u{0134}/gu,
	    "\\^{J}" ],
	  [ /\u{0135}/gu,
	    "\\^{\\j}" ],
	  [ /\u{0136}/gu,
	    "\\c{K}" ],
	  [ /\u{0137}/gu,
	    "\\c{k}" ],
	  [ /\u{0138}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char91}" ],
	  [ /\u{0139}/gu,
	    "\\'{L}" ],
	  [ /\u{013A}/gu,
	    "\\'{l}" ],
	  [ /\u{013B}/gu,
	    "\\c{L}" ],
	  [ /\u{013C}/gu,
	    "\\c{l}" ],
	  [ /\u{013D}/gu,
	    "\\v{L}" ],
	  [ /\u{013E}/gu,
	    "\\v{l}" ],
	  [ /\u{013F}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char201}" ],
	  [ /\u{0140}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char202}" ],
	  [ /\u{0141}/gu,
	    "\\L{}" ],
	  [ /\u{0142}/gu,
	    "\\l{}" ],
	  [ /\u{0143}/gu,
	    "\\'{N}" ],
	  [ /\u{0144}/gu,
	    "\\'{n}" ],
	  [ /\u{0145}/gu,
	    "\\c{N}" ],
	  [ /\u{0146}/gu,
	    "\\c{n}" ],
	  [ /\u{0147}/gu,
	    "\\v{N}" ],
	  [ /\u{0148}/gu,
	    "\\v{n}" ],
	  [ /\u{0149}/gu,
	    "'n" ],
	  [ /\u{014A}/gu,
	    "\\NG{}" ],
	  [ /\u{014B}/gu,
	    "\\ng{}" ],
	  [ /\u{014C}/gu,
	    "\\={O}" ],
	  [ /\u{014D}/gu,
	    "\\={o}" ],
	  [ /\u{014E}/gu,
	    "\\u{O}" ],
	  [ /\u{014F}/gu,
	    "\\u{o}" ],
	  [ /\u{0150}/gu,
	    "\\H{O}" ],
	  [ /\u{0151}/gu,
	    "\\H{o}" ],
	  [ /\u{0152}/gu,
	    "\\OE{}" ],
	  [ /\u{0153}/gu,
	    "\\oe{}" ],
	  [ /\u{0154}/gu,
	    "\\'{R}" ],
	  [ /\u{0155}/gu,
	    "\\'{r}" ],
	  [ /\u{0156}/gu,
	    "\\c{R}" ],
	  [ /\u{0157}/gu,
	    "\\c{r}" ],
	  [ /\u{0158}/gu,
	    "\\v{R}" ],
	  [ /\u{0159}/gu,
	    "\\v{r}" ],
	  [ /\u{015A}/gu,
	    "\\'{S}" ],
	  [ /\u{015B}/gu,
	    "\\'{s}" ],
	  [ /\u{015C}/gu,
	    "\\^{S}" ],
	  [ /\u{015D}/gu,
	    "\\^{s}" ],
	  [ /\u{015E}/gu,
	    "\\c{S}" ],
	  [ /\u{015F}/gu,
	    "\\c{s}" ],
	  [ /\u{0160}/gu,
	    "\\v{S}" ],
	  [ /\u{0161}/gu,
	    "\\v{s}" ],
	  [ /\u{0162}/gu,
	    "\\c{T}" ],
	  [ /\u{0163}/gu,
	    "\\c{t}" ],
	  [ /\u{0164}/gu,
	    "\\v{T}" ],
	  [ /\u{0165}/gu,
	    "\\v{t}" ],
	  [ /\u{0166}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char47}" ],
	  [ /\u{0167}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char63}" ],
	  [ /\u{0168}/gu,
	    "\\~{U}" ],
	  [ /\u{0169}/gu,
	    "\\~{u}" ],
	  [ /\u{016A}/gu,
	    "\\={U}" ],
	  [ /\u{016B}/gu,
	    "\\={u}" ],
	  [ /\u{016C}/gu,
	    "\\u{U}" ],
	  [ /\u{016D}/gu,
	    "\\u{u}" ],
	  [ /\u{016E}/gu,
	    "\\r{U}" ],
	  [ /\u{016F}/gu,
	    "\\r{u}" ],
	  [ /\u{0170}/gu,
	    "\\H{U}" ],
	  [ /\u{0171}/gu,
	    "\\H{u}" ],
	  [ /\u{0172}/gu,
	    "\\k{U}" ],
	  [ /\u{0173}/gu,
	    "\\k{u}" ],
	  [ /\u{0174}/gu,
	    "\\^{W}" ],
	  [ /\u{0175}/gu,
	    "\\^{w}" ],
	  [ /\u{0176}/gu,
	    "\\^{Y}" ],
	  [ /\u{0177}/gu,
	    "\\^{y}" ],
	  [ /\u{0178}/gu,
	    "\\\"{Y}" ],
	  [ /\u{0179}/gu,
	    "\\'{Z}" ],
	  [ /\u{017A}/gu,
	    "\\'{z}" ],
	  [ /\u{017B}/gu,
	    "\\.{Z}" ],
	  [ /\u{017C}/gu,
	    "\\.{z}" ],
	  [ /\u{017D}/gu,
	    "\\v{Z}" ],
	  [ /\u{017E}/gu,
	    "\\v{z}" ],
	  [ /\u{0195}/gu,
	    "\\texthvlig{}" ],
	  [ /\u{019E}/gu,
	    "\\textnrleg{}" ],
	  [ /\u{01AA}/gu,
	    "\\eth{}" ],
	  [ /\u{01BA}/gu,
	    "{\\fontencoding{LELA}\\selectfont\\char195}" ],
	  [ /\u{01C2}/gu,
	    "\\textdoublepipe{}" ],
	  [ /\u{01F5}/gu,
	    "\\'{g}" ],
	  [ /\u{0250}/gu,
	    "\\Elztrna{}" ],
	  [ /\u{0252}/gu,
	    "\\Elztrnsa{}" ],
	  [ /\u{0254}/gu,
	    "\\Elzopeno{}" ],
	  [ /\u{0256}/gu,
	    "\\Elzrtld{}" ],
	  [ /\u{0258}/gu,
	    "{\\fontencoding{LEIP}\\selectfont\\char61}" ],
	  [ /\u{0259}/gu,
	    "\\Elzschwa{}" ],
	  [ /\u{025B}/gu,
	    "\\varepsilon{}" ],
	  [ /\u{0263}/gu,
	    "\\Elzpgamma{}" ],
	  [ /\u{0264}/gu,
	    "\\Elzpbgam{}" ],
	  [ /\u{0265}/gu,
	    "\\Elztrnh{}" ],
	  [ /\u{026C}/gu,
	    "\\Elzbtdl{}" ],
	  [ /\u{026D}/gu,
	    "\\Elzrtll{}" ],
	  [ /\u{026F}/gu,
	    "\\Elztrnm{}" ],
	  [ /\u{0270}/gu,
	    "\\Elztrnmlr{}" ],
	  [ /\u{0271}/gu,
	    "\\Elzltlmr{}" ],
	  [ /\u{0272}/gu,
	    "\\Elzltln{}" ],
	  [ /\u{0273}/gu,
	    "\\Elzrtln{}" ],
	  [ /\u{0277}/gu,
	    "\\Elzclomeg{}" ],
	  [ /\u{0278}/gu,
	    "\\textphi{}" ],
	  [ /\u{0279}/gu,
	    "\\Elztrnr{}" ],
	  [ /\u{027A}/gu,
	    "\\Elztrnrl{}" ],
	  [ /\u{027B}/gu,
	    "\\Elzrttrnr{}" ],
	  [ /\u{027C}/gu,
	    "\\Elzrl{}" ],
	  [ /\u{027D}/gu,
	    "\\Elzrtlr{}" ],
	  [ /\u{027E}/gu,
	    "\\Elzfhr{}" ],
	  [ /\u{027F}/gu,
	    "{\\fontencoding{LEIP}\\selectfont\\char202}" ],
	  [ /\u{0282}/gu,
	    "\\Elzrtls{}" ],
	  [ /\u{0283}/gu,
	    "\\Elzesh{}" ],
	  [ /\u{0287}/gu,
	    "\\Elztrnt{}" ],
	  [ /\u{0288}/gu,
	    "\\Elzrtlt{}" ],
	  [ /\u{028A}/gu,
	    "\\Elzpupsil{}" ],
	  [ /\u{028B}/gu,
	    "\\Elzpscrv{}" ],
	  [ /\u{028C}/gu,
	    "\\Elzinvv{}" ],
	  [ /\u{028D}/gu,
	    "\\Elzinvw{}" ],
	  [ /\u{028E}/gu,
	    "\\Elztrny{}" ],
	  [ /\u{0290}/gu,
	    "\\Elzrtlz{}" ],
	  [ /\u{0292}/gu,
	    "\\Elzyogh{}" ],
	  [ /\u{0294}/gu,
	    "\\Elzglst{}" ],
	  [ /\u{0295}/gu,
	    "\\Elzreglst{}" ],
	  [ /\u{0296}/gu,
	    "\\Elzinglst{}" ],
	  [ /\u{029E}/gu,
	    "\\textturnk{}" ],
	  [ /\u{02A4}/gu,
	    "\\Elzdyogh{}" ],
	  [ /\u{02A7}/gu,
	    "\\Elztesh{}" ],
	  [ /\u{02C7}/gu,
	    "\\textasciicaron{}" ],
	  [ /\u{02C8}/gu,
	    "\\Elzverts{}" ],
	  [ /\u{02CC}/gu,
	    "\\Elzverti{}" ],
	  [ /\u{02D0}/gu,
	    "\\Elzlmrk{}" ],
	  [ /\u{02D1}/gu,
	    "\\Elzhlmrk{}" ],
	  [ /\u{02D2}/gu,
	    "\\Elzsbrhr{}" ],
	  [ /\u{02D3}/gu,
	    "\\Elzsblhr{}" ],
	  [ /\u{02D4}/gu,
	    "\\Elzrais{}" ],
	  [ /\u{02D5}/gu,
	    "\\Elzlow{}" ],
	  [ /\u{02D8}/gu,
	    "\\textasciibreve{}" ],
	  [ /\u{02D9}/gu,
	    "\\textperiodcentered{}" ],
	  [ /\u{02DA}/gu,
	    "\\r{}" ],
	  [ /\u{02DB}/gu,
	    "\\k{}" ],
	  [ /\u{02DC}/gu,
	    "\\texttildelow{}" ],
	  [ /\u{02DD}/gu,
	    "\\H{}" ],
	  [ /\u{02E5}/gu,
	    "\\tone{55}" ],
	  [ /\u{02E6}/gu,
	    "\\tone{44}" ],
	  [ /\u{02E7}/gu,
	    "\\tone{33}" ],
	  [ /\u{02E8}/gu,
	    "\\tone{22}" ],
	  [ /\u{02E9}/gu,
	    "\\tone{11}" ],
	  [ /\u{0300}/gu,
	    "\\`" ],
	  [ /\u{0301}/gu,
	    "\\'" ],
	  [ /\u{0302}/gu,
	    "\\^" ],
	  [ /\u{0303}/gu,
	    "\\~" ],
	  [ /\u{0304}/gu,
	    "\\=" ],
	  [ /\u{0306}/gu,
	    "\\u" ],
	  [ /\u{0307}/gu,
	    "\\." ],
	  [ /\u{0308}/gu,
	    "\\\"" ],
	  [ /\u{030A}/gu,
	    "\\r" ],
	  [ /\u{030B}/gu,
	    "\\H" ],
	  [ /\u{030C}/gu,
	    "\\v" ],
	  [ /\u{030F}/gu,
	    "\\cyrchar\\C" ],
	  [ /\u{0311}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char177}" ],
	  [ /\u{0318}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char184}" ],
	  [ /\u{0319}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char185}" ],
	  [ /\u{0321}/gu,
	    "\\Elzpalh{}" ],
	  [ /\u{0322}/gu,
	    "\\Elzrh{}" ],
	  [ /\u{0327}/gu,
	    "\\c" ],
	  [ /\u{0328}/gu,
	    "\\k" ],
	  [ /\u{032A}/gu,
	    "\\Elzsbbrg{}" ],
	  [ /\u{032B}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char203}" ],
	  [ /\u{032F}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char207}" ],
	  [ /\u{0335}/gu,
	    "\\Elzxl{}" ],
	  [ /\u{0336}/gu,
	    "\\Elzbar{}" ],
	  [ /\u{0337}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char215}" ],
	  [ /\u{0338}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char216}" ],
	  [ /\u{033A}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char218}" ],
	  [ /\u{033B}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char219}" ],
	  [ /\u{033C}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char220}" ],
	  [ /\u{033D}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char221}" ],
	  [ /\u{0361}/gu,
	    "{\\fontencoding{LECO}\\selectfont\\char225}" ],
	  [ /\u{0386}/gu,
	    "\\'{A}" ],
	  [ /\u{0388}/gu,
	    "\\'{E}" ],
	  [ /\u{0389}/gu,
	    "\\'{H}" ],
	  [ /\u{038A}/gu,
	    "\\'{}{I}" ],
	  [ /\u{038C}/gu,
	    "\\'{}O" ],
	  [ /\u{038E}/gu,
	    "\\mathrm{'Y}" ],
	  [ /\u{038F}/gu,
	    "\\mathrm{'\\Omega}" ],
	  [ /\u{0390}/gu,
	    "\\acute{\\ddot{\\iota}}" ],
	  [ /\u{0391}/gu,
	    "\\ensuremath{\\Alpha}" ],
	  [ /\u{0392}/gu,
	    "\\ensuremath{\\Beta}" ],
	  [ /\u{0393}/gu,
	    "\\ensuremath{\\Gamma}" ],
	  [ /\u{0394}/gu,
	    "\\ensuremath{\\Delta}" ],
	  [ /\u{0395}/gu,
	    "\\ensuremath{\\Epsilon}" ],
	  [ /\u{0396}/gu,
	    "\\ensuremath{\\Zeta}" ],
	  [ /\u{0397}/gu,
	    "\\ensuremath{\\Eta}" ],
	  [ /\u{0398}/gu,
	    "\\ensuremath{\\Theta}" ],
	  [ /\u{0399}/gu,
	    "\\ensuremath{\\Iota}" ],
	  [ /\u{039A}/gu,
	    "\\ensuremath{\\Kappa}" ],
	  [ /\u{039B}/gu,
	    "\\ensuremath{\\Lambda}" ],
	  [ /\u{039E}/gu,
	    "\\ensuremath{\\Xi}" ],
	  [ /\u{03A0}/gu,
	    "\\ensuremath{\\Pi}" ],
	  [ /\u{03A1}/gu,
	    "\\ensuremath{\\Rho}" ],
	  [ /\u{03A3}/gu,
	    "\\ensuremath{\\Sigma}" ],
	  [ /\u{03A4}/gu,
	    "\\ensuremath{\\Tau}" ],
	  [ /\u{03A5}/gu,
	    "\\ensuremath{\\Upsilon}" ],
	  [ /\u{03A6}/gu,
	    "\\ensuremath{\\Phi}" ],
	  [ /\u{03A7}/gu,
	    "\\ensuremath{\\Chi}" ],
	  [ /\u{03A8}/gu,
	    "\\ensuremath{\\Psi}" ],
	  [ /\u{03A9}/gu,
	    "\\ensuremath{\\Omega}" ],
	  [ /\u{03AA}/gu,
	    "\\mathrm{\\ddot{I}}" ],
	  [ /\u{03AB}/gu,
	    "\\mathrm{\\ddot{Y}}" ],
	  [ /\u{03AC}/gu,
	    "\\'{$\\alpha$}" ],
	  [ /\u{03AD}/gu,
	    "\\acute{\\epsilon}" ],
	  [ /\u{03AE}/gu,
	    "\\acute{\\eta}" ],
	  [ /\u{03AF}/gu,
	    "\\acute{\\iota}" ],
	  [ /\u{03B0}/gu,
	    "\\acute{\\ddot{\\upsilon}}" ],
	  [ /\u{03B1}/gu,
	    "\\ensuremath{\\alpha}" ],
	  [ /\u{03B2}/gu,
	    "\\ensuremath{\\beta}" ],
	  [ /\u{03B3}/gu,
	    "\\ensuremath{\\gamma}" ],
	  [ /\u{03B4}/gu,
	    "\\ensuremath{\\delta}" ],
	  [ /\u{03B5}/gu,
	    "\\ensuremath{\\epsilon}" ],
	  [ /\u{03B6}/gu,
	    "\\ensuremath{\\zeta}" ],
	  [ /\u{03B7}/gu,
	    "\\ensuremath{\\eta}" ],
	  [ /\u{03B8}/gu,
	    "\\texttheta{}" ],
	  [ /\u{03B9}/gu,
	    "\\ensuremath{\\iota}" ],
	  [ /\u{03BA}/gu,
	    "\\ensuremath{\\kappa}" ],
	  [ /\u{03BB}/gu,
	    "\\ensuremath{\\lambda}" ],
	  [ /\u{03BC}/gu,
	    "\\ensuremath{\\mu}" ],
	  [ /\u{03BD}/gu,
	    "\\ensuremath{\\nu}" ],
	  [ /\u{03BE}/gu,
	    "\\ensuremath{\\xi}" ],
	  [ /\u{03C0}/gu,
	    "\\ensuremath{\\pi}" ],
	  [ /\u{03C1}/gu,
	    "\\ensuremath{\\rho}" ],
	  [ /\u{03C2}/gu,
	    "\\ensuremath{\\varsigma}" ],
	  [ /\u{03C3}/gu,
	    "\\ensuremath{\\sigma}" ],
	  [ /\u{03C4}/gu,
	    "\\ensuremath{\\tau}" ],
	  [ /\u{03C5}/gu,
	    "\\ensuremath{\\upsilon}" ],
	  [ /\u{03C6}/gu,
	    "\\ensuremath{\\varphi}" ],
	  [ /\u{03C7}/gu,
	    "\\ensuremath{\\chi}" ],
	  [ /\u{03C8}/gu,
	    "\\ensuremath{\\psi}" ],
	  [ /\u{03C9}/gu,
	    "\\ensuremath{\\omega}" ],
	  [ /\u{03CA}/gu,
	    "\\ensuremath{\\ddot{\\iota}}" ],
	  [ /\u{03CB}/gu,
	    "\\ensuremath{\\ddot{\\upsilon}}" ],
	  [ /\u{03CC}/gu,
	    "\\'{o}" ],
	  [ /\u{03CD}/gu,
	    "\\acute{\\upsilon}" ],
	  [ /\u{03CE}/gu,
	    "\\acute{\\omega}" ],
	  [ /\u{03D0}/gu,
	    "\\Pisymbol{ppi022}{87}" ],
	  [ /\u{03D1}/gu,
	    "\\textvartheta{}" ],
	  [ /\u{03D2}/gu,
	    "\\ensuremath{\\Upsilon}" ],
	  [ /\u{03D5}/gu,
	    "\\ensuremath{\\phi}" ],
	  [ /\u{03D6}/gu,
	    "\\ensuremath{\\varpi}" ],
	  [ /\u{03DA}/gu,
	    "\\Stigma{}" ],
	  [ /\u{03DC}/gu,
	    "\\Digamma{}" ],
	  [ /\u{03DD}/gu,
	    "\\digamma{}" ],
	  [ /\u{03DE}/gu,
	    "\\Koppa{}" ],
	  [ /\u{03E0}/gu,
	    "\\Sampi{}" ],
	  [ /\u{03F0}/gu,
	    "\\varkappa{}" ],
	  [ /\u{03F1}/gu,
	    "\\varrho{}" ],
	  [ /\u{03F4}/gu,
	    "\\textTheta{}" ],
	  [ /\u{03F6}/gu,
	    "\\backepsilon{}" ],
	  [ /\u{0401}/gu,
	    "\\cyrchar\\CYRYO{}" ],
	  [ /\u{0402}/gu,
	    "\\cyrchar\\CYRDJE{}" ],
	  [ /\u{0403}/gu,
	    "\\cyrchar{\\'\\CYRG}" ],
	  [ /\u{0404}/gu,
	    "\\cyrchar\\CYRIE{}" ],
	  [ /\u{0405}/gu,
	    "\\cyrchar\\CYRDZE{}" ],
	  [ /\u{0406}/gu,
	    "\\cyrchar\\CYRII{}" ],
	  [ /\u{0407}/gu,
	    "\\cyrchar\\CYRYI{}" ],
	  [ /\u{0408}/gu,
	    "\\cyrchar\\CYRJE{}" ],
	  [ /\u{0409}/gu,
	    "\\cyrchar\\CYRLJE{}" ],
	  [ /\u{040A}/gu,
	    "\\cyrchar\\CYRNJE{}" ],
	  [ /\u{040B}/gu,
	    "\\cyrchar\\CYRTSHE{}" ],
	  [ /\u{040C}/gu,
	    "\\cyrchar{\\'\\CYRK}" ],
	  [ /\u{040E}/gu,
	    "\\cyrchar\\CYRUSHRT{}" ],
	  [ /\u{040F}/gu,
	    "\\cyrchar\\CYRDZHE{}" ],
	  [ /\u{0410}/gu,
	    "\\cyrchar\\CYRA{}" ],
	  [ /\u{0411}/gu,
	    "\\cyrchar\\CYRB{}" ],
	  [ /\u{0412}/gu,
	    "\\cyrchar\\CYRV{}" ],
	  [ /\u{0413}/gu,
	    "\\cyrchar\\CYRG{}" ],
	  [ /\u{0414}/gu,
	    "\\cyrchar\\CYRD{}" ],
	  [ /\u{0415}/gu,
	    "\\cyrchar\\CYRE{}" ],
	  [ /\u{0416}/gu,
	    "\\cyrchar\\CYRZH{}" ],
	  [ /\u{0417}/gu,
	    "\\cyrchar\\CYRZ{}" ],
	  [ /\u{0418}/gu,
	    "\\cyrchar\\CYRI{}" ],
	  [ /\u{0419}/gu,
	    "\\cyrchar\\CYRISHRT{}" ],
	  [ /\u{041A}/gu,
	    "\\cyrchar\\CYRK{}" ],
	  [ /\u{041B}/gu,
	    "\\cyrchar\\CYRL{}" ],
	  [ /\u{041C}/gu,
	    "\\cyrchar\\CYRM{}" ],
	  [ /\u{041D}/gu,
	    "\\cyrchar\\CYRN{}" ],
	  [ /\u{041E}/gu,
	    "\\cyrchar\\CYRO{}" ],
	  [ /\u{041F}/gu,
	    "\\cyrchar\\CYRP{}" ],
	  [ /\u{0420}/gu,
	    "\\cyrchar\\CYRR{}" ],
	  [ /\u{0421}/gu,
	    "\\cyrchar\\CYRS{}" ],
	  [ /\u{0422}/gu,
	    "\\cyrchar\\CYRT{}" ],
	  [ /\u{0423}/gu,
	    "\\cyrchar\\CYRU{}" ],
	  [ /\u{0424}/gu,
	    "\\cyrchar\\CYRF{}" ],
	  [ /\u{0425}/gu,
	    "\\cyrchar\\CYRH{}" ],
	  [ /\u{0426}/gu,
	    "\\cyrchar\\CYRC{}" ],
	  [ /\u{0427}/gu,
	    "\\cyrchar\\CYRCH{}" ],
	  [ /\u{0428}/gu,
	    "\\cyrchar\\CYRSH{}" ],
	  [ /\u{0429}/gu,
	    "\\cyrchar\\CYRSHCH{}" ],
	  [ /\u{042A}/gu,
	    "\\cyrchar\\CYRHRDSN{}" ],
	  [ /\u{042B}/gu,
	    "\\cyrchar\\CYRERY{}" ],
	  [ /\u{042C}/gu,
	    "\\cyrchar\\CYRSFTSN{}" ],
	  [ /\u{042D}/gu,
	    "\\cyrchar\\CYREREV{}" ],
	  [ /\u{042E}/gu,
	    "\\cyrchar\\CYRYU{}" ],
	  [ /\u{042F}/gu,
	    "\\cyrchar\\CYRYA{}" ],
	  [ /\u{0430}/gu,
	    "\\cyrchar\\cyra{}" ],
	  [ /\u{0431}/gu,
	    "\\cyrchar\\cyrb{}" ],
	  [ /\u{0432}/gu,
	    "\\cyrchar\\cyrv{}" ],
	  [ /\u{0433}/gu,
	    "\\cyrchar\\cyrg{}" ],
	  [ /\u{0434}/gu,
	    "\\cyrchar\\cyrd{}" ],
	  [ /\u{0435}/gu,
	    "\\cyrchar\\cyre{}" ],
	  [ /\u{0436}/gu,
	    "\\cyrchar\\cyrzh{}" ],
	  [ /\u{0437}/gu,
	    "\\cyrchar\\cyrz{}" ],
	  [ /\u{0438}/gu,
	    "\\cyrchar\\cyri{}" ],
	  [ /\u{0439}/gu,
	    "\\cyrchar\\cyrishrt{}" ],
	  [ /\u{043A}/gu,
	    "\\cyrchar\\cyrk{}" ],
	  [ /\u{043B}/gu,
	    "\\cyrchar\\cyrl{}" ],
	  [ /\u{043C}/gu,
	    "\\cyrchar\\cyrm{}" ],
	  [ /\u{043D}/gu,
	    "\\cyrchar\\cyrn{}" ],
	  [ /\u{043E}/gu,
	    "\\cyrchar\\cyro{}" ],
	  [ /\u{043F}/gu,
	    "\\cyrchar\\cyrp{}" ],
	  [ /\u{0440}/gu,
	    "\\cyrchar\\cyrr{}" ],
	  [ /\u{0441}/gu,
	    "\\cyrchar\\cyrs{}" ],
	  [ /\u{0442}/gu,
	    "\\cyrchar\\cyrt{}" ],
	  [ /\u{0443}/gu,
	    "\\cyrchar\\cyru{}" ],
	  [ /\u{0444}/gu,
	    "\\cyrchar\\cyrf{}" ],
	  [ /\u{0445}/gu,
	    "\\cyrchar\\cyrh{}" ],
	  [ /\u{0446}/gu,
	    "\\cyrchar\\cyrc{}" ],
	  [ /\u{0447}/gu,
	    "\\cyrchar\\cyrch{}" ],
	  [ /\u{0448}/gu,
	    "\\cyrchar\\cyrsh{}" ],
	  [ /\u{0449}/gu,
	    "\\cyrchar\\cyrshch{}" ],
	  [ /\u{044A}/gu,
	    "\\cyrchar\\cyrhrdsn{}" ],
	  [ /\u{044B}/gu,
	    "\\cyrchar\\cyrery{}" ],
	  [ /\u{044C}/gu,
	    "\\cyrchar\\cyrsftsn{}" ],
	  [ /\u{044D}/gu,
	    "\\cyrchar\\cyrerev{}" ],
	  [ /\u{044E}/gu,
	    "\\cyrchar\\cyryu{}" ],
	  [ /\u{044F}/gu,
	    "\\cyrchar\\cyrya{}" ],
	  [ /\u{0451}/gu,
	    "\\cyrchar\\cyryo{}" ],
	  [ /\u{0452}/gu,
	    "\\cyrchar\\cyrdje{}" ],
	  [ /\u{0453}/gu,
	    "\\cyrchar{\\'\\cyrg}" ],
	  [ /\u{0454}/gu,
	    "\\cyrchar\\cyrie{}" ],
	  [ /\u{0455}/gu,
	    "\\cyrchar\\cyrdze{}" ],
	  [ /\u{0456}/gu,
	    "\\cyrchar\\cyrii{}" ],
	  [ /\u{0457}/gu,
	    "\\cyrchar\\cyryi{}" ],
	  [ /\u{0458}/gu,
	    "\\cyrchar\\cyrje{}" ],
	  [ /\u{0459}/gu,
	    "\\cyrchar\\cyrlje{}" ],
	  [ /\u{045A}/gu,
	    "\\cyrchar\\cyrnje{}" ],
	  [ /\u{045B}/gu,
	    "\\cyrchar\\cyrtshe{}" ],
	  [ /\u{045C}/gu,
	    "\\cyrchar{\\'\\cyrk}" ],
	  [ /\u{045E}/gu,
	    "\\cyrchar\\cyrushrt{}" ],
	  [ /\u{045F}/gu,
	    "\\cyrchar\\cyrdzhe{}" ],
	  [ /\u{0460}/gu,
	    "\\cyrchar\\CYROMEGA{}" ],
	  [ /\u{0461}/gu,
	    "\\cyrchar\\cyromega{}" ],
	  [ /\u{0462}/gu,
	    "\\cyrchar\\CYRYAT{}" ],
	  [ /\u{0464}/gu,
	    "\\cyrchar\\CYRIOTE{}" ],
	  [ /\u{0465}/gu,
	    "\\cyrchar\\cyriote{}" ],
	  [ /\u{0466}/gu,
	    "\\cyrchar\\CYRLYUS{}" ],
	  [ /\u{0467}/gu,
	    "\\cyrchar\\cyrlyus{}" ],
	  [ /\u{0468}/gu,
	    "\\cyrchar\\CYRIOTLYUS{}" ],
	  [ /\u{0469}/gu,
	    "\\cyrchar\\cyriotlyus{}" ],
	  [ /\u{046A}/gu,
	    "\\cyrchar\\CYRBYUS{}" ],
	  [ /\u{046C}/gu,
	    "\\cyrchar\\CYRIOTBYUS{}" ],
	  [ /\u{046D}/gu,
	    "\\cyrchar\\cyriotbyus{}" ],
	  [ /\u{046E}/gu,
	    "\\cyrchar\\CYRKSI{}" ],
	  [ /\u{046F}/gu,
	    "\\cyrchar\\cyrksi{}" ],
	  [ /\u{0470}/gu,
	    "\\cyrchar\\CYRPSI{}" ],
	  [ /\u{0471}/gu,
	    "\\cyrchar\\cyrpsi{}" ],
	  [ /\u{0472}/gu,
	    "\\cyrchar\\CYRFITA{}" ],
	  [ /\u{0474}/gu,
	    "\\cyrchar\\CYRIZH{}" ],
	  [ /\u{0478}/gu,
	    "\\cyrchar\\CYRUK{}" ],
	  [ /\u{0479}/gu,
	    "\\cyrchar\\cyruk{}" ],
	  [ /\u{047A}/gu,
	    "\\cyrchar\\CYROMEGARND{}" ],
	  [ /\u{047B}/gu,
	    "\\cyrchar\\cyromegarnd{}" ],
	  [ /\u{047C}/gu,
	    "\\cyrchar\\CYROMEGATITLO{}" ],
	  [ /\u{047D}/gu,
	    "\\cyrchar\\cyromegatitlo{}" ],
	  [ /\u{047E}/gu,
	    "\\cyrchar\\CYROT{}" ],
	  [ /\u{047F}/gu,
	    "\\cyrchar\\cyrot{}" ],
	  [ /\u{0480}/gu,
	    "\\cyrchar\\CYRKOPPA{}" ],
	  [ /\u{0481}/gu,
	    "\\cyrchar\\cyrkoppa{}" ],
	  [ /\u{0482}/gu,
	    "\\cyrchar\\cyrthousands{}" ],
	  [ /\u{0488}/gu,
	    "\\cyrchar\\cyrhundredthousands{}" ],
	  [ /\u{0489}/gu,
	    "\\cyrchar\\cyrmillions{}" ],
	  [ /\u{048C}/gu,
	    "\\cyrchar\\CYRSEMISFTSN{}" ],
	  [ /\u{048D}/gu,
	    "\\cyrchar\\cyrsemisftsn{}" ],
	  [ /\u{048E}/gu,
	    "\\cyrchar\\CYRRTICK{}" ],
	  [ /\u{048F}/gu,
	    "\\cyrchar\\cyrrtick{}" ],
	  [ /\u{0490}/gu,
	    "\\cyrchar\\CYRGUP{}" ],
	  [ /\u{0491}/gu,
	    "\\cyrchar\\cyrgup{}" ],
	  [ /\u{0492}/gu,
	    "\\cyrchar\\CYRGHCRS{}" ],
	  [ /\u{0493}/gu,
	    "\\cyrchar\\cyrghcrs{}" ],
	  [ /\u{0494}/gu,
	    "\\cyrchar\\CYRGHK{}" ],
	  [ /\u{0495}/gu,
	    "\\cyrchar\\cyrghk{}" ],
	  [ /\u{0496}/gu,
	    "\\cyrchar\\CYRZHDSC{}" ],
	  [ /\u{0497}/gu,
	    "\\cyrchar\\cyrzhdsc{}" ],
	  [ /\u{0498}/gu,
	    "\\cyrchar\\CYRZDSC{}" ],
	  [ /\u{0499}/gu,
	    "\\cyrchar\\cyrzdsc{}" ],
	  [ /\u{049A}/gu,
	    "\\cyrchar\\CYRKDSC{}" ],
	  [ /\u{049B}/gu,
	    "\\cyrchar\\cyrkdsc{}" ],
	  [ /\u{049C}/gu,
	    "\\cyrchar\\CYRKVCRS{}" ],
	  [ /\u{049D}/gu,
	    "\\cyrchar\\cyrkvcrs{}" ],
	  [ /\u{049E}/gu,
	    "\\cyrchar\\CYRKHCRS{}" ],
	  [ /\u{049F}/gu,
	    "\\cyrchar\\cyrkhcrs{}" ],
	  [ /\u{04A0}/gu,
	    "\\cyrchar\\CYRKBEAK{}" ],
	  [ /\u{04A1}/gu,
	    "\\cyrchar\\cyrkbeak{}" ],
	  [ /\u{04A2}/gu,
	    "\\cyrchar\\CYRNDSC{}" ],
	  [ /\u{04A3}/gu,
	    "\\cyrchar\\cyrndsc{}" ],
	  [ /\u{04A4}/gu,
	    "\\cyrchar\\CYRNG{}" ],
	  [ /\u{04A5}/gu,
	    "\\cyrchar\\cyrng{}" ],
	  [ /\u{04A6}/gu,
	    "\\cyrchar\\CYRPHK{}" ],
	  [ /\u{04A7}/gu,
	    "\\cyrchar\\cyrphk{}" ],
	  [ /\u{04A8}/gu,
	    "\\cyrchar\\CYRABHHA{}" ],
	  [ /\u{04A9}/gu,
	    "\\cyrchar\\cyrabhha{}" ],
	  [ /\u{04AA}/gu,
	    "\\cyrchar\\CYRSDSC{}" ],
	  [ /\u{04AB}/gu,
	    "\\cyrchar\\cyrsdsc{}" ],
	  [ /\u{04AC}/gu,
	    "\\cyrchar\\CYRTDSC{}" ],
	  [ /\u{04AD}/gu,
	    "\\cyrchar\\cyrtdsc{}" ],
	  [ /\u{04AE}/gu,
	    "\\cyrchar\\CYRY{}" ],
	  [ /\u{04AF}/gu,
	    "\\cyrchar\\cyry{}" ],
	  [ /\u{04B0}/gu,
	    "\\cyrchar\\CYRYHCRS{}" ],
	  [ /\u{04B1}/gu,
	    "\\cyrchar\\cyryhcrs{}" ],
	  [ /\u{04B2}/gu,
	    "\\cyrchar\\CYRHDSC{}" ],
	  [ /\u{04B3}/gu,
	    "\\cyrchar\\cyrhdsc{}" ],
	  [ /\u{04B4}/gu,
	    "\\cyrchar\\CYRTETSE{}" ],
	  [ /\u{04B5}/gu,
	    "\\cyrchar\\cyrtetse{}" ],
	  [ /\u{04B6}/gu,
	    "\\cyrchar\\CYRCHRDSC{}" ],
	  [ /\u{04B7}/gu,
	    "\\cyrchar\\cyrchrdsc{}" ],
	  [ /\u{04B8}/gu,
	    "\\cyrchar\\CYRCHVCRS{}" ],
	  [ /\u{04B9}/gu,
	    "\\cyrchar\\cyrchvcrs{}" ],
	  [ /\u{04BA}/gu,
	    "\\cyrchar\\CYRSHHA{}" ],
	  [ /\u{04BB}/gu,
	    "\\cyrchar\\cyrshha{}" ],
	  [ /\u{04BC}/gu,
	    "\\cyrchar\\CYRABHCH{}" ],
	  [ /\u{04BD}/gu,
	    "\\cyrchar\\cyrabhch{}" ],
	  [ /\u{04BE}/gu,
	    "\\cyrchar\\CYRABHCHDSC{}" ],
	  [ /\u{04BF}/gu,
	    "\\cyrchar\\cyrabhchdsc{}" ],
	  [ /\u{04C0}/gu,
	    "\\cyrchar\\CYRpalochka{}" ],
	  [ /\u{04C3}/gu,
	    "\\cyrchar\\CYRKHK{}" ],
	  [ /\u{04C4}/gu,
	    "\\cyrchar\\cyrkhk{}" ],
	  [ /\u{04C7}/gu,
	    "\\cyrchar\\CYRNHK{}" ],
	  [ /\u{04C8}/gu,
	    "\\cyrchar\\cyrnhk{}" ],
	  [ /\u{04CB}/gu,
	    "\\cyrchar\\CYRCHLDSC{}" ],
	  [ /\u{04CC}/gu,
	    "\\cyrchar\\cyrchldsc{}" ],
	  [ /\u{04D4}/gu,
	    "\\cyrchar\\CYRAE{}" ],
	  [ /\u{04D5}/gu,
	    "\\cyrchar\\cyrae{}" ],
	  [ /\u{04D8}/gu,
	    "\\cyrchar\\CYRSCHWA{}" ],
	  [ /\u{04D9}/gu,
	    "\\cyrchar\\cyrschwa{}" ],
	  [ /\u{04E0}/gu,
	    "\\cyrchar\\CYRABHDZE{}" ],
	  [ /\u{04E1}/gu,
	    "\\cyrchar\\cyrabhdze{}" ],
	  [ /\u{04E8}/gu,
	    "\\cyrchar\\CYROTLD{}" ],
	  [ /\u{04E9}/gu,
	    "\\cyrchar\\cyrotld{}" ],
	  [ /\u{2002}/gu,
	    "\\hspace{0.6em}" ],
	  [ /\u{2003}/gu,
	    "\\hspace{1em}" ],
	  [ /\u{2004}/gu,
	    "\\hspace{0.33em}" ],
	  [ /\u{2005}/gu,
	    "\\hspace{0.25em}" ],
	  [ /\u{2006}/gu,
	    "\\hspace{0.166em}" ],
	  [ /\u{2007}/gu,
	    "\\hphantom{0}" ],
	  [ /\u{2008}/gu,
	    "\\hphantom{,}" ],
	  [ /\u{2009}/gu,
	    "\\hspace{0.167em}" ],
	  [ /\u{200A}/gu,
	    "\\mkern1mu{}" ],
	  [ /\u{2010}/gu,
	    "-" ],
	  [ /\u{2013}/gu,
	    "\\textendash{}" ],
	  [ /\u{2014}/gu,
	    "\\textemdash{}" ],
	  [ /\u{2015}/gu,
	    "\\rule{1em}{1pt}" ],
	  [ /\u{2016}/gu,
	    "\\Vert{}" ],
	  [ /\u{2018}/gu,
	    "`" ],
	  [ /\u{2019}/gu,
	    "'" ],
	  [ /\u{201B}/gu,
	    "\\Elzreapos{}" ],
	  [ /\u{201C}/gu,
	    "\\textquotedblleft{}" ],
	  [ /\u{201D}/gu,
	    "\\textquotedblright{}" ],
	  [ /\u{201E}/gu,
	    ",," ],
	  [ /\u{2020}/gu,
	    "\\textdagger{}" ],
	  [ /\u{2021}/gu,
	    "\\textdaggerdbl{}" ],
	  [ /\u{2022}/gu,
	    "\\textbullet{}" ],
	  [ /\u{2025}/gu,
	    ".." ],
	  [ /\u{2026}/gu,
	    "\\ldots{}" ],
	  [ /\u{2030}/gu,
	    "\\textperthousand{}" ],
	  [ /\u{2031}/gu,
	    "\\textpertenthousand{}" ],
	  [ /\u{2032}/gu,
	    "\\ensuremath{'}" ],
	  [ /\u{2033}/gu,
	    "\\ensuremath{''}" ],
	  [ /\u{2034}/gu,
	    "\\ensuremath{'''}" ],
	  [ /\u{2035}/gu,
	    "\\backprime{}" ],
	  [ /\u{2039}/gu,
	    "\\guilsinglleft{}" ],
	  [ /\u{203A}/gu,
	    "\\guilsinglright{}" ],
	  [ /\u{2057}/gu,
	    "''''" ],
	  [ /\u{205F}/gu,
	    "\\mkern4mu{}" ],
	  [ /\u{2060}/gu,
	    "\\nolinebreak{}" ],
	  [ /\u{20A7}/gu,
	    "\\ensuremath{\\Elzpes}" ],
	  [ /\u{20AC}/gu,
	    "\\mbox{\\texteuro}{}" ],
	  [ /\u{20DB}/gu,
	    "\\dddot{}" ],
	  [ /\u{20DC}/gu,
	    "\\ddddot{}" ],
	  [ /\u{2102}/gu,
	    "\\mathbb{C}" ],
	  [ /\u{210A}/gu,
	    "\\mathscr{g}" ],
	  [ /\u{210B}/gu,
	    "\\mathscr{H}" ],
	  [ /\u{210C}/gu,
	    "\\mathfrak{H}" ],
	  [ /\u{210D}/gu,
	    "\\mathbb{H}" ],
	  [ /\u{210F}/gu,
	    "\\hslash{}" ],
	  [ /\u{2110}/gu,
	    "\\mathscr{I}" ],
	  [ /\u{2111}/gu,
	    "\\mathfrak{I}" ],
	  [ /\u{2112}/gu,
	    "\\mathscr{L}" ],
	  [ /\u{2113}/gu,
	    "\\mathscr{l}" ],
	  [ /\u{2115}/gu,
	    "\\mathbb{N}" ],
	  [ /\u{2116}/gu,
	    "\\cyrchar\\textnumero{}" ],
	  [ /\u{2118}/gu,
	    "\\wp{}" ],
	  [ /\u{2119}/gu,
	    "\\mathbb{P}" ],
	  [ /\u{211A}/gu,
	    "\\mathbb{Q}" ],
	  [ /\u{211B}/gu,
	    "\\mathscr{R}" ],
	  [ /\u{211C}/gu,
	    "\\mathfrak{R}" ],
	  [ /\u{211D}/gu,
	    "\\mathbb{R}" ],
	  [ /\u{211E}/gu,
	    "\\Elzxrat{}" ],
	  [ /\u{2122}/gu,
	    "\\texttrademark{}" ],
	  [ /\u{2124}/gu,
	    "\\mathbb{Z}" ],
	  [ /\u{2126}/gu,
	    "\\Omega{}" ],
	  [ /\u{2127}/gu,
	    "\\mho{}" ],
	  [ /\u{2128}/gu,
	    "\\mathfrak{Z}" ],
	  [ /\u{2129}/gu,
	    "\\ElsevierGlyph{2129}" ],
	  [ /\u{212B}/gu,
	    "\\AA{}" ],
	  [ /\u{212C}/gu,
	    "\\mathscr{B}" ],
	  [ /\u{212D}/gu,
	    "\\mathfrak{C}" ],
	  [ /\u{212F}/gu,
	    "\\mathscr{e}" ],
	  [ /\u{2130}/gu,
	    "\\mathscr{E}" ],
	  [ /\u{2131}/gu,
	    "\\mathscr{F}" ],
	  [ /\u{2133}/gu,
	    "\\mathscr{M}" ],
	  [ /\u{2134}/gu,
	    "\\mathscr{o}" ],
	  [ /\u{2135}/gu,
	    "\\aleph{}" ],
	  [ /\u{2136}/gu,
	    "\\beth{}" ],
	  [ /\u{2137}/gu,
	    "\\gimel{}" ],
	  [ /\u{2138}/gu,
	    "\\daleth{}" ],
	  [ /\u{2153}/gu,
	    "\\textfrac{1}{3}" ],
	  [ /\u{2154}/gu,
	    "\\textfrac{2}{3}" ],
	  [ /\u{2155}/gu,
	    "\\textfrac{1}{5}" ],
	  [ /\u{2156}/gu,
	    "\\textfrac{2}{5}" ],
	  [ /\u{2157}/gu,
	    "\\textfrac{3}{5}" ],
	  [ /\u{2158}/gu,
	    "\\textfrac{4}{5}" ],
	  [ /\u{2159}/gu,
	    "\\textfrac{1}{6}" ],
	  [ /\u{215A}/gu,
	    "\\textfrac{5}{6}" ],
	  [ /\u{215B}/gu,
	    "\\textfrac{1}{8}" ],
	  [ /\u{215C}/gu,
	    "\\textfrac{3}{8}" ],
	  [ /\u{215D}/gu,
	    "\\textfrac{5}{8}" ],
	  [ /\u{215E}/gu,
	    "\\textfrac{7}{8}" ],
	  [ /\u{2190}/gu,
	    "\\leftarrow{}" ],
	  [ /\u{2191}/gu,
	    "\\uparrow{}" ],
	  [ /\u{2192}/gu,
	    "\\rightarrow{}" ],
	  [ /\u{2193}/gu,
	    "\\downarrow{}" ],
	  [ /\u{2194}/gu,
	    "\\leftrightarrow{}" ],
	  [ /\u{2195}/gu,
	    "\\updownarrow{}" ],
	  [ /\u{2196}/gu,
	    "\\nwarrow{}" ],
	  [ /\u{2197}/gu,
	    "\\nearrow{}" ],
	  [ /\u{2198}/gu,
	    "\\searrow{}" ],
	  [ /\u{2199}/gu,
	    "\\swarrow{}" ],
	  [ /\u{219A}/gu,
	    "\\nleftarrow{}" ],
	  [ /\u{219B}/gu,
	    "\\nrightarrow{}" ],
	  [ /\u{219C}/gu,
	    "\\arrowwaveright{}" ],
	  [ /\u{219D}/gu,
	    "\\arrowwaveright{}" ],
	  [ /\u{219E}/gu,
	    "\\twoheadleftarrow{}" ],
	  [ /\u{21A0}/gu,
	    "\\twoheadrightarrow{}" ],
	  [ /\u{21A2}/gu,
	    "\\leftarrowtail{}" ],
	  [ /\u{21A3}/gu,
	    "\\rightarrowtail{}" ],
	  [ /\u{21A6}/gu,
	    "\\mapsto{}" ],
	  [ /\u{21A9}/gu,
	    "\\hookleftarrow{}" ],
	  [ /\u{21AA}/gu,
	    "\\hookrightarrow{}" ],
	  [ /\u{21AB}/gu,
	    "\\looparrowleft{}" ],
	  [ /\u{21AC}/gu,
	    "\\looparrowright{}" ],
	  [ /\u{21AD}/gu,
	    "\\leftrightsquigarrow{}" ],
	  [ /\u{21AE}/gu,
	    "\\nleftrightarrow{}" ],
	  [ /\u{21B0}/gu,
	    "\\Lsh{}" ],
	  [ /\u{21B1}/gu,
	    "\\Rsh{}" ],
	  [ /\u{21B3}/gu,
	    "\\ElsevierGlyph{21B3}" ],
	  [ /\u{21B6}/gu,
	    "\\curvearrowleft{}" ],
	  [ /\u{21B7}/gu,
	    "\\curvearrowright{}" ],
	  [ /\u{21BA}/gu,
	    "\\circlearrowleft{}" ],
	  [ /\u{21BB}/gu,
	    "\\circlearrowright{}" ],
	  [ /\u{21BC}/gu,
	    "\\leftharpoonup{}" ],
	  [ /\u{21BD}/gu,
	    "\\leftharpoondown{}" ],
	  [ /\u{21BE}/gu,
	    "\\upharpoonright{}" ],
	  [ /\u{21BF}/gu,
	    "\\upharpoonleft{}" ],
	  [ /\u{21C0}/gu,
	    "\\rightharpoonup{}" ],
	  [ /\u{21C1}/gu,
	    "\\rightharpoondown{}" ],
	  [ /\u{21C2}/gu,
	    "\\downharpoonright{}" ],
	  [ /\u{21C3}/gu,
	    "\\downharpoonleft{}" ],
	  [ /\u{21C4}/gu,
	    "\\rightleftarrows{}" ],
	  [ /\u{21C5}/gu,
	    "\\dblarrowupdown{}" ],
	  [ /\u{21C6}/gu,
	    "\\leftrightarrows{}" ],
	  [ /\u{21C7}/gu,
	    "\\leftleftarrows{}" ],
	  [ /\u{21C8}/gu,
	    "\\upuparrows{}" ],
	  [ /\u{21C9}/gu,
	    "\\rightrightarrows{}" ],
	  [ /\u{21CA}/gu,
	    "\\downdownarrows{}" ],
	  [ /\u{21CB}/gu,
	    "\\leftrightharpoons{}" ],
	  [ /\u{21CC}/gu,
	    "\\rightleftharpoons{}" ],
	  [ /\u{21CD}/gu,
	    "\\nLeftarrow{}" ],
	  [ /\u{21CE}/gu,
	    "\\nLeftrightarrow{}" ],
	  [ /\u{21CF}/gu,
	    "\\nRightarrow{}" ],
	  [ /\u{21D0}/gu,
	    "\\Leftarrow{}" ],
	  [ /\u{21D1}/gu,
	    "\\Uparrow{}" ],
	  [ /\u{21D2}/gu,
	    "\\Rightarrow{}" ],
	  [ /\u{21D3}/gu,
	    "\\Downarrow{}" ],
	  [ /\u{21D4}/gu,
	    "\\Leftrightarrow{}" ],
	  [ /\u{21D5}/gu,
	    "\\Updownarrow{}" ],
	  [ /\u{21DA}/gu,
	    "\\Lleftarrow{}" ],
	  [ /\u{21DB}/gu,
	    "\\Rrightarrow{}" ],
	  [ /\u{21DD}/gu,
	    "\\rightsquigarrow{}" ],
	  [ /\u{21F5}/gu,
	    "\\DownArrowUpArrow{}" ],
	  [ /\u{2200}/gu,
	    "\\forall{}" ],
	  [ /\u{2201}/gu,
	    "\\complement{}" ],
	  [ /\u{2202}/gu,
	    "\\partial{}" ],
	  [ /\u{2203}/gu,
	    "\\exists{}" ],
	  [ /\u{2204}/gu,
	    "\\nexists{}" ],
	  [ /\u{2205}/gu,
	    "\\varnothing{}" ],
	  [ /\u{2207}/gu,
	    "\\nabla{}" ],
	  [ /\u{2208}/gu,
	    "\\in{}" ],
	  [ /\u{2209}/gu,
	    "\\not\\in{}" ],
	  [ /\u{220B}/gu,
	    "\\ni{}" ],
	  [ /\u{220C}/gu,
	    "\\not\\ni{}" ],
	  [ /\u{220F}/gu,
	    "\\prod{}" ],
	  [ /\u{2210}/gu,
	    "\\coprod{}" ],
	  [ /\u{2211}/gu,
	    "\\sum{}" ],
	  [ /\u{2213}/gu,
	    "\\mp{}" ],
	  [ /\u{2214}/gu,
	    "\\dotplus{}" ],
	  [ /\u{2216}/gu,
	    "\\setminus{}" ],
	  [ /\u{2217}/gu,
	    "{_\\ast}" ],
	  [ /\u{2218}/gu,
	    "\\circ{}" ],
	  [ /\u{2219}/gu,
	    "\\bullet{}" ],
	  [ /\u{221A}/gu,
	    "\\surd{}" ],
	  [ /\u{221D}/gu,
	    "\\propto{}" ],
	  [ /\u{221E}/gu,
	    "\\infty{}" ],
	  [ /\u{221F}/gu,
	    "\\rightangle{}" ],
	  [ /\u{2220}/gu,
	    "\\angle{}" ],
	  [ /\u{2221}/gu,
	    "\\measuredangle{}" ],
	  [ /\u{2222}/gu,
	    "\\sphericalangle{}" ],
	  [ /\u{2223}/gu,
	    "\\mid{}" ],
	  [ /\u{2224}/gu,
	    "\\nmid{}" ],
	  [ /\u{2225}/gu,
	    "\\parallel{}" ],
	  [ /\u{2226}/gu,
	    "\\nparallel{}" ],
	  [ /\u{2227}/gu,
	    "\\wedge{}" ],
	  [ /\u{2228}/gu,
	    "\\vee{}" ],
	  [ /\u{2229}/gu,
	    "\\cap{}" ],
	  [ /\u{222A}/gu,
	    "\\cup{}" ],
	  [ /\u{222B}/gu,
	    "\\int{}" ],
	  [ /\u{222C}/gu,
	    "\\int\\!\\int{}" ],
	  [ /\u{222D}/gu,
	    "\\int\\!\\int\\!\\int{}" ],
	  [ /\u{222E}/gu,
	    "\\oint{}" ],
	  [ /\u{222F}/gu,
	    "\\surfintegral{}" ],
	  [ /\u{2230}/gu,
	    "\\volintegral{}" ],
	  [ /\u{2231}/gu,
	    "\\clwintegral{}" ],
	  [ /\u{2232}/gu,
	    "\\ElsevierGlyph{2232}" ],
	  [ /\u{2233}/gu,
	    "\\ElsevierGlyph{2233}" ],
	  [ /\u{2234}/gu,
	    "\\therefore{}" ],
	  [ /\u{2235}/gu,
	    "\\because{}" ],
	  [ /\u{2237}/gu,
	    "\\Colon{}" ],
	  [ /\u{2238}/gu,
	    "\\ElsevierGlyph{2238}" ],
	  [ /\u{223A}/gu,
	    "\\mathbin{{:}\\!\\!{-}\\!\\!{:}}" ],
	  [ /\u{223B}/gu,
	    "\\homothetic{}" ],
	  [ /\u{223C}/gu,
	    "\\sim{}" ],
	  [ /\u{223D}/gu,
	    "\\backsim{}" ],
	  [ /\u{223E}/gu,
	    "\\lazysinv{}" ],
	  [ /\u{2240}/gu,
	    "\\wr{}" ],
	  [ /\u{2241}/gu,
	    "\\not\\sim{}" ],
	  [ /\u{2242}/gu,
	    "\\ElsevierGlyph{2242}" ],
	  [ /\u{2243}/gu,
	    "\\simeq{}" ],
	  [ /\u{2244}/gu,
	    "\\not\\simeq{}" ],
	  [ /\u{2245}/gu,
	    "\\cong{}" ],
	  [ /\u{2246}/gu,
	    "\\approxnotequal{}" ],
	  [ /\u{2247}/gu,
	    "\\not\\cong{}" ],
	  [ /\u{2248}/gu,
	    "\\approx{}" ],
	  [ /\u{2249}/gu,
	    "\\not\\approx{}" ],
	  [ /\u{224A}/gu,
	    "\\approxeq{}" ],
	  [ /\u{224B}/gu,
	    "\\tildetrpl{}" ],
	  [ /\u{224C}/gu,
	    "\\allequal{}" ],
	  [ /\u{224D}/gu,
	    "\\asymp{}" ],
	  [ /\u{224E}/gu,
	    "\\Bumpeq{}" ],
	  [ /\u{224F}/gu,
	    "\\bumpeq{}" ],
	  [ /\u{2250}/gu,
	    "\\doteq{}" ],
	  [ /\u{2251}/gu,
	    "\\doteqdot{}" ],
	  [ /\u{2252}/gu,
	    "\\fallingdotseq{}" ],
	  [ /\u{2253}/gu,
	    "\\risingdotseq{}" ],
	  [ /\u{2254}/gu,
	    ":=" ],
	  [ /\u{2255}/gu,
	    "=:" ],
	  [ /\u{2256}/gu,
	    "\\eqcirc{}" ],
	  [ /\u{2257}/gu,
	    "\\circeq{}" ],
	  [ /\u{2259}/gu,
	    "\\estimates{}" ],
	  [ /\u{225A}/gu,
	    "\\ElsevierGlyph{225A}" ],
	  [ /\u{225B}/gu,
	    "\\starequal{}" ],
	  [ /\u{225C}/gu,
	    "\\triangleq{}" ],
	  [ /\u{225F}/gu,
	    "\\ElsevierGlyph{225F}" ],
	  [ /\u{2260}/gu,
	    "\\not =" ],
	  [ /\u{2261}/gu,
	    "\\equiv{}" ],
	  [ /\u{2262}/gu,
	    "\\not\\equiv{}" ],
	  [ /\u{2264}/gu,
	    "\\leq{}" ],
	  [ /\u{2265}/gu,
	    "\\geq{}" ],
	  [ /\u{2266}/gu,
	    "\\leqq{}" ],
	  [ /\u{2267}/gu,
	    "\\geqq{}" ],
	  [ /\u{2268}/gu,
	    "\\lneqq{}" ],
	  [ /\u{2269}/gu,
	    "\\gneqq{}" ],
	  [ /\u{226A}/gu,
	    "\\ll{}" ],
	  [ /\u{226B}/gu,
	    "\\gg{}" ],
	  [ /\u{226C}/gu,
	    "\\between{}" ],
	  [ /\u{226D}/gu,
	    "\\not\\kern-0.3em\\times{}" ],
	  [ /\u{226E}/gu,
	    "\\not&lt;" ],
	  [ /\u{226F}/gu,
	    "\\not&gt;" ],
	  [ /\u{2270}/gu,
	    "\\not\\leq{}" ],
	  [ /\u{2271}/gu,
	    "\\not\\geq{}" ],
	  [ /\u{2272}/gu,
	    "\\lessequivlnt{}" ],
	  [ /\u{2273}/gu,
	    "\\greaterequivlnt{}" ],
	  [ /\u{2274}/gu,
	    "\\ElsevierGlyph{2274}" ],
	  [ /\u{2275}/gu,
	    "\\ElsevierGlyph{2275}" ],
	  [ /\u{2276}/gu,
	    "\\lessgtr{}" ],
	  [ /\u{2277}/gu,
	    "\\gtrless{}" ],
	  [ /\u{2278}/gu,
	    "\\notlessgreater{}" ],
	  [ /\u{2279}/gu,
	    "\\notgreaterless{}" ],
	  [ /\u{227A}/gu,
	    "\\prec{}" ],
	  [ /\u{227B}/gu,
	    "\\succ{}" ],
	  [ /\u{227C}/gu,
	    "\\preccurlyeq{}" ],
	  [ /\u{227D}/gu,
	    "\\succcurlyeq{}" ],
	  [ /\u{227E}/gu,
	    "\\precapprox{}" ],
	  [ /\u{227F}/gu,
	    "\\succapprox{}" ],
	  [ /\u{2280}/gu,
	    "\\not\\prec{}" ],
	  [ /\u{2281}/gu,
	    "\\not\\succ{}" ],
	  [ /\u{2282}/gu,
	    "\\subset{}" ],
	  [ /\u{2283}/gu,
	    "\\supset{}" ],
	  [ /\u{2284}/gu,
	    "\\not\\subset{}" ],
	  [ /\u{2285}/gu,
	    "\\not\\supset{}" ],
	  [ /\u{2286}/gu,
	    "\\subseteq{}" ],
	  [ /\u{2287}/gu,
	    "\\supseteq{}" ],
	  [ /\u{2288}/gu,
	    "\\not\\subseteq{}" ],
	  [ /\u{2289}/gu,
	    "\\not\\supseteq{}" ],
	  [ /\u{228A}/gu,
	    "\\subsetneq{}" ],
	  [ /\u{228B}/gu,
	    "\\supsetneq{}" ],
	  [ /\u{228E}/gu,
	    "\\uplus{}" ],
	  [ /\u{228F}/gu,
	    "\\sqsubset{}" ],
	  [ /\u{2290}/gu,
	    "\\sqsupset{}" ],
	  [ /\u{2291}/gu,
	    "\\sqsubseteq{}" ],
	  [ /\u{2292}/gu,
	    "\\sqsupseteq{}" ],
	  [ /\u{2293}/gu,
	    "\\sqcap{}" ],
	  [ /\u{2294}/gu,
	    "\\sqcup{}" ],
	  [ /\u{2295}/gu,
	    "\\oplus{}" ],
	  [ /\u{2296}/gu,
	    "\\ominus{}" ],
	  [ /\u{2297}/gu,
	    "\\otimes{}" ],
	  [ /\u{2298}/gu,
	    "\\oslash{}" ],
	  [ /\u{2299}/gu,
	    "\\odot{}" ],
	  [ /\u{229A}/gu,
	    "\\circledcirc{}" ],
	  [ /\u{229B}/gu,
	    "\\circledast{}" ],
	  [ /\u{229D}/gu,
	    "\\circleddash{}" ],
	  [ /\u{229E}/gu,
	    "\\boxplus{}" ],
	  [ /\u{229F}/gu,
	    "\\boxminus{}" ],
	  [ /\u{22A0}/gu,
	    "\\boxtimes{}" ],
	  [ /\u{22A1}/gu,
	    "\\boxdot{}" ],
	  [ /\u{22A2}/gu,
	    "\\vdash{}" ],
	  [ /\u{22A3}/gu,
	    "\\dashv{}" ],
	  [ /\u{22A4}/gu,
	    "\\top{}" ],
	  [ /\u{22A5}/gu,
	    "\\perp{}" ],
	  [ /\u{22A7}/gu,
	    "\\truestate{}" ],
	  [ /\u{22A8}/gu,
	    "\\forcesextra{}" ],
	  [ /\u{22A9}/gu,
	    "\\Vdash{}" ],
	  [ /\u{22AA}/gu,
	    "\\Vvdash{}" ],
	  [ /\u{22AB}/gu,
	    "\\VDash{}" ],
	  [ /\u{22AC}/gu,
	    "\\nvdash{}" ],
	  [ /\u{22AD}/gu,
	    "\\nvDash{}" ],
	  [ /\u{22AE}/gu,
	    "\\nVdash{}" ],
	  [ /\u{22AF}/gu,
	    "\\nVDash{}" ],
	  [ /\u{22B2}/gu,
	    "\\vartriangleleft{}" ],
	  [ /\u{22B3}/gu,
	    "\\vartriangleright{}" ],
	  [ /\u{22B4}/gu,
	    "\\trianglelefteq{}" ],
	  [ /\u{22B5}/gu,
	    "\\trianglerighteq{}" ],
	  [ /\u{22B6}/gu,
	    "\\original{}" ],
	  [ /\u{22B7}/gu,
	    "\\image{}" ],
	  [ /\u{22B8}/gu,
	    "\\multimap{}" ],
	  [ /\u{22B9}/gu,
	    "\\hermitconjmatrix{}" ],
	  [ /\u{22BA}/gu,
	    "\\intercal{}" ],
	  [ /\u{22BB}/gu,
	    "\\veebar{}" ],
	  [ /\u{22BE}/gu,
	    "\\rightanglearc{}" ],
	  [ /\u{22C0}/gu,
	    "\\ElsevierGlyph{22C0}" ],
	  [ /\u{22C1}/gu,
	    "\\ElsevierGlyph{22C1}" ],
	  [ /\u{22C2}/gu,
	    "\\bigcap{}" ],
	  [ /\u{22C3}/gu,
	    "\\bigcup{}" ],
	  [ /\u{22C4}/gu,
	    "\\diamond{}" ],
	  [ /\u{22C5}/gu,
	    "\\cdot{}" ],
	  [ /\u{22C6}/gu,
	    "\\star{}" ],
	  [ /\u{22C7}/gu,
	    "\\divideontimes{}" ],
	  [ /\u{22C8}/gu,
	    "\\bowtie{}" ],
	  [ /\u{22C9}/gu,
	    "\\ltimes{}" ],
	  [ /\u{22CA}/gu,
	    "\\rtimes{}" ],
	  [ /\u{22CB}/gu,
	    "\\leftthreetimes{}" ],
	  [ /\u{22CC}/gu,
	    "\\rightthreetimes{}" ],
	  [ /\u{22CD}/gu,
	    "\\backsimeq{}" ],
	  [ /\u{22CE}/gu,
	    "\\curlyvee{}" ],
	  [ /\u{22CF}/gu,
	    "\\curlywedge{}" ],
	  [ /\u{22D0}/gu,
	    "\\Subset{}" ],
	  [ /\u{22D1}/gu,
	    "\\Supset{}" ],
	  [ /\u{22D2}/gu,
	    "\\Cap{}" ],
	  [ /\u{22D3}/gu,
	    "\\Cup{}" ],
	  [ /\u{22D4}/gu,
	    "\\pitchfork{}" ],
	  [ /\u{22D6}/gu,
	    "\\lessdot{}" ],
	  [ /\u{22D7}/gu,
	    "\\gtrdot{}" ],
	  [ /\u{22D8}/gu,
	    "\\verymuchless{}" ],
	  [ /\u{22D9}/gu,
	    "\\verymuchgreater{}" ],
	  [ /\u{22DA}/gu,
	    "\\lesseqgtr{}" ],
	  [ /\u{22DB}/gu,
	    "\\gtreqless{}" ],
	  [ /\u{22DE}/gu,
	    "\\curlyeqprec{}" ],
	  [ /\u{22DF}/gu,
	    "\\curlyeqsucc{}" ],
	  [ /\u{22E2}/gu,
	    "\\not\\sqsubseteq{}" ],
	  [ /\u{22E3}/gu,
	    "\\not\\sqsupseteq{}" ],
	  [ /\u{22E5}/gu,
	    "\\Elzsqspne{}" ],
	  [ /\u{22E6}/gu,
	    "\\lnsim{}" ],
	  [ /\u{22E7}/gu,
	    "\\gnsim{}" ],
	  [ /\u{22E8}/gu,
	    "\\precedesnotsimilar{}" ],
	  [ /\u{22E9}/gu,
	    "\\succnsim{}" ],
	  [ /\u{22EA}/gu,
	    "\\ntriangleleft{}" ],
	  [ /\u{22EB}/gu,
	    "\\ntriangleright{}" ],
	  [ /\u{22EC}/gu,
	    "\\ntrianglelefteq{}" ],
	  [ /\u{22ED}/gu,
	    "\\ntrianglerighteq{}" ],
	  [ /\u{22EE}/gu,
	    "\\vdots{}" ],
	  [ /\u{22EF}/gu,
	    "\\cdots{}" ],
	  [ /\u{22F0}/gu,
	    "\\upslopeellipsis{}" ],
	  [ /\u{22F1}/gu,
	    "\\downslopeellipsis{}" ],
	  [ /\u{2305}/gu,
	    "\\barwedge{}" ],
	  [ /\u{2306}/gu,
	    "\\perspcorrespond{}" ],
	  [ /\u{2308}/gu,
	    "\\lceil{}" ],
	  [ /\u{2309}/gu,
	    "\\rceil{}" ],
	  [ /\u{230A}/gu,
	    "\\lfloor{}" ],
	  [ /\u{230B}/gu,
	    "\\rfloor{}" ],
	  [ /\u{2315}/gu,
	    "\\recorder{}" ],
	  [ /\u{2316}/gu,
	    "\\mathchar\"2208" ],
	  [ /\u{231C}/gu,
	    "\\ulcorner{}" ],
	  [ /\u{231D}/gu,
	    "\\urcorner{}" ],
	  [ /\u{231E}/gu,
	    "\\llcorner{}" ],
	  [ /\u{231F}/gu,
	    "\\lrcorner{}" ],
	  [ /\u{2322}/gu,
	    "\\frown{}" ],
	  [ /\u{2323}/gu,
	    "\\smile{}" ],
	  [ /\u{2329}/gu,
	    "\\langle{}" ],
	  [ /\u{232A}/gu,
	    "\\rangle{}" ],
	  [ /\u{233D}/gu,
	    "\\ElsevierGlyph{E838}" ],
	  [ /\u{23A3}/gu,
	    "\\Elzdlcorn{}" ],
	  [ /\u{23B0}/gu,
	    "\\lmoustache{}" ],
	  [ /\u{23B1}/gu,
	    "\\rmoustache{}" ],
	  [ /\u{2423}/gu,
	    "\\textvisiblespace{}" ],
	  [ /\u{2460}/gu,
	    "\\ding{172}" ],
	  [ /\u{2461}/gu,
	    "\\ding{173}" ],
	  [ /\u{2462}/gu,
	    "\\ding{174}" ],
	  [ /\u{2463}/gu,
	    "\\ding{175}" ],
	  [ /\u{2464}/gu,
	    "\\ding{176}" ],
	  [ /\u{2465}/gu,
	    "\\ding{177}" ],
	  [ /\u{2466}/gu,
	    "\\ding{178}" ],
	  [ /\u{2467}/gu,
	    "\\ding{179}" ],
	  [ /\u{2468}/gu,
	    "\\ding{180}" ],
	  [ /\u{2469}/gu,
	    "\\ding{181}" ],
	  [ /\u{24C8}/gu,
	    "\\circledS{}" ],
	  [ /\u{2506}/gu,
	    "\\Elzdshfnc{}" ],
	  [ /\u{2519}/gu,
	    "\\Elzsqfnw{}" ],
	  [ /\u{2571}/gu,
	    "\\diagup{}" ],
	  [ /\u{25A0}/gu,
	    "\\ding{110}" ],
	  [ /\u{25A1}/gu,
	    "\\square{}" ],
	  [ /\u{25AA}/gu,
	    "\\blacksquare{}" ],
	  [ /\u{25AD}/gu,
	    "\\fbox{~~}" ],
	  [ /\u{25AF}/gu,
	    "\\Elzvrecto{}" ],
	  [ /\u{25B1}/gu,
	    "\\ElsevierGlyph{E381}" ],
	  [ /\u{25B2}/gu,
	    "\\ding{115}" ],
	  [ /\u{25B3}/gu,
	    "\\bigtriangleup{}" ],
	  [ /\u{25B4}/gu,
	    "\\blacktriangle{}" ],
	  [ /\u{25B5}/gu,
	    "\\vartriangle{}" ],
	  [ /\u{25B8}/gu,
	    "\\blacktriangleright{}" ],
	  [ /\u{25B9}/gu,
	    "\\triangleright{}" ],
	  [ /\u{25BC}/gu,
	    "\\ding{116}" ],
	  [ /\u{25BD}/gu,
	    "\\bigtriangledown{}" ],
	  [ /\u{25BE}/gu,
	    "\\blacktriangledown{}" ],
	  [ /\u{25BF}/gu,
	    "\\triangledown{}" ],
	  [ /\u{25C2}/gu,
	    "\\blacktriangleleft{}" ],
	  [ /\u{25C3}/gu,
	    "\\triangleleft{}" ],
	  [ /\u{25C6}/gu,
	    "\\ding{117}" ],
	  [ /\u{25CA}/gu,
	    "\\lozenge{}" ],
	  [ /\u{25CB}/gu,
	    "\\bigcirc{}" ],
	  [ /\u{25CF}/gu,
	    "\\ding{108}" ],
	  [ /\u{25D0}/gu,
	    "\\Elzcirfl{}" ],
	  [ /\u{25D1}/gu,
	    "\\Elzcirfr{}" ],
	  [ /\u{25D2}/gu,
	    "\\Elzcirfb{}" ],
	  [ /\u{25D7}/gu,
	    "\\ding{119}" ],
	  [ /\u{25D8}/gu,
	    "\\Elzrvbull{}" ],
	  [ /\u{25E7}/gu,
	    "\\Elzsqfl{}" ],
	  [ /\u{25E8}/gu,
	    "\\Elzsqfr{}" ],
	  [ /\u{25EA}/gu,
	    "\\Elzsqfse{}" ],
	  [ /\u{25EF}/gu,
	    "\\bigcirc{}" ],
	  [ /\u{2605}/gu,
	    "\\ding{72}" ],
	  [ /\u{2606}/gu,
	    "\\ding{73}" ],
	  [ /\u{260E}/gu,
	    "\\ding{37}" ],
	  [ /\u{261B}/gu,
	    "\\ding{42}" ],
	  [ /\u{261E}/gu,
	    "\\ding{43}" ],
	  [ /\u{263E}/gu,
	    "\\rightmoon{}" ],
	  [ /\u{263F}/gu,
	    "\\mercury{}" ],
	  [ /\u{2640}/gu,
	    "\\venus{}" ],
	  [ /\u{2642}/gu,
	    "\\male{}" ],
	  [ /\u{2643}/gu,
	    "\\jupiter{}" ],
	  [ /\u{2644}/gu,
	    "\\saturn{}" ],
	  [ /\u{2645}/gu,
	    "\\uranus{}" ],
	  [ /\u{2646}/gu,
	    "\\neptune{}" ],
	  [ /\u{2647}/gu,
	    "\\pluto{}" ],
	  [ /\u{2648}/gu,
	    "\\aries{}" ],
	  [ /\u{2649}/gu,
	    "\\taurus{}" ],
	  [ /\u{264A}/gu,
	    "\\gemini{}" ],
	  [ /\u{264B}/gu,
	    "\\cancer{}" ],
	  [ /\u{264C}/gu,
	    "\\leo{}" ],
	  [ /\u{264D}/gu,
	    "\\virgo{}" ],
	  [ /\u{264E}/gu,
	    "\\libra{}" ],
	  [ /\u{264F}/gu,
	    "\\scorpio{}" ],
	  [ /\u{2650}/gu,
	    "\\sagittarius{}" ],
	  [ /\u{2651}/gu,
	    "\\capricornus{}" ],
	  [ /\u{2652}/gu,
	    "\\aquarius{}" ],
	  [ /\u{2653}/gu,
	    "\\pisces{}" ],
	  [ /\u{2660}/gu,
	    "\\ding{171}" ],
	  [ /\u{2662}/gu,
	    "\\diamond{}" ],
	  [ /\u{2663}/gu,
	    "\\ding{168}" ],
	  [ /\u{2665}/gu,
	    "\\ding{170}" ],
	  [ /\u{2666}/gu,
	    "\\ding{169}" ],
	  [ /\u{2669}/gu,
	    "\\quarternote{}" ],
	  [ /\u{266A}/gu,
	    "\\eighthnote{}" ],
	  [ /\u{266D}/gu,
	    "\\flat{}" ],
	  [ /\u{266E}/gu,
	    "\\natural{}" ],
	  [ /\u{266F}/gu,
	    "\\sharp{}" ],
	  [ /\u{2701}/gu,
	    "\\ding{33}" ],
	  [ /\u{2702}/gu,
	    "\\ding{34}" ],
	  [ /\u{2703}/gu,
	    "\\ding{35}" ],
	  [ /\u{2704}/gu,
	    "\\ding{36}" ],
	  [ /\u{2706}/gu,
	    "\\ding{38}" ],
	  [ /\u{2707}/gu,
	    "\\ding{39}" ],
	  [ /\u{2708}/gu,
	    "\\ding{40}" ],
	  [ /\u{2709}/gu,
	    "\\ding{41}" ],
	  [ /\u{270C}/gu,
	    "\\ding{44}" ],
	  [ /\u{270D}/gu,
	    "\\ding{45}" ],
	  [ /\u{270E}/gu,
	    "\\ding{46}" ],
	  [ /\u{270F}/gu,
	    "\\ding{47}" ],
	  [ /\u{2710}/gu,
	    "\\ding{48}" ],
	  [ /\u{2711}/gu,
	    "\\ding{49}" ],
	  [ /\u{2712}/gu,
	    "\\ding{50}" ],
	  [ /\u{2713}/gu,
	    "\\ding{51}" ],
	  [ /\u{2714}/gu,
	    "\\ding{52}" ],
	  [ /\u{2715}/gu,
	    "\\ding{53}" ],
	  [ /\u{2716}/gu,
	    "\\ding{54}" ],
	  [ /\u{2717}/gu,
	    "\\ding{55}" ],
	  [ /\u{2718}/gu,
	    "\\ding{56}" ],
	  [ /\u{2719}/gu,
	    "\\ding{57}" ],
	  [ /\u{271A}/gu,
	    "\\ding{58}" ],
	  [ /\u{271B}/gu,
	    "\\ding{59}" ],
	  [ /\u{271C}/gu,
	    "\\ding{60}" ],
	  [ /\u{271D}/gu,
	    "\\ding{61}" ],
	  [ /\u{271E}/gu,
	    "\\ding{62}" ],
	  [ /\u{271F}/gu,
	    "\\ding{63}" ],
	  [ /\u{2720}/gu,
	    "\\ding{64}" ],
	  [ /\u{2721}/gu,
	    "\\ding{65}" ],
	  [ /\u{2722}/gu,
	    "\\ding{66}" ],
	  [ /\u{2723}/gu,
	    "\\ding{67}" ],
	  [ /\u{2724}/gu,
	    "\\ding{68}" ],
	  [ /\u{2725}/gu,
	    "\\ding{69}" ],
	  [ /\u{2726}/gu,
	    "\\ding{70}" ],
	  [ /\u{2727}/gu,
	    "\\ding{71}" ],
	  [ /\u{2729}/gu,
	    "\\ding{73}" ],
	  [ /\u{272A}/gu,
	    "\\ding{74}" ],
	  [ /\u{272B}/gu,
	    "\\ding{75}" ],
	  [ /\u{272C}/gu,
	    "\\ding{76}" ],
	  [ /\u{272D}/gu,
	    "\\ding{77}" ],
	  [ /\u{272E}/gu,
	    "\\ding{78}" ],
	  [ /\u{272F}/gu,
	    "\\ding{79}" ],
	  [ /\u{2730}/gu,
	    "\\ding{80}" ],
	  [ /\u{2731}/gu,
	    "\\ding{81}" ],
	  [ /\u{2732}/gu,
	    "\\ding{82}" ],
	  [ /\u{2733}/gu,
	    "\\ding{83}" ],
	  [ /\u{2734}/gu,
	    "\\ding{84}" ],
	  [ /\u{2735}/gu,
	    "\\ding{85}" ],
	  [ /\u{2736}/gu,
	    "\\ding{86}" ],
	  [ /\u{2737}/gu,
	    "\\ding{87}" ],
	  [ /\u{2738}/gu,
	    "\\ding{88}" ],
	  [ /\u{2739}/gu,
	    "\\ding{89}" ],
	  [ /\u{273A}/gu,
	    "\\ding{90}" ],
	  [ /\u{273B}/gu,
	    "\\ding{91}" ],
	  [ /\u{273C}/gu,
	    "\\ding{92}" ],
	  [ /\u{273D}/gu,
	    "\\ding{93}" ],
	  [ /\u{273E}/gu,
	    "\\ding{94}" ],
	  [ /\u{273F}/gu,
	    "\\ding{95}" ],
	  [ /\u{2740}/gu,
	    "\\ding{96}" ],
	  [ /\u{2741}/gu,
	    "\\ding{97}" ],
	  [ /\u{2742}/gu,
	    "\\ding{98}" ],
	  [ /\u{2743}/gu,
	    "\\ding{99}" ],
	  [ /\u{2744}/gu,
	    "\\ding{100}" ],
	  [ /\u{2745}/gu,
	    "\\ding{101}" ],
	  [ /\u{2746}/gu,
	    "\\ding{102}" ],
	  [ /\u{2747}/gu,
	    "\\ding{103}" ],
	  [ /\u{2748}/gu,
	    "\\ding{104}" ],
	  [ /\u{2749}/gu,
	    "\\ding{105}" ],
	  [ /\u{274A}/gu,
	    "\\ding{106}" ],
	  [ /\u{274B}/gu,
	    "\\ding{107}" ],
	  [ /\u{274D}/gu,
	    "\\ding{109}" ],
	  [ /\u{274F}/gu,
	    "\\ding{111}" ],
	  [ /\u{2750}/gu,
	    "\\ding{112}" ],
	  [ /\u{2751}/gu,
	    "\\ding{113}" ],
	  [ /\u{2752}/gu,
	    "\\ding{114}" ],
	  [ /\u{2756}/gu,
	    "\\ding{118}" ],
	  [ /\u{2758}/gu,
	    "\\ding{120}" ],
	  [ /\u{2759}/gu,
	    "\\ding{121}" ],
	  [ /\u{275A}/gu,
	    "\\ding{122}" ],
	  [ /\u{275B}/gu,
	    "\\ding{123}" ],
	  [ /\u{275C}/gu,
	    "\\ding{124}" ],
	  [ /\u{275D}/gu,
	    "\\ding{125}" ],
	  [ /\u{275E}/gu,
	    "\\ding{126}" ],
	  [ /\u{2761}/gu,
	    "\\ding{161}" ],
	  [ /\u{2762}/gu,
	    "\\ding{162}" ],
	  [ /\u{2763}/gu,
	    "\\ding{163}" ],
	  [ /\u{2764}/gu,
	    "\\ding{164}" ],
	  [ /\u{2765}/gu,
	    "\\ding{165}" ],
	  [ /\u{2766}/gu,
	    "\\ding{166}" ],
	  [ /\u{2767}/gu,
	    "\\ding{167}" ],
	  [ /\u{2776}/gu,
	    "\\ding{182}" ],
	  [ /\u{2777}/gu,
	    "\\ding{183}" ],
	  [ /\u{2778}/gu,
	    "\\ding{184}" ],
	  [ /\u{2779}/gu,
	    "\\ding{185}" ],
	  [ /\u{277A}/gu,
	    "\\ding{186}" ],
	  [ /\u{277B}/gu,
	    "\\ding{187}" ],
	  [ /\u{277C}/gu,
	    "\\ding{188}" ],
	  [ /\u{277D}/gu,
	    "\\ding{189}" ],
	  [ /\u{277E}/gu,
	    "\\ding{190}" ],
	  [ /\u{277F}/gu,
	    "\\ding{191}" ],
	  [ /\u{2780}/gu,
	    "\\ding{192}" ],
	  [ /\u{2781}/gu,
	    "\\ding{193}" ],
	  [ /\u{2782}/gu,
	    "\\ding{194}" ],
	  [ /\u{2783}/gu,
	    "\\ding{195}" ],
	  [ /\u{2784}/gu,
	    "\\ding{196}" ],
	  [ /\u{2785}/gu,
	    "\\ding{197}" ],
	  [ /\u{2786}/gu,
	    "\\ding{198}" ],
	  [ /\u{2787}/gu,
	    "\\ding{199}" ],
	  [ /\u{2788}/gu,
	    "\\ding{200}" ],
	  [ /\u{2789}/gu,
	    "\\ding{201}" ],
	  [ /\u{278A}/gu,
	    "\\ding{202}" ],
	  [ /\u{278B}/gu,
	    "\\ding{203}" ],
	  [ /\u{278C}/gu,
	    "\\ding{204}" ],
	  [ /\u{278D}/gu,
	    "\\ding{205}" ],
	  [ /\u{278E}/gu,
	    "\\ding{206}" ],
	  [ /\u{278F}/gu,
	    "\\ding{207}" ],
	  [ /\u{2790}/gu,
	    "\\ding{208}" ],
	  [ /\u{2791}/gu,
	    "\\ding{209}" ],
	  [ /\u{2792}/gu,
	    "\\ding{210}" ],
	  [ /\u{2793}/gu,
	    "\\ding{211}" ],
	  [ /\u{2794}/gu,
	    "\\ding{212}" ],
	  [ /\u{2798}/gu,
	    "\\ding{216}" ],
	  [ /\u{2799}/gu,
	    "\\ding{217}" ],
	  [ /\u{279A}/gu,
	    "\\ding{218}" ],
	  [ /\u{279B}/gu,
	    "\\ding{219}" ],
	  [ /\u{279C}/gu,
	    "\\ding{220}" ],
	  [ /\u{279D}/gu,
	    "\\ding{221}" ],
	  [ /\u{279E}/gu,
	    "\\ding{222}" ],
	  [ /\u{279F}/gu,
	    "\\ding{223}" ],
	  [ /\u{27A0}/gu,
	    "\\ding{224}" ],
	  [ /\u{27A1}/gu,
	    "\\ding{225}" ],
	  [ /\u{27A2}/gu,
	    "\\ding{226}" ],
	  [ /\u{27A3}/gu,
	    "\\ding{227}" ],
	  [ /\u{27A4}/gu,
	    "\\ding{228}" ],
	  [ /\u{27A5}/gu,
	    "\\ding{229}" ],
	  [ /\u{27A6}/gu,
	    "\\ding{230}" ],
	  [ /\u{27A7}/gu,
	    "\\ding{231}" ],
	  [ /\u{27A8}/gu,
	    "\\ding{232}" ],
	  [ /\u{27A9}/gu,
	    "\\ding{233}" ],
	  [ /\u{27AA}/gu,
	    "\\ding{234}" ],
	  [ /\u{27AB}/gu,
	    "\\ding{235}" ],
	  [ /\u{27AC}/gu,
	    "\\ding{236}" ],
	  [ /\u{27AD}/gu,
	    "\\ding{237}" ],
	  [ /\u{27AE}/gu,
	    "\\ding{238}" ],
	  [ /\u{27AF}/gu,
	    "\\ding{239}" ],
	  [ /\u{27B1}/gu,
	    "\\ding{241}" ],
	  [ /\u{27B2}/gu,
	    "\\ding{242}" ],
	  [ /\u{27B3}/gu,
	    "\\ding{243}" ],
	  [ /\u{27B4}/gu,
	    "\\ding{244}" ],
	  [ /\u{27B5}/gu,
	    "\\ding{245}" ],
	  [ /\u{27B6}/gu,
	    "\\ding{246}" ],
	  [ /\u{27B7}/gu,
	    "\\ding{247}" ],
	  [ /\u{27B8}/gu,
	    "\\ding{248}" ],
	  [ /\u{27B9}/gu,
	    "\\ding{249}" ],
	  [ /\u{27BA}/gu,
	    "\\ding{250}" ],
	  [ /\u{27BB}/gu,
	    "\\ding{251}" ],
	  [ /\u{27BC}/gu,
	    "\\ding{252}" ],
	  [ /\u{27BD}/gu,
	    "\\ding{253}" ],
	  [ /\u{27BE}/gu,
	    "\\ding{254}" ],
	  [ /\u{27F5}/gu,
	    "\\longleftarrow{}" ],
	  [ /\u{27F6}/gu,
	    "\\longrightarrow{}" ],
	  [ /\u{27F7}/gu,
	    "\\longleftrightarrow{}" ],
	  [ /\u{27F8}/gu,
	    "\\Longleftarrow{}" ],
	  [ /\u{27F9}/gu,
	    "\\Longrightarrow{}" ],
	  [ /\u{27FA}/gu,
	    "\\Longleftrightarrow{}" ],
	  [ /\u{27FC}/gu,
	    "\\longmapsto{}" ],
	  [ /\u{27FF}/gu,
	    "\\sim\\joinrel\\leadsto" ],
	  [ /\u{2905}/gu,
	    "\\ElsevierGlyph{E212}" ],
	  [ /\u{2912}/gu,
	    "\\UpArrowBar{}" ],
	  [ /\u{2913}/gu,
	    "\\DownArrowBar{}" ],
	  [ /\u{2923}/gu,
	    "\\ElsevierGlyph{E20C}" ],
	  [ /\u{2924}/gu,
	    "\\ElsevierGlyph{E20D}" ],
	  [ /\u{2925}/gu,
	    "\\ElsevierGlyph{E20B}" ],
	  [ /\u{2926}/gu,
	    "\\ElsevierGlyph{E20A}" ],
	  [ /\u{2927}/gu,
	    "\\ElsevierGlyph{E211}" ],
	  [ /\u{2928}/gu,
	    "\\ElsevierGlyph{E20E}" ],
	  [ /\u{2929}/gu,
	    "\\ElsevierGlyph{E20F}" ],
	  [ /\u{292A}/gu,
	    "\\ElsevierGlyph{E210}" ],
	  [ /\u{2933}/gu,
	    "\\ElsevierGlyph{E21C}" ],
	  [ /\u{2936}/gu,
	    "\\ElsevierGlyph{E21A}" ],
	  [ /\u{2937}/gu,
	    "\\ElsevierGlyph{E219}" ],
	  [ /\u{2940}/gu,
	    "\\Elolarr{}" ],
	  [ /\u{2941}/gu,
	    "\\Elorarr{}" ],
	  [ /\u{2942}/gu,
	    "\\ElzRlarr{}" ],
	  [ /\u{2944}/gu,
	    "\\ElzrLarr{}" ],
	  [ /\u{2947}/gu,
	    "\\Elzrarrx{}" ],
	  [ /\u{294E}/gu,
	    "\\LeftRightVector{}" ],
	  [ /\u{294F}/gu,
	    "\\RightUpDownVector{}" ],
	  [ /\u{2950}/gu,
	    "\\DownLeftRightVector{}" ],
	  [ /\u{2951}/gu,
	    "\\LeftUpDownVector{}" ],
	  [ /\u{2952}/gu,
	    "\\LeftVectorBar{}" ],
	  [ /\u{2953}/gu,
	    "\\RightVectorBar{}" ],
	  [ /\u{2954}/gu,
	    "\\RightUpVectorBar{}" ],
	  [ /\u{2955}/gu,
	    "\\RightDownVectorBar{}" ],
	  [ /\u{2956}/gu,
	    "\\DownLeftVectorBar{}" ],
	  [ /\u{2957}/gu,
	    "\\DownRightVectorBar{}" ],
	  [ /\u{2958}/gu,
	    "\\LeftUpVectorBar{}" ],
	  [ /\u{2959}/gu,
	    "\\LeftDownVectorBar{}" ],
	  [ /\u{295A}/gu,
	    "\\LeftTeeVector{}" ],
	  [ /\u{295B}/gu,
	    "\\RightTeeVector{}" ],
	  [ /\u{295C}/gu,
	    "\\RightUpTeeVector{}" ],
	  [ /\u{295D}/gu,
	    "\\RightDownTeeVector{}" ],
	  [ /\u{295E}/gu,
	    "\\DownLeftTeeVector{}" ],
	  [ /\u{295F}/gu,
	    "\\DownRightTeeVector{}" ],
	  [ /\u{2960}/gu,
	    "\\LeftUpTeeVector{}" ],
	  [ /\u{2961}/gu,
	    "\\LeftDownTeeVector{}" ],
	  [ /\u{296E}/gu,
	    "\\UpEquilibrium{}" ],
	  [ /\u{296F}/gu,
	    "\\ReverseUpEquilibrium{}" ],
	  [ /\u{2970}/gu,
	    "\\RoundImplies{}" ],
	  [ /\u{297C}/gu,
	    "\\ElsevierGlyph{E214}" ],
	  [ /\u{297D}/gu,
	    "\\ElsevierGlyph{E215}" ],
	  [ /\u{2980}/gu,
	    "\\Elztfnc{}" ],
	  [ /\u{2985}/gu,
	    "\\ElsevierGlyph{3018}" ],
	  [ /\u{2986}/gu,
	    "\\Elroang{}" ],
	  [ /\u{2993}/gu,
	    "&lt;\\kern-0.58em(" ],
	  [ /\u{2994}/gu,
	    "\\ElsevierGlyph{E291}" ],
	  [ /\u{2999}/gu,
	    "\\Elzddfnc{}" ],
	  [ /\u{299C}/gu,
	    "\\Angle{}" ],
	  [ /\u{29A0}/gu,
	    "\\Elzlpargt{}" ],
	  [ /\u{29B5}/gu,
	    "\\ElsevierGlyph{E260}" ],
	  [ /\u{29B6}/gu,
	    "\\ElsevierGlyph{E61B}" ],
	  [ /\u{29CA}/gu,
	    "\\ElzLap{}" ],
	  [ /\u{29CB}/gu,
	    "\\Elzdefas{}" ],
	  [ /\u{29CF}/gu,
	    "\\LeftTriangleBar{}" ],
	  [ /\u{29D0}/gu,
	    "\\RightTriangleBar{}" ],
	  [ /\u{29DC}/gu,
	    "\\ElsevierGlyph{E372}" ],
	  [ /\u{29EB}/gu,
	    "\\blacklozenge{}" ],
	  [ /\u{29F4}/gu,
	    "\\RuleDelayed{}" ],
	  [ /\u{2A04}/gu,
	    "\\Elxuplus{}" ],
	  [ /\u{2A05}/gu,
	    "\\ElzThr{}" ],
	  [ /\u{2A06}/gu,
	    "\\Elxsqcup{}" ],
	  [ /\u{2A07}/gu,
	    "\\ElzInf{}" ],
	  [ /\u{2A08}/gu,
	    "\\ElzSup{}" ],
	  [ /\u{2A0D}/gu,
	    "\\ElzCint{}" ],
	  [ /\u{2A0F}/gu,
	    "\\clockoint{}" ],
	  [ /\u{2A10}/gu,
	    "\\ElsevierGlyph{E395}" ],
	  [ /\u{2A16}/gu,
	    "\\sqrint{}" ],
	  [ /\u{2A25}/gu,
	    "\\ElsevierGlyph{E25A}" ],
	  [ /\u{2A2A}/gu,
	    "\\ElsevierGlyph{E25B}" ],
	  [ /\u{2A2D}/gu,
	    "\\ElsevierGlyph{E25C}" ],
	  [ /\u{2A2E}/gu,
	    "\\ElsevierGlyph{E25D}" ],
	  [ /\u{2A2F}/gu,
	    "\\ElzTimes{}" ],
	  [ /\u{2A34}/gu,
	    "\\ElsevierGlyph{E25E}" ],
	  [ /\u{2A35}/gu,
	    "\\ElsevierGlyph{E25E}" ],
	  [ /\u{2A3C}/gu,
	    "\\ElsevierGlyph{E259}" ],
	  [ /\u{2A3F}/gu,
	    "\\amalg{}" ],
	  [ /\u{2A53}/gu,
	    "\\ElzAnd{}" ],
	  [ /\u{2A54}/gu,
	    "\\ElzOr{}" ],
	  [ /\u{2A55}/gu,
	    "\\ElsevierGlyph{E36E}" ],
	  [ /\u{2A56}/gu,
	    "\\ElOr{}" ],
	  [ /\u{2A5E}/gu,
	    "\\perspcorrespond{}" ],
	  [ /\u{2A5F}/gu,
	    "\\Elzminhat{}" ],
	  [ /\u{2A63}/gu,
	    "\\ElsevierGlyph{225A}" ],
	  [ /\u{2A6E}/gu,
	    "\\stackrel{*}{=}" ],
	  [ /\u{2A75}/gu,
	    "\\Equal{}" ],
	  [ /\u{2A7D}/gu,
	    "\\leqslant{}" ],
	  [ /\u{2A7E}/gu,
	    "\\geqslant{}" ],
	  [ /\u{2A85}/gu,
	    "\\lessapprox{}" ],
	  [ /\u{2A86}/gu,
	    "\\gtrapprox{}" ],
	  [ /\u{2A87}/gu,
	    "\\lneq{}" ],
	  [ /\u{2A88}/gu,
	    "\\gneq{}" ],
	  [ /\u{2A89}/gu,
	    "\\lnapprox{}" ],
	  [ /\u{2A8A}/gu,
	    "\\gnapprox{}" ],
	  [ /\u{2A8B}/gu,
	    "\\lesseqqgtr{}" ],
	  [ /\u{2A8C}/gu,
	    "\\gtreqqless{}" ],
	  [ /\u{2A95}/gu,
	    "\\eqslantless{}" ],
	  [ /\u{2A96}/gu,
	    "\\eqslantgtr{}" ],
	  [ /\u{2A9D}/gu,
	    "\\Pisymbol{ppi020}{117}" ],
	  [ /\u{2A9E}/gu,
	    "\\Pisymbol{ppi020}{105}" ],
	  [ /\u{2AA1}/gu,
	    "\\NestedLessLess{}" ],
	  [ /\u{2AA2}/gu,
	    "\\NestedGreaterGreater{}" ],
	  [ /\u{2AAF}/gu,
	    "\\preceq{}" ],
	  [ /\u{2AB0}/gu,
	    "\\succeq{}" ],
	  [ /\u{2AB5}/gu,
	    "\\precneqq{}" ],
	  [ /\u{2AB6}/gu,
	    "\\succneqq{}" ],
	  [ /\u{2AB7}/gu,
	    "\\precapprox{}" ],
	  [ /\u{2AB8}/gu,
	    "\\succapprox{}" ],
	  [ /\u{2AB9}/gu,
	    "\\precnapprox{}" ],
	  [ /\u{2ABA}/gu,
	    "\\succnapprox{}" ],
	  [ /\u{2AC5}/gu,
	    "\\subseteqq{}" ],
	  [ /\u{2AC6}/gu,
	    "\\supseteqq{}" ],
	  [ /\u{2ACB}/gu,
	    "\\subsetneqq{}" ],
	  [ /\u{2ACC}/gu,
	    "\\supsetneqq{}" ],
	  [ /\u{2AEB}/gu,
	    "\\ElsevierGlyph{E30D}" ],
	  [ /\u{2AF6}/gu,
	    "\\Elztdcol{}" ],
	  [ /\u{2AFD}/gu,
	    "{{/}\\!\\!{/}}" ],
	  [ /\u{300A}/gu,
	    "\\ElsevierGlyph{300A}" ],
	  [ /\u{300B}/gu,
	    "\\ElsevierGlyph{300B}" ],
	  [ /\u{3018}/gu,
	    "\\ElsevierGlyph{3018}" ],
	  [ /\u{3019}/gu,
	    "\\ElsevierGlyph{3019}" ],
	  [ /\u{301A}/gu,
	    "\\openbracketleft{}" ],
	  [ /\u{301B}/gu,
	    "\\openbracketright{}" ],
	  [ /\u{FB00}/gu,
	    "ff" ],
	  [ /\u{FB01}/gu,
	    "fi" ],
	  [ /\u{FB02}/gu,
	    "fl" ],
	  [ /\u{FB03}/gu,
	    "ffi" ],
	  [ /\u{FB04}/gu,
	    "ffl" ],
	  [ /\u{D400}/gu,
	    "\\mathbf{A}" ],
	  [ /\u{D401}/gu,
	    "\\mathbf{B}" ],
	  [ /\u{D402}/gu,
	    "\\mathbf{C}" ],
	  [ /\u{D403}/gu,
	    "\\mathbf{D}" ],
	  [ /\u{D404}/gu,
	    "\\mathbf{E}" ],
	  [ /\u{D405}/gu,
	    "\\mathbf{F}" ],
	  [ /\u{D406}/gu,
	    "\\mathbf{G}" ],
	  [ /\u{D407}/gu,
	    "\\mathbf{H}" ],
	  [ /\u{D408}/gu,
	    "\\mathbf{I}" ],
	  [ /\u{D409}/gu,
	    "\\mathbf{J}" ],
	  [ /\u{D40A}/gu,
	    "\\mathbf{K}" ],
	  [ /\u{D40B}/gu,
	    "\\mathbf{L}" ],
	  [ /\u{D40C}/gu,
	    "\\mathbf{M}" ],
	  [ /\u{D40D}/gu,
	    "\\mathbf{N}" ],
	  [ /\u{D40E}/gu,
	    "\\mathbf{O}" ],
	  [ /\u{D40F}/gu,
	    "\\mathbf{P}" ],
	  [ /\u{D410}/gu,
	    "\\mathbf{Q}" ],
	  [ /\u{D411}/gu,
	    "\\mathbf{R}" ],
	  [ /\u{D412}/gu,
	    "\\mathbf{S}" ],
	  [ /\u{D413}/gu,
	    "\\mathbf{T}" ],
	  [ /\u{D414}/gu,
	    "\\mathbf{U}" ],
	  [ /\u{D415}/gu,
	    "\\mathbf{V}" ],
	  [ /\u{D416}/gu,
	    "\\mathbf{W}" ],
	  [ /\u{D417}/gu,
	    "\\mathbf{X}" ],
	  [ /\u{D418}/gu,
	    "\\mathbf{Y}" ],
	  [ /\u{D419}/gu,
	    "\\mathbf{Z}" ],
	  [ /\u{D41A}/gu,
	    "\\mathbf{a}" ],
	  [ /\u{D41B}/gu,
	    "\\mathbf{b}" ],
	  [ /\u{D41C}/gu,
	    "\\mathbf{c}" ],
	  [ /\u{D41D}/gu,
	    "\\mathbf{d}" ],
	  [ /\u{D41E}/gu,
	    "\\mathbf{e}" ],
	  [ /\u{D41F}/gu,
	    "\\mathbf{f}" ],
	  [ /\u{D420}/gu,
	    "\\mathbf{g}" ],
	  [ /\u{D421}/gu,
	    "\\mathbf{h}" ],
	  [ /\u{D422}/gu,
	    "\\mathbf{i}" ],
	  [ /\u{D423}/gu,
	    "\\mathbf{j}" ],
	  [ /\u{D424}/gu,
	    "\\mathbf{k}" ],
	  [ /\u{D425}/gu,
	    "\\mathbf{l}" ],
	  [ /\u{D426}/gu,
	    "\\mathbf{m}" ],
	  [ /\u{D427}/gu,
	    "\\mathbf{n}" ],
	  [ /\u{D428}/gu,
	    "\\mathbf{o}" ],
	  [ /\u{D429}/gu,
	    "\\mathbf{p}" ],
	  [ /\u{D42A}/gu,
	    "\\mathbf{q}" ],
	  [ /\u{D42B}/gu,
	    "\\mathbf{r}" ],
	  [ /\u{D42C}/gu,
	    "\\mathbf{s}" ],
	  [ /\u{D42D}/gu,
	    "\\mathbf{t}" ],
	  [ /\u{D42E}/gu,
	    "\\mathbf{u}" ],
	  [ /\u{D42F}/gu,
	    "\\mathbf{v}" ],
	  [ /\u{D430}/gu,
	    "\\mathbf{w}" ],
	  [ /\u{D431}/gu,
	    "\\mathbf{x}" ],
	  [ /\u{D432}/gu,
	    "\\mathbf{y}" ],
	  [ /\u{D433}/gu,
	    "\\mathbf{z}" ],
	  [ /\u{D434}/gu,
	    "\\mathsl{A}" ],
	  [ /\u{D435}/gu,
	    "\\mathsl{B}" ],
	  [ /\u{D436}/gu,
	    "\\mathsl{C}" ],
	  [ /\u{D437}/gu,
	    "\\mathsl{D}" ],
	  [ /\u{D438}/gu,
	    "\\mathsl{E}" ],
	  [ /\u{D439}/gu,
	    "\\mathsl{F}" ],
	  [ /\u{D43A}/gu,
	    "\\mathsl{G}" ],
	  [ /\u{D43B}/gu,
	    "\\mathsl{H}" ],
	  [ /\u{D43C}/gu,
	    "\\mathsl{I}" ],
	  [ /\u{D43D}/gu,
	    "\\mathsl{J}" ],
	  [ /\u{D43E}/gu,
	    "\\mathsl{K}" ],
	  [ /\u{D43F}/gu,
	    "\\mathsl{L}" ],
	  [ /\u{D440}/gu,
	    "\\mathsl{M}" ],
	  [ /\u{D441}/gu,
	    "\\mathsl{N}" ],
	  [ /\u{D442}/gu,
	    "\\mathsl{O}" ],
	  [ /\u{D443}/gu,
	    "\\mathsl{P}" ],
	  [ /\u{D444}/gu,
	    "\\mathsl{Q}" ],
	  [ /\u{D445}/gu,
	    "\\mathsl{R}" ],
	  [ /\u{D446}/gu,
	    "\\mathsl{S}" ],
	  [ /\u{D447}/gu,
	    "\\mathsl{T}" ],
	  [ /\u{D448}/gu,
	    "\\mathsl{U}" ],
	  [ /\u{D449}/gu,
	    "\\mathsl{V}" ],
	  [ /\u{D44A}/gu,
	    "\\mathsl{W}" ],
	  [ /\u{D44B}/gu,
	    "\\mathsl{X}" ],
	  [ /\u{D44C}/gu,
	    "\\mathsl{Y}" ],
	  [ /\u{D44D}/gu,
	    "\\mathsl{Z}" ],
	  [ /\u{D44E}/gu,
	    "\\mathsl{a}" ],
	  [ /\u{D44F}/gu,
	    "\\mathsl{b}" ],
	  [ /\u{D450}/gu,
	    "\\mathsl{c}" ],
	  [ /\u{D451}/gu,
	    "\\mathsl{d}" ],
	  [ /\u{D452}/gu,
	    "\\mathsl{e}" ],
	  [ /\u{D453}/gu,
	    "\\mathsl{f}" ],
	  [ /\u{D454}/gu,
	    "\\mathsl{g}" ],
	  [ /\u{D456}/gu,
	    "\\mathsl{i}" ],
	  [ /\u{D457}/gu,
	    "\\mathsl{j}" ],
	  [ /\u{D458}/gu,
	    "\\mathsl{k}" ],
	  [ /\u{D459}/gu,
	    "\\mathsl{l}" ],
	  [ /\u{D45A}/gu,
	    "\\mathsl{m}" ],
	  [ /\u{D45B}/gu,
	    "\\mathsl{n}" ],
	  [ /\u{D45C}/gu,
	    "\\mathsl{o}" ],
	  [ /\u{D45D}/gu,
	    "\\mathsl{p}" ],
	  [ /\u{D45E}/gu,
	    "\\mathsl{q}" ],
	  [ /\u{D45F}/gu,
	    "\\mathsl{r}" ],
	  [ /\u{D460}/gu,
	    "\\mathsl{s}" ],
	  [ /\u{D461}/gu,
	    "\\mathsl{t}" ],
	  [ /\u{D462}/gu,
	    "\\mathsl{u}" ],
	  [ /\u{D463}/gu,
	    "\\mathsl{v}" ],
	  [ /\u{D464}/gu,
	    "\\mathsl{w}" ],
	  [ /\u{D465}/gu,
	    "\\mathsl{x}" ],
	  [ /\u{D466}/gu,
	    "\\mathsl{y}" ],
	  [ /\u{D467}/gu,
	    "\\mathsl{z}" ],
	  [ /\u{D468}/gu,
	    "\\mathbit{A}" ],
	  [ /\u{D469}/gu,
	    "\\mathbit{B}" ],
	  [ /\u{D46A}/gu,
	    "\\mathbit{C}" ],
	  [ /\u{D46B}/gu,
	    "\\mathbit{D}" ],
	  [ /\u{D46C}/gu,
	    "\\mathbit{E}" ],
	  [ /\u{D46D}/gu,
	    "\\mathbit{F}" ],
	  [ /\u{D46E}/gu,
	    "\\mathbit{G}" ],
	  [ /\u{D46F}/gu,
	    "\\mathbit{H}" ],
	  [ /\u{D470}/gu,
	    "\\mathbit{I}" ],
	  [ /\u{D471}/gu,
	    "\\mathbit{J}" ],
	  [ /\u{D472}/gu,
	    "\\mathbit{K}" ],
	  [ /\u{D473}/gu,
	    "\\mathbit{L}" ],
	  [ /\u{D474}/gu,
	    "\\mathbit{M}" ],
	  [ /\u{D475}/gu,
	    "\\mathbit{N}" ],
	  [ /\u{D476}/gu,
	    "\\mathbit{O}" ],
	  [ /\u{D477}/gu,
	    "\\mathbit{P}" ],
	  [ /\u{D478}/gu,
	    "\\mathbit{Q}" ],
	  [ /\u{D479}/gu,
	    "\\mathbit{R}" ],
	  [ /\u{D47A}/gu,
	    "\\mathbit{S}" ],
	  [ /\u{D47B}/gu,
	    "\\mathbit{T}" ],
	  [ /\u{D47C}/gu,
	    "\\mathbit{U}" ],
	  [ /\u{D47D}/gu,
	    "\\mathbit{V}" ],
	  [ /\u{D47E}/gu,
	    "\\mathbit{W}" ],
	  [ /\u{D47F}/gu,
	    "\\mathbit{X}" ],
	  [ /\u{D480}/gu,
	    "\\mathbit{Y}" ],
	  [ /\u{D481}/gu,
	    "\\mathbit{Z}" ],
	  [ /\u{D482}/gu,
	    "\\mathbit{a}" ],
	  [ /\u{D483}/gu,
	    "\\mathbit{b}" ],
	  [ /\u{D484}/gu,
	    "\\mathbit{c}" ],
	  [ /\u{D485}/gu,
	    "\\mathbit{d}" ],
	  [ /\u{D486}/gu,
	    "\\mathbit{e}" ],
	  [ /\u{D487}/gu,
	    "\\mathbit{f}" ],
	  [ /\u{D488}/gu,
	    "\\mathbit{g}" ],
	  [ /\u{D489}/gu,
	    "\\mathbit{h}" ],
	  [ /\u{D48A}/gu,
	    "\\mathbit{i}" ],
	  [ /\u{D48B}/gu,
	    "\\mathbit{j}" ],
	  [ /\u{D48C}/gu,
	    "\\mathbit{k}" ],
	  [ /\u{D48D}/gu,
	    "\\mathbit{l}" ],
	  [ /\u{D48E}/gu,
	    "\\mathbit{m}" ],
	  [ /\u{D48F}/gu,
	    "\\mathbit{n}" ],
	  [ /\u{D490}/gu,
	    "\\mathbit{o}" ],
	  [ /\u{D491}/gu,
	    "\\mathbit{p}" ],
	  [ /\u{D492}/gu,
	    "\\mathbit{q}" ],
	  [ /\u{D493}/gu,
	    "\\mathbit{r}" ],
	  [ /\u{D494}/gu,
	    "\\mathbit{s}" ],
	  [ /\u{D495}/gu,
	    "\\mathbit{t}" ],
	  [ /\u{D496}/gu,
	    "\\mathbit{u}" ],
	  [ /\u{D497}/gu,
	    "\\mathbit{v}" ],
	  [ /\u{D498}/gu,
	    "\\mathbit{w}" ],
	  [ /\u{D499}/gu,
	    "\\mathbit{x}" ],
	  [ /\u{D49A}/gu,
	    "\\mathbit{y}" ],
	  [ /\u{D49B}/gu,
	    "\\mathbit{z}" ],
	  [ /\u{D49C}/gu,
	    "\\mathscr{A}" ],
	  [ /\u{D49E}/gu,
	    "\\mathscr{C}" ],
	  [ /\u{D49F}/gu,
	    "\\mathscr{D}" ],
	  [ /\u{D4A2}/gu,
	    "\\mathscr{G}" ],
	  [ /\u{D4A5}/gu,
	    "\\mathscr{J}" ],
	  [ /\u{D4A6}/gu,
	    "\\mathscr{K}" ],
	  [ /\u{D4A9}/gu,
	    "\\mathscr{N}" ],
	  [ /\u{D4AA}/gu,
	    "\\mathscr{O}" ],
	  [ /\u{D4AB}/gu,
	    "\\mathscr{P}" ],
	  [ /\u{D4AC}/gu,
	    "\\mathscr{Q}" ],
	  [ /\u{D4AE}/gu,
	    "\\mathscr{S}" ],
	  [ /\u{D4AF}/gu,
	    "\\mathscr{T}" ],
	  [ /\u{D4B0}/gu,
	    "\\mathscr{U}" ],
	  [ /\u{D4B1}/gu,
	    "\\mathscr{V}" ],
	  [ /\u{D4B2}/gu,
	    "\\mathscr{W}" ],
	  [ /\u{D4B3}/gu,
	    "\\mathscr{X}" ],
	  [ /\u{D4B4}/gu,
	    "\\mathscr{Y}" ],
	  [ /\u{D4B5}/gu,
	    "\\mathscr{Z}" ],
	  [ /\u{D4B6}/gu,
	    "\\mathscr{a}" ],
	  [ /\u{D4B7}/gu,
	    "\\mathscr{b}" ],
	  [ /\u{D4B8}/gu,
	    "\\mathscr{c}" ],
	  [ /\u{D4B9}/gu,
	    "\\mathscr{d}" ],
	  [ /\u{D4BB}/gu,
	    "\\mathscr{f}" ],
	  [ /\u{D4BD}/gu,
	    "\\mathscr{h}" ],
	  [ /\u{D4BE}/gu,
	    "\\mathscr{i}" ],
	  [ /\u{D4BF}/gu,
	    "\\mathscr{j}" ],
	  [ /\u{D4C0}/gu,
	    "\\mathscr{k}" ],
	  [ /\u{D4C1}/gu,
	    "\\mathscr{l}" ],
	  [ /\u{D4C2}/gu,
	    "\\mathscr{m}" ],
	  [ /\u{D4C3}/gu,
	    "\\mathscr{n}" ],
	  [ /\u{D4C5}/gu,
	    "\\mathscr{p}" ],
	  [ /\u{D4C6}/gu,
	    "\\mathscr{q}" ],
	  [ /\u{D4C7}/gu,
	    "\\mathscr{r}" ],
	  [ /\u{D4C8}/gu,
	    "\\mathscr{s}" ],
	  [ /\u{D4C9}/gu,
	    "\\mathscr{t}" ],
	  [ /\u{D4CA}/gu,
	    "\\mathscr{u}" ],
	  [ /\u{D4CB}/gu,
	    "\\mathscr{v}" ],
	  [ /\u{D4CC}/gu,
	    "\\mathscr{w}" ],
	  [ /\u{D4CD}/gu,
	    "\\mathscr{x}" ],
	  [ /\u{D4CE}/gu,
	    "\\mathscr{y}" ],
	  [ /\u{D4CF}/gu,
	    "\\mathscr{z}" ],
	  [ /\u{D4D0}/gu,
	    "\\mathmit{A}" ],
	  [ /\u{D4D1}/gu,
	    "\\mathmit{B}" ],
	  [ /\u{D4D2}/gu,
	    "\\mathmit{C}" ],
	  [ /\u{D4D3}/gu,
	    "\\mathmit{D}" ],
	  [ /\u{D4D4}/gu,
	    "\\mathmit{E}" ],
	  [ /\u{D4D5}/gu,
	    "\\mathmit{F}" ],
	  [ /\u{D4D6}/gu,
	    "\\mathmit{G}" ],
	  [ /\u{D4D7}/gu,
	    "\\mathmit{H}" ],
	  [ /\u{D4D8}/gu,
	    "\\mathmit{I}" ],
	  [ /\u{D4D9}/gu,
	    "\\mathmit{J}" ],
	  [ /\u{D4DA}/gu,
	    "\\mathmit{K}" ],
	  [ /\u{D4DB}/gu,
	    "\\mathmit{L}" ],
	  [ /\u{D4DC}/gu,
	    "\\mathmit{M}" ],
	  [ /\u{D4DD}/gu,
	    "\\mathmit{N}" ],
	  [ /\u{D4DE}/gu,
	    "\\mathmit{O}" ],
	  [ /\u{D4DF}/gu,
	    "\\mathmit{P}" ],
	  [ /\u{D4E0}/gu,
	    "\\mathmit{Q}" ],
	  [ /\u{D4E1}/gu,
	    "\\mathmit{R}" ],
	  [ /\u{D4E2}/gu,
	    "\\mathmit{S}" ],
	  [ /\u{D4E3}/gu,
	    "\\mathmit{T}" ],
	  [ /\u{D4E4}/gu,
	    "\\mathmit{U}" ],
	  [ /\u{D4E5}/gu,
	    "\\mathmit{V}" ],
	  [ /\u{D4E6}/gu,
	    "\\mathmit{W}" ],
	  [ /\u{D4E7}/gu,
	    "\\mathmit{X}" ],
	  [ /\u{D4E8}/gu,
	    "\\mathmit{Y}" ],
	  [ /\u{D4E9}/gu,
	    "\\mathmit{Z}" ],
	  [ /\u{D4EA}/gu,
	    "\\mathmit{a}" ],
	  [ /\u{D4EB}/gu,
	    "\\mathmit{b}" ],
	  [ /\u{D4EC}/gu,
	    "\\mathmit{c}" ],
	  [ /\u{D4ED}/gu,
	    "\\mathmit{d}" ],
	  [ /\u{D4EE}/gu,
	    "\\mathmit{e}" ],
	  [ /\u{D4EF}/gu,
	    "\\mathmit{f}" ],
	  [ /\u{D4F0}/gu,
	    "\\mathmit{g}" ],
	  [ /\u{D4F1}/gu,
	    "\\mathmit{h}" ],
	  [ /\u{D4F2}/gu,
	    "\\mathmit{i}" ],
	  [ /\u{D4F3}/gu,
	    "\\mathmit{j}" ],
	  [ /\u{D4F4}/gu,
	    "\\mathmit{k}" ],
	  [ /\u{D4F5}/gu,
	    "\\mathmit{l}" ],
	  [ /\u{D4F6}/gu,
	    "\\mathmit{m}" ],
	  [ /\u{D4F7}/gu,
	    "\\mathmit{n}" ],
	  [ /\u{D4F8}/gu,
	    "\\mathmit{o}" ],
	  [ /\u{D4F9}/gu,
	    "\\mathmit{p}" ],
	  [ /\u{D4FA}/gu,
	    "\\mathmit{q}" ],
	  [ /\u{D4FB}/gu,
	    "\\mathmit{r}" ],
	  [ /\u{D4FC}/gu,
	    "\\mathmit{s}" ],
	  [ /\u{D4FD}/gu,
	    "\\mathmit{t}" ],
	  [ /\u{D4FE}/gu,
	    "\\mathmit{u}" ],
	  [ /\u{D4FF}/gu,
	    "\\mathmit{v}" ],
	  [ /\u{D500}/gu,
	    "\\mathmit{w}" ],
	  [ /\u{D501}/gu,
	    "\\mathmit{x}" ],
	  [ /\u{D502}/gu,
	    "\\mathmit{y}" ],
	  [ /\u{D503}/gu,
	    "\\mathmit{z}" ],
	  [ /\u{D504}/gu,
	    "\\mathfrak{A}" ],
	  [ /\u{D505}/gu,
	    "\\mathfrak{B}" ],
	  [ /\u{D507}/gu,
	    "\\mathfrak{D}" ],
	  [ /\u{D508}/gu,
	    "\\mathfrak{E}" ],
	  [ /\u{D509}/gu,
	    "\\mathfrak{F}" ],
	  [ /\u{D50A}/gu,
	    "\\mathfrak{G}" ],
	  [ /\u{D50D}/gu,
	    "\\mathfrak{J}" ],
	  [ /\u{D50E}/gu,
	    "\\mathfrak{K}" ],
	  [ /\u{D50F}/gu,
	    "\\mathfrak{L}" ],
	  [ /\u{D510}/gu,
	    "\\mathfrak{M}" ],
	  [ /\u{D511}/gu,
	    "\\mathfrak{N}" ],
	  [ /\u{D512}/gu,
	    "\\mathfrak{O}" ],
	  [ /\u{D513}/gu,
	    "\\mathfrak{P}" ],
	  [ /\u{D514}/gu,
	    "\\mathfrak{Q}" ],
	  [ /\u{D516}/gu,
	    "\\mathfrak{S}" ],
	  [ /\u{D517}/gu,
	    "\\mathfrak{T}" ],
	  [ /\u{D518}/gu,
	    "\\mathfrak{U}" ],
	  [ /\u{D519}/gu,
	    "\\mathfrak{V}" ],
	  [ /\u{D51A}/gu,
	    "\\mathfrak{W}" ],
	  [ /\u{D51B}/gu,
	    "\\mathfrak{X}" ],
	  [ /\u{D51C}/gu,
	    "\\mathfrak{Y}" ],
	  [ /\u{D51E}/gu,
	    "\\mathfrak{a}" ],
	  [ /\u{D51F}/gu,
	    "\\mathfrak{b}" ],
	  [ /\u{D520}/gu,
	    "\\mathfrak{c}" ],
	  [ /\u{D521}/gu,
	    "\\mathfrak{d}" ],
	  [ /\u{D522}/gu,
	    "\\mathfrak{e}" ],
	  [ /\u{D523}/gu,
	    "\\mathfrak{f}" ],
	  [ /\u{D524}/gu,
	    "\\mathfrak{g}" ],
	  [ /\u{D525}/gu,
	    "\\mathfrak{h}" ],
	  [ /\u{D526}/gu,
	    "\\mathfrak{i}" ],
	  [ /\u{D527}/gu,
	    "\\mathfrak{j}" ],
	  [ /\u{D528}/gu,
	    "\\mathfrak{k}" ],
	  [ /\u{D529}/gu,
	    "\\mathfrak{l}" ],
	  [ /\u{D52A}/gu,
	    "\\mathfrak{m}" ],
	  [ /\u{D52B}/gu,
	    "\\mathfrak{n}" ],
	  [ /\u{D52C}/gu,
	    "\\mathfrak{o}" ],
	  [ /\u{D52D}/gu,
	    "\\mathfrak{p}" ],
	  [ /\u{D52E}/gu,
	    "\\mathfrak{q}" ],
	  [ /\u{D52F}/gu,
	    "\\mathfrak{r}" ],
	  [ /\u{D530}/gu,
	    "\\mathfrak{s}" ],
	  [ /\u{D531}/gu,
	    "\\mathfrak{t}" ],
	  [ /\u{D532}/gu,
	    "\\mathfrak{u}" ],
	  [ /\u{D533}/gu,
	    "\\mathfrak{v}" ],
	  [ /\u{D534}/gu,
	    "\\mathfrak{w}" ],
	  [ /\u{D535}/gu,
	    "\\mathfrak{x}" ],
	  [ /\u{D536}/gu,
	    "\\mathfrak{y}" ],
	  [ /\u{D537}/gu,
	    "\\mathfrak{z}" ],
	  [ /\u{D538}/gu,
	    "\\mathbb{A}" ],
	  [ /\u{D539}/gu,
	    "\\mathbb{B}" ],
	  [ /\u{D53B}/gu,
	    "\\mathbb{D}" ],
	  [ /\u{D53C}/gu,
	    "\\mathbb{E}" ],
	  [ /\u{D53D}/gu,
	    "\\mathbb{F}" ],
	  [ /\u{D53E}/gu,
	    "\\mathbb{G}" ],
	  [ /\u{D540}/gu,
	    "\\mathbb{I}" ],
	  [ /\u{D541}/gu,
	    "\\mathbb{J}" ],
	  [ /\u{D542}/gu,
	    "\\mathbb{K}" ],
	  [ /\u{D543}/gu,
	    "\\mathbb{L}" ],
	  [ /\u{D544}/gu,
	    "\\mathbb{M}" ],
	  [ /\u{D546}/gu,
	    "\\mathbb{O}" ],
	  [ /\u{D54A}/gu,
	    "\\mathbb{S}" ],
	  [ /\u{D54B}/gu,
	    "\\mathbb{T}" ],
	  [ /\u{D54C}/gu,
	    "\\mathbb{U}" ],
	  [ /\u{D54D}/gu,
	    "\\mathbb{V}" ],
	  [ /\u{D54E}/gu,
	    "\\mathbb{W}" ],
	  [ /\u{D54F}/gu,
	    "\\mathbb{X}" ],
	  [ /\u{D550}/gu,
	    "\\mathbb{Y}" ],
	  [ /\u{D552}/gu,
	    "\\mathbb{a}" ],
	  [ /\u{D553}/gu,
	    "\\mathbb{b}" ],
	  [ /\u{D554}/gu,
	    "\\mathbb{c}" ],
	  [ /\u{D555}/gu,
	    "\\mathbb{d}" ],
	  [ /\u{D556}/gu,
	    "\\mathbb{e}" ],
	  [ /\u{D557}/gu,
	    "\\mathbb{f}" ],
	  [ /\u{D558}/gu,
	    "\\mathbb{g}" ],
	  [ /\u{D559}/gu,
	    "\\mathbb{h}" ],
	  [ /\u{D55A}/gu,
	    "\\mathbb{i}" ],
	  [ /\u{D55B}/gu,
	    "\\mathbb{j}" ],
	  [ /\u{D55C}/gu,
	    "\\mathbb{k}" ],
	  [ /\u{D55D}/gu,
	    "\\mathbb{l}" ],
	  [ /\u{D55E}/gu,
	    "\\mathbb{m}" ],
	  [ /\u{D55F}/gu,
	    "\\mathbb{n}" ],
	  [ /\u{D560}/gu,
	    "\\mathbb{o}" ],
	  [ /\u{D561}/gu,
	    "\\mathbb{p}" ],
	  [ /\u{D562}/gu,
	    "\\mathbb{q}" ],
	  [ /\u{D563}/gu,
	    "\\mathbb{r}" ],
	  [ /\u{D564}/gu,
	    "\\mathbb{s}" ],
	  [ /\u{D565}/gu,
	    "\\mathbb{t}" ],
	  [ /\u{D566}/gu,
	    "\\mathbb{u}" ],
	  [ /\u{D567}/gu,
	    "\\mathbb{v}" ],
	  [ /\u{D568}/gu,
	    "\\mathbb{w}" ],
	  [ /\u{D569}/gu,
	    "\\mathbb{x}" ],
	  [ /\u{D56A}/gu,
	    "\\mathbb{y}" ],
	  [ /\u{D56B}/gu,
	    "\\mathbb{z}" ],
	  [ /\u{D56C}/gu,
	    "\\mathslbb{A}" ],
	  [ /\u{D56D}/gu,
	    "\\mathslbb{B}" ],
	  [ /\u{D56E}/gu,
	    "\\mathslbb{C}" ],
	  [ /\u{D56F}/gu,
	    "\\mathslbb{D}" ],
	  [ /\u{D570}/gu,
	    "\\mathslbb{E}" ],
	  [ /\u{D571}/gu,
	    "\\mathslbb{F}" ],
	  [ /\u{D572}/gu,
	    "\\mathslbb{G}" ],
	  [ /\u{D573}/gu,
	    "\\mathslbb{H}" ],
	  [ /\u{D574}/gu,
	    "\\mathslbb{I}" ],
	  [ /\u{D575}/gu,
	    "\\mathslbb{J}" ],
	  [ /\u{D576}/gu,
	    "\\mathslbb{K}" ],
	  [ /\u{D577}/gu,
	    "\\mathslbb{L}" ],
	  [ /\u{D578}/gu,
	    "\\mathslbb{M}" ],
	  [ /\u{D579}/gu,
	    "\\mathslbb{N}" ],
	  [ /\u{D57A}/gu,
	    "\\mathslbb{O}" ],
	  [ /\u{D57B}/gu,
	    "\\mathslbb{P}" ],
	  [ /\u{D57C}/gu,
	    "\\mathslbb{Q}" ],
	  [ /\u{D57D}/gu,
	    "\\mathslbb{R}" ],
	  [ /\u{D57E}/gu,
	    "\\mathslbb{S}" ],
	  [ /\u{D57F}/gu,
	    "\\mathslbb{T}" ],
	  [ /\u{D580}/gu,
	    "\\mathslbb{U}" ],
	  [ /\u{D581}/gu,
	    "\\mathslbb{V}" ],
	  [ /\u{D582}/gu,
	    "\\mathslbb{W}" ],
	  [ /\u{D583}/gu,
	    "\\mathslbb{X}" ],
	  [ /\u{D584}/gu,
	    "\\mathslbb{Y}" ],
	  [ /\u{D585}/gu,
	    "\\mathslbb{Z}" ],
	  [ /\u{D586}/gu,
	    "\\mathslbb{a}" ],
	  [ /\u{D587}/gu,
	    "\\mathslbb{b}" ],
	  [ /\u{D588}/gu,
	    "\\mathslbb{c}" ],
	  [ /\u{D589}/gu,
	    "\\mathslbb{d}" ],
	  [ /\u{D58A}/gu,
	    "\\mathslbb{e}" ],
	  [ /\u{D58B}/gu,
	    "\\mathslbb{f}" ],
	  [ /\u{D58C}/gu,
	    "\\mathslbb{g}" ],
	  [ /\u{D58D}/gu,
	    "\\mathslbb{h}" ],
	  [ /\u{D58E}/gu,
	    "\\mathslbb{i}" ],
	  [ /\u{D58F}/gu,
	    "\\mathslbb{j}" ],
	  [ /\u{D590}/gu,
	    "\\mathslbb{k}" ],
	  [ /\u{D591}/gu,
	    "\\mathslbb{l}" ],
	  [ /\u{D592}/gu,
	    "\\mathslbb{m}" ],
	  [ /\u{D593}/gu,
	    "\\mathslbb{n}" ],
	  [ /\u{D594}/gu,
	    "\\mathslbb{o}" ],
	  [ /\u{D595}/gu,
	    "\\mathslbb{p}" ],
	  [ /\u{D596}/gu,
	    "\\mathslbb{q}" ],
	  [ /\u{D597}/gu,
	    "\\mathslbb{r}" ],
	  [ /\u{D598}/gu,
	    "\\mathslbb{s}" ],
	  [ /\u{D599}/gu,
	    "\\mathslbb{t}" ],
	  [ /\u{D59A}/gu,
	    "\\mathslbb{u}" ],
	  [ /\u{D59B}/gu,
	    "\\mathslbb{v}" ],
	  [ /\u{D59C}/gu,
	    "\\mathslbb{w}" ],
	  [ /\u{D59D}/gu,
	    "\\mathslbb{x}" ],
	  [ /\u{D59E}/gu,
	    "\\mathslbb{y}" ],
	  [ /\u{D59F}/gu,
	    "\\mathslbb{z}" ],
	  [ /\u{D5A0}/gu,
	    "\\mathsf{A}" ],
	  [ /\u{D5A1}/gu,
	    "\\mathsf{B}" ],
	  [ /\u{D5A2}/gu,
	    "\\mathsf{C}" ],
	  [ /\u{D5A3}/gu,
	    "\\mathsf{D}" ],
	  [ /\u{D5A4}/gu,
	    "\\mathsf{E}" ],
	  [ /\u{D5A5}/gu,
	    "\\mathsf{F}" ],
	  [ /\u{D5A6}/gu,
	    "\\mathsf{G}" ],
	  [ /\u{D5A7}/gu,
	    "\\mathsf{H}" ],
	  [ /\u{D5A8}/gu,
	    "\\mathsf{I}" ],
	  [ /\u{D5A9}/gu,
	    "\\mathsf{J}" ],
	  [ /\u{D5AA}/gu,
	    "\\mathsf{K}" ],
	  [ /\u{D5AB}/gu,
	    "\\mathsf{L}" ],
	  [ /\u{D5AC}/gu,
	    "\\mathsf{M}" ],
	  [ /\u{D5AD}/gu,
	    "\\mathsf{N}" ],
	  [ /\u{D5AE}/gu,
	    "\\mathsf{O}" ],
	  [ /\u{D5AF}/gu,
	    "\\mathsf{P}" ],
	  [ /\u{D5B0}/gu,
	    "\\mathsf{Q}" ],
	  [ /\u{D5B1}/gu,
	    "\\mathsf{R}" ],
	  [ /\u{D5B2}/gu,
	    "\\mathsf{S}" ],
	  [ /\u{D5B3}/gu,
	    "\\mathsf{T}" ],
	  [ /\u{D5B4}/gu,
	    "\\mathsf{U}" ],
	  [ /\u{D5B5}/gu,
	    "\\mathsf{V}" ],
	  [ /\u{D5B6}/gu,
	    "\\mathsf{W}" ],
	  [ /\u{D5B7}/gu,
	    "\\mathsf{X}" ],
	  [ /\u{D5B8}/gu,
	    "\\mathsf{Y}" ],
	  [ /\u{D5B9}/gu,
	    "\\mathsf{Z}" ],
	  [ /\u{D5BA}/gu,
	    "\\mathsf{a}" ],
	  [ /\u{D5BB}/gu,
	    "\\mathsf{b}" ],
	  [ /\u{D5BC}/gu,
	    "\\mathsf{c}" ],
	  [ /\u{D5BD}/gu,
	    "\\mathsf{d}" ],
	  [ /\u{D5BE}/gu,
	    "\\mathsf{e}" ],
	  [ /\u{D5BF}/gu,
	    "\\mathsf{f}" ],
	  [ /\u{D5C0}/gu,
	    "\\mathsf{g}" ],
	  [ /\u{D5C1}/gu,
	    "\\mathsf{h}" ],
	  [ /\u{D5C2}/gu,
	    "\\mathsf{i}" ],
	  [ /\u{D5C3}/gu,
	    "\\mathsf{j}" ],
	  [ /\u{D5C4}/gu,
	    "\\mathsf{k}" ],
	  [ /\u{D5C5}/gu,
	    "\\mathsf{l}" ],
	  [ /\u{D5C6}/gu,
	    "\\mathsf{m}" ],
	  [ /\u{D5C7}/gu,
	    "\\mathsf{n}" ],
	  [ /\u{D5C8}/gu,
	    "\\mathsf{o}" ],
	  [ /\u{D5C9}/gu,
	    "\\mathsf{p}" ],
	  [ /\u{D5CA}/gu,
	    "\\mathsf{q}" ],
	  [ /\u{D5CB}/gu,
	    "\\mathsf{r}" ],
	  [ /\u{D5CC}/gu,
	    "\\mathsf{s}" ],
	  [ /\u{D5CD}/gu,
	    "\\mathsf{t}" ],
	  [ /\u{D5CE}/gu,
	    "\\mathsf{u}" ],
	  [ /\u{D5CF}/gu,
	    "\\mathsf{v}" ],
	  [ /\u{D5D0}/gu,
	    "\\mathsf{w}" ],
	  [ /\u{D5D1}/gu,
	    "\\mathsf{x}" ],
	  [ /\u{D5D2}/gu,
	    "\\mathsf{y}" ],
	  [ /\u{D5D3}/gu,
	    "\\mathsf{z}" ],
	  [ /\u{D5D4}/gu,
	    "\\mathsfbf{A}" ],
	  [ /\u{D5D5}/gu,
	    "\\mathsfbf{B}" ],
	  [ /\u{D5D6}/gu,
	    "\\mathsfbf{C}" ],
	  [ /\u{D5D7}/gu,
	    "\\mathsfbf{D}" ],
	  [ /\u{D5D8}/gu,
	    "\\mathsfbf{E}" ],
	  [ /\u{D5D9}/gu,
	    "\\mathsfbf{F}" ],
	  [ /\u{D5DA}/gu,
	    "\\mathsfbf{G}" ],
	  [ /\u{D5DB}/gu,
	    "\\mathsfbf{H}" ],
	  [ /\u{D5DC}/gu,
	    "\\mathsfbf{I}" ],
	  [ /\u{D5DD}/gu,
	    "\\mathsfbf{J}" ],
	  [ /\u{D5DE}/gu,
	    "\\mathsfbf{K}" ],
	  [ /\u{D5DF}/gu,
	    "\\mathsfbf{L}" ],
	  [ /\u{D5E0}/gu,
	    "\\mathsfbf{M}" ],
	  [ /\u{D5E1}/gu,
	    "\\mathsfbf{N}" ],
	  [ /\u{D5E2}/gu,
	    "\\mathsfbf{O}" ],
	  [ /\u{D5E3}/gu,
	    "\\mathsfbf{P}" ],
	  [ /\u{D5E4}/gu,
	    "\\mathsfbf{Q}" ],
	  [ /\u{D5E5}/gu,
	    "\\mathsfbf{R}" ],
	  [ /\u{D5E6}/gu,
	    "\\mathsfbf{S}" ],
	  [ /\u{D5E7}/gu,
	    "\\mathsfbf{T}" ],
	  [ /\u{D5E8}/gu,
	    "\\mathsfbf{U}" ],
	  [ /\u{D5E9}/gu,
	    "\\mathsfbf{V}" ],
	  [ /\u{D5EA}/gu,
	    "\\mathsfbf{W}" ],
	  [ /\u{D5EB}/gu,
	    "\\mathsfbf{X}" ],
	  [ /\u{D5EC}/gu,
	    "\\mathsfbf{Y}" ],
	  [ /\u{D5ED}/gu,
	    "\\mathsfbf{Z}" ],
	  [ /\u{D5EE}/gu,
	    "\\mathsfbf{a}" ],
	  [ /\u{D5EF}/gu,
	    "\\mathsfbf{b}" ],
	  [ /\u{D5F0}/gu,
	    "\\mathsfbf{c}" ],
	  [ /\u{D5F1}/gu,
	    "\\mathsfbf{d}" ],
	  [ /\u{D5F2}/gu,
	    "\\mathsfbf{e}" ],
	  [ /\u{D5F3}/gu,
	    "\\mathsfbf{f}" ],
	  [ /\u{D5F4}/gu,
	    "\\mathsfbf{g}" ],
	  [ /\u{D5F5}/gu,
	    "\\mathsfbf{h}" ],
	  [ /\u{D5F6}/gu,
	    "\\mathsfbf{i}" ],
	  [ /\u{D5F7}/gu,
	    "\\mathsfbf{j}" ],
	  [ /\u{D5F8}/gu,
	    "\\mathsfbf{k}" ],
	  [ /\u{D5F9}/gu,
	    "\\mathsfbf{l}" ],
	  [ /\u{D5FA}/gu,
	    "\\mathsfbf{m}" ],
	  [ /\u{D5FB}/gu,
	    "\\mathsfbf{n}" ],
	  [ /\u{D5FC}/gu,
	    "\\mathsfbf{o}" ],
	  [ /\u{D5FD}/gu,
	    "\\mathsfbf{p}" ],
	  [ /\u{D5FE}/gu,
	    "\\mathsfbf{q}" ],
	  [ /\u{D5FF}/gu,
	    "\\mathsfbf{r}" ],
	  [ /\u{D600}/gu,
	    "\\mathsfbf{s}" ],
	  [ /\u{D601}/gu,
	    "\\mathsfbf{t}" ],
	  [ /\u{D602}/gu,
	    "\\mathsfbf{u}" ],
	  [ /\u{D603}/gu,
	    "\\mathsfbf{v}" ],
	  [ /\u{D604}/gu,
	    "\\mathsfbf{w}" ],
	  [ /\u{D605}/gu,
	    "\\mathsfbf{x}" ],
	  [ /\u{D606}/gu,
	    "\\mathsfbf{y}" ],
	  [ /\u{D607}/gu,
	    "\\mathsfbf{z}" ],
	  [ /\u{D608}/gu,
	    "\\mathsfsl{A}" ],
	  [ /\u{D609}/gu,
	    "\\mathsfsl{B}" ],
	  [ /\u{D60A}/gu,
	    "\\mathsfsl{C}" ],
	  [ /\u{D60B}/gu,
	    "\\mathsfsl{D}" ],
	  [ /\u{D60C}/gu,
	    "\\mathsfsl{E}" ],
	  [ /\u{D60D}/gu,
	    "\\mathsfsl{F}" ],
	  [ /\u{D60E}/gu,
	    "\\mathsfsl{G}" ],
	  [ /\u{D60F}/gu,
	    "\\mathsfsl{H}" ],
	  [ /\u{D610}/gu,
	    "\\mathsfsl{I}" ],
	  [ /\u{D611}/gu,
	    "\\mathsfsl{J}" ],
	  [ /\u{D612}/gu,
	    "\\mathsfsl{K}" ],
	  [ /\u{D613}/gu,
	    "\\mathsfsl{L}" ],
	  [ /\u{D614}/gu,
	    "\\mathsfsl{M}" ],
	  [ /\u{D615}/gu,
	    "\\mathsfsl{N}" ],
	  [ /\u{D616}/gu,
	    "\\mathsfsl{O}" ],
	  [ /\u{D617}/gu,
	    "\\mathsfsl{P}" ],
	  [ /\u{D618}/gu,
	    "\\mathsfsl{Q}" ],
	  [ /\u{D619}/gu,
	    "\\mathsfsl{R}" ],
	  [ /\u{D61A}/gu,
	    "\\mathsfsl{S}" ],
	  [ /\u{D61B}/gu,
	    "\\mathsfsl{T}" ],
	  [ /\u{D61C}/gu,
	    "\\mathsfsl{U}" ],
	  [ /\u{D61D}/gu,
	    "\\mathsfsl{V}" ],
	  [ /\u{D61E}/gu,
	    "\\mathsfsl{W}" ],
	  [ /\u{D61F}/gu,
	    "\\mathsfsl{X}" ],
	  [ /\u{D620}/gu,
	    "\\mathsfsl{Y}" ],
	  [ /\u{D621}/gu,
	    "\\mathsfsl{Z}" ],
	  [ /\u{D622}/gu,
	    "\\mathsfsl{a}" ],
	  [ /\u{D623}/gu,
	    "\\mathsfsl{b}" ],
	  [ /\u{D624}/gu,
	    "\\mathsfsl{c}" ],
	  [ /\u{D625}/gu,
	    "\\mathsfsl{d}" ],
	  [ /\u{D626}/gu,
	    "\\mathsfsl{e}" ],
	  [ /\u{D627}/gu,
	    "\\mathsfsl{f}" ],
	  [ /\u{D628}/gu,
	    "\\mathsfsl{g}" ],
	  [ /\u{D629}/gu,
	    "\\mathsfsl{h}" ],
	  [ /\u{D62A}/gu,
	    "\\mathsfsl{i}" ],
	  [ /\u{D62B}/gu,
	    "\\mathsfsl{j}" ],
	  [ /\u{D62C}/gu,
	    "\\mathsfsl{k}" ],
	  [ /\u{D62D}/gu,
	    "\\mathsfsl{l}" ],
	  [ /\u{D62E}/gu,
	    "\\mathsfsl{m}" ],
	  [ /\u{D62F}/gu,
	    "\\mathsfsl{n}" ],
	  [ /\u{D630}/gu,
	    "\\mathsfsl{o}" ],
	  [ /\u{D631}/gu,
	    "\\mathsfsl{p}" ],
	  [ /\u{D632}/gu,
	    "\\mathsfsl{q}" ],
	  [ /\u{D633}/gu,
	    "\\mathsfsl{r}" ],
	  [ /\u{D634}/gu,
	    "\\mathsfsl{s}" ],
	  [ /\u{D635}/gu,
	    "\\mathsfsl{t}" ],
	  [ /\u{D636}/gu,
	    "\\mathsfsl{u}" ],
	  [ /\u{D637}/gu,
	    "\\mathsfsl{v}" ],
	  [ /\u{D638}/gu,
	    "\\mathsfsl{w}" ],
	  [ /\u{D639}/gu,
	    "\\mathsfsl{x}" ],
	  [ /\u{D63A}/gu,
	    "\\mathsfsl{y}" ],
	  [ /\u{D63B}/gu,
	    "\\mathsfsl{z}" ],
	  [ /\u{D63C}/gu,
	    "\\mathsfbfsl{A}" ],
	  [ /\u{D63D}/gu,
	    "\\mathsfbfsl{B}" ],
	  [ /\u{D63E}/gu,
	    "\\mathsfbfsl{C}" ],
	  [ /\u{D63F}/gu,
	    "\\mathsfbfsl{D}" ],
	  [ /\u{D640}/gu,
	    "\\mathsfbfsl{E}" ],
	  [ /\u{D641}/gu,
	    "\\mathsfbfsl{F}" ],
	  [ /\u{D642}/gu,
	    "\\mathsfbfsl{G}" ],
	  [ /\u{D643}/gu,
	    "\\mathsfbfsl{H}" ],
	  [ /\u{D644}/gu,
	    "\\mathsfbfsl{I}" ],
	  [ /\u{D645}/gu,
	    "\\mathsfbfsl{J}" ],
	  [ /\u{D646}/gu,
	    "\\mathsfbfsl{K}" ],
	  [ /\u{D647}/gu,
	    "\\mathsfbfsl{L}" ],
	  [ /\u{D648}/gu,
	    "\\mathsfbfsl{M}" ],
	  [ /\u{D649}/gu,
	    "\\mathsfbfsl{N}" ],
	  [ /\u{D64A}/gu,
	    "\\mathsfbfsl{O}" ],
	  [ /\u{D64B}/gu,
	    "\\mathsfbfsl{P}" ],
	  [ /\u{D64C}/gu,
	    "\\mathsfbfsl{Q}" ],
	  [ /\u{D64D}/gu,
	    "\\mathsfbfsl{R}" ],
	  [ /\u{D64E}/gu,
	    "\\mathsfbfsl{S}" ],
	  [ /\u{D64F}/gu,
	    "\\mathsfbfsl{T}" ],
	  [ /\u{D650}/gu,
	    "\\mathsfbfsl{U}" ],
	  [ /\u{D651}/gu,
	    "\\mathsfbfsl{V}" ],
	  [ /\u{D652}/gu,
	    "\\mathsfbfsl{W}" ],
	  [ /\u{D653}/gu,
	    "\\mathsfbfsl{X}" ],
	  [ /\u{D654}/gu,
	    "\\mathsfbfsl{Y}" ],
	  [ /\u{D655}/gu,
	    "\\mathsfbfsl{Z}" ],
	  [ /\u{D656}/gu,
	    "\\mathsfbfsl{a}" ],
	  [ /\u{D657}/gu,
	    "\\mathsfbfsl{b}" ],
	  [ /\u{D658}/gu,
	    "\\mathsfbfsl{c}" ],
	  [ /\u{D659}/gu,
	    "\\mathsfbfsl{d}" ],
	  [ /\u{D65A}/gu,
	    "\\mathsfbfsl{e}" ],
	  [ /\u{D65B}/gu,
	    "\\mathsfbfsl{f}" ],
	  [ /\u{D65C}/gu,
	    "\\mathsfbfsl{g}" ],
	  [ /\u{D65D}/gu,
	    "\\mathsfbfsl{h}" ],
	  [ /\u{D65E}/gu,
	    "\\mathsfbfsl{i}" ],
	  [ /\u{D65F}/gu,
	    "\\mathsfbfsl{j}" ],
	  [ /\u{D660}/gu,
	    "\\mathsfbfsl{k}" ],
	  [ /\u{D661}/gu,
	    "\\mathsfbfsl{l}" ],
	  [ /\u{D662}/gu,
	    "\\mathsfbfsl{m}" ],
	  [ /\u{D663}/gu,
	    "\\mathsfbfsl{n}" ],
	  [ /\u{D664}/gu,
	    "\\mathsfbfsl{o}" ],
	  [ /\u{D665}/gu,
	    "\\mathsfbfsl{p}" ],
	  [ /\u{D666}/gu,
	    "\\mathsfbfsl{q}" ],
	  [ /\u{D667}/gu,
	    "\\mathsfbfsl{r}" ],
	  [ /\u{D668}/gu,
	    "\\mathsfbfsl{s}" ],
	  [ /\u{D669}/gu,
	    "\\mathsfbfsl{t}" ],
	  [ /\u{D66A}/gu,
	    "\\mathsfbfsl{u}" ],
	  [ /\u{D66B}/gu,
	    "\\mathsfbfsl{v}" ],
	  [ /\u{D66C}/gu,
	    "\\mathsfbfsl{w}" ],
	  [ /\u{D66D}/gu,
	    "\\mathsfbfsl{x}" ],
	  [ /\u{D66E}/gu,
	    "\\mathsfbfsl{y}" ],
	  [ /\u{D66F}/gu,
	    "\\mathsfbfsl{z}" ],
	  [ /\u{D670}/gu,
	    "\\mathtt{A}" ],
	  [ /\u{D671}/gu,
	    "\\mathtt{B}" ],
	  [ /\u{D672}/gu,
	    "\\mathtt{C}" ],
	  [ /\u{D673}/gu,
	    "\\mathtt{D}" ],
	  [ /\u{D674}/gu,
	    "\\mathtt{E}" ],
	  [ /\u{D675}/gu,
	    "\\mathtt{F}" ],
	  [ /\u{D676}/gu,
	    "\\mathtt{G}" ],
	  [ /\u{D677}/gu,
	    "\\mathtt{H}" ],
	  [ /\u{D678}/gu,
	    "\\mathtt{I}" ],
	  [ /\u{D679}/gu,
	    "\\mathtt{J}" ],
	  [ /\u{D67A}/gu,
	    "\\mathtt{K}" ],
	  [ /\u{D67B}/gu,
	    "\\mathtt{L}" ],
	  [ /\u{D67C}/gu,
	    "\\mathtt{M}" ],
	  [ /\u{D67D}/gu,
	    "\\mathtt{N}" ],
	  [ /\u{D67E}/gu,
	    "\\mathtt{O}" ],
	  [ /\u{D67F}/gu,
	    "\\mathtt{P}" ],
	  [ /\u{D680}/gu,
	    "\\mathtt{Q}" ],
	  [ /\u{D681}/gu,
	    "\\mathtt{R}" ],
	  [ /\u{D682}/gu,
	    "\\mathtt{S}" ],
	  [ /\u{D683}/gu,
	    "\\mathtt{T}" ],
	  [ /\u{D684}/gu,
	    "\\mathtt{U}" ],
	  [ /\u{D685}/gu,
	    "\\mathtt{V}" ],
	  [ /\u{D686}/gu,
	    "\\mathtt{W}" ],
	  [ /\u{D687}/gu,
	    "\\mathtt{X}" ],
	  [ /\u{D688}/gu,
	    "\\mathtt{Y}" ],
	  [ /\u{D689}/gu,
	    "\\mathtt{Z}" ],
	  [ /\u{D68A}/gu,
	    "\\mathtt{a}" ],
	  [ /\u{D68B}/gu,
	    "\\mathtt{b}" ],
	  [ /\u{D68C}/gu,
	    "\\mathtt{c}" ],
	  [ /\u{D68D}/gu,
	    "\\mathtt{d}" ],
	  [ /\u{D68E}/gu,
	    "\\mathtt{e}" ],
	  [ /\u{D68F}/gu,
	    "\\mathtt{f}" ],
	  [ /\u{D690}/gu,
	    "\\mathtt{g}" ],
	  [ /\u{D691}/gu,
	    "\\mathtt{h}" ],
	  [ /\u{D692}/gu,
	    "\\mathtt{i}" ],
	  [ /\u{D693}/gu,
	    "\\mathtt{j}" ],
	  [ /\u{D694}/gu,
	    "\\mathtt{k}" ],
	  [ /\u{D695}/gu,
	    "\\mathtt{l}" ],
	  [ /\u{D696}/gu,
	    "\\mathtt{m}" ],
	  [ /\u{D697}/gu,
	    "\\mathtt{n}" ],
	  [ /\u{D698}/gu,
	    "\\mathtt{o}" ],
	  [ /\u{D699}/gu,
	    "\\mathtt{p}" ],
	  [ /\u{D69A}/gu,
	    "\\mathtt{q}" ],
	  [ /\u{D69B}/gu,
	    "\\mathtt{r}" ],
	  [ /\u{D69C}/gu,
	    "\\mathtt{s}" ],
	  [ /\u{D69D}/gu,
	    "\\mathtt{t}" ],
	  [ /\u{D69E}/gu,
	    "\\mathtt{u}" ],
	  [ /\u{D69F}/gu,
	    "\\mathtt{v}" ],
	  [ /\u{D6A0}/gu,
	    "\\mathtt{w}" ],
	  [ /\u{D6A1}/gu,
	    "\\mathtt{x}" ],
	  [ /\u{D6A2}/gu,
	    "\\mathtt{y}" ],
	  [ /\u{D6A3}/gu,
	    "\\mathtt{z}" ],
	  [ /\u{D6A8}/gu,
	    "\\mathbf{\\Alpha}" ],
	  [ /\u{D6A9}/gu,
	    "\\mathbf{\\Beta}" ],
	  [ /\u{D6AA}/gu,
	    "\\mathbf{\\Gamma}" ],
	  [ /\u{D6AB}/gu,
	    "\\mathbf{\\Delta}" ],
	  [ /\u{D6AC}/gu,
	    "\\mathbf{\\Epsilon}" ],
	  [ /\u{D6AD}/gu,
	    "\\mathbf{\\Zeta}" ],
	  [ /\u{D6AE}/gu,
	    "\\mathbf{\\Eta}" ],
	  [ /\u{D6AF}/gu,
	    "\\mathbf{\\Theta}" ],
	  [ /\u{D6B0}/gu,
	    "\\mathbf{\\Iota}" ],
	  [ /\u{D6B1}/gu,
	    "\\mathbf{\\Kappa}" ],
	  [ /\u{D6B2}/gu,
	    "\\mathbf{\\Lambda}" ],
	  [ /\u{D6B5}/gu,
	    "\\mathbf{\\Xi}" ],
	  [ /\u{D6B7}/gu,
	    "\\mathbf{\\Pi}" ],
	  [ /\u{D6B8}/gu,
	    "\\mathbf{\\Rho}" ],
	  [ /\u{D6B9}/gu,
	    "\\mathbf{\\vartheta}" ],
	  [ /\u{D6BA}/gu,
	    "\\mathbf{\\Sigma}" ],
	  [ /\u{D6BB}/gu,
	    "\\mathbf{\\Tau}" ],
	  [ /\u{D6BC}/gu,
	    "\\mathbf{\\Upsilon}" ],
	  [ /\u{D6BD}/gu,
	    "\\mathbf{\\Phi}" ],
	  [ /\u{D6BE}/gu,
	    "\\mathbf{\\Chi}" ],
	  [ /\u{D6BF}/gu,
	    "\\mathbf{\\Psi}" ],
	  [ /\u{D6C0}/gu,
	    "\\mathbf{\\Omega}" ],
	  [ /\u{D6C1}/gu,
	    "\\mathbf{\\nabla}" ],
	  [ /\u{D6C2}/gu,
	    "\\mathbf{\\Alpha}" ],
	  [ /\u{D6C3}/gu,
	    "\\mathbf{\\Beta}" ],
	  [ /\u{D6C4}/gu,
	    "\\mathbf{\\Gamma}" ],
	  [ /\u{D6C5}/gu,
	    "\\mathbf{\\Delta}" ],
	  [ /\u{D6C6}/gu,
	    "\\mathbf{\\Epsilon}" ],
	  [ /\u{D6C7}/gu,
	    "\\mathbf{\\Zeta}" ],
	  [ /\u{D6C8}/gu,
	    "\\mathbf{\\Eta}" ],
	  [ /\u{D6C9}/gu,
	    "\\mathbf{\\theta}" ],
	  [ /\u{D6CA}/gu,
	    "\\mathbf{\\Iota}" ],
	  [ /\u{D6CB}/gu,
	    "\\mathbf{\\Kappa}" ],
	  [ /\u{D6CC}/gu,
	    "\\mathbf{\\Lambda}" ],
	  [ /\u{D6CF}/gu,
	    "\\mathbf{\\Xi}" ],
	  [ /\u{D6D1}/gu,
	    "\\mathbf{\\Pi}" ],
	  [ /\u{D6D2}/gu,
	    "\\mathbf{\\Rho}" ],
	  [ /\u{D6D3}/gu,
	    "\\mathbf{\\varsigma}" ],
	  [ /\u{D6D4}/gu,
	    "\\mathbf{\\Sigma}" ],
	  [ /\u{D6D5}/gu,
	    "\\mathbf{\\Tau}" ],
	  [ /\u{D6D6}/gu,
	    "\\mathbf{\\Upsilon}" ],
	  [ /\u{D6D7}/gu,
	    "\\mathbf{\\Phi}" ],
	  [ /\u{D6D8}/gu,
	    "\\mathbf{\\Chi}" ],
	  [ /\u{D6D9}/gu,
	    "\\mathbf{\\Psi}" ],
	  [ /\u{D6DA}/gu,
	    "\\mathbf{\\Omega}" ],
	  [ /\u{D6DB}/gu,
	    "\\partial{}" ],
	  [ /\u{D6DC}/gu,
	    "\\in" ],
	  [ /\u{D6DD}/gu,
	    "\\mathbf{\\vartheta}" ],
	  [ /\u{D6DE}/gu,
	    "\\mathbf{\\varkappa}" ],
	  [ /\u{D6DF}/gu,
	    "\\mathbf{\\phi}" ],
	  [ /\u{D6E0}/gu,
	    "\\mathbf{\\varrho}" ],
	  [ /\u{D6E1}/gu,
	    "\\mathbf{\\varpi}" ],
	  [ /\u{D6E2}/gu,
	    "\\mathsl{\\Alpha}" ],
	  [ /\u{D6E3}/gu,
	    "\\mathsl{\\Beta}" ],
	  [ /\u{D6E4}/gu,
	    "\\mathsl{\\Gamma}" ],
	  [ /\u{D6E5}/gu,
	    "\\mathsl{\\Delta}" ],
	  [ /\u{D6E6}/gu,
	    "\\mathsl{\\Epsilon}" ],
	  [ /\u{D6E7}/gu,
	    "\\mathsl{\\Zeta}" ],
	  [ /\u{D6E8}/gu,
	    "\\mathsl{\\Eta}" ],
	  [ /\u{D6E9}/gu,
	    "\\mathsl{\\Theta}" ],
	  [ /\u{D6EA}/gu,
	    "\\mathsl{\\Iota}" ],
	  [ /\u{D6EB}/gu,
	    "\\mathsl{\\Kappa}" ],
	  [ /\u{D6EC}/gu,
	    "\\mathsl{\\Lambda}" ],
	  [ /\u{D6EF}/gu,
	    "\\mathsl{\\Xi}" ],
	  [ /\u{D6F1}/gu,
	    "\\mathsl{\\Pi}" ],
	  [ /\u{D6F2}/gu,
	    "\\mathsl{\\Rho}" ],
	  [ /\u{D6F3}/gu,
	    "\\mathsl{\\vartheta}" ],
	  [ /\u{D6F4}/gu,
	    "\\mathsl{\\Sigma}" ],
	  [ /\u{D6F5}/gu,
	    "\\mathsl{\\Tau}" ],
	  [ /\u{D6F6}/gu,
	    "\\mathsl{\\Upsilon}" ],
	  [ /\u{D6F7}/gu,
	    "\\mathsl{\\Phi}" ],
	  [ /\u{D6F8}/gu,
	    "\\mathsl{\\Chi}" ],
	  [ /\u{D6F9}/gu,
	    "\\mathsl{\\Psi}" ],
	  [ /\u{D6FA}/gu,
	    "\\mathsl{\\Omega}" ],
	  [ /\u{D6FB}/gu,
	    "\\mathsl{\\nabla}" ],
	  [ /\u{D6FC}/gu,
	    "\\mathsl{\\Alpha}" ],
	  [ /\u{D6FD}/gu,
	    "\\mathsl{\\Beta}" ],
	  [ /\u{D6FE}/gu,
	    "\\mathsl{\\Gamma}" ],
	  [ /\u{D6FF}/gu,
	    "\\mathsl{\\Delta}" ],
	  [ /\u{D700}/gu,
	    "\\mathsl{\\Epsilon}" ],
	  [ /\u{D701}/gu,
	    "\\mathsl{\\Zeta}" ],
	  [ /\u{D702}/gu,
	    "\\mathsl{\\Eta}" ],
	  [ /\u{D703}/gu,
	    "\\mathsl{\\Theta}" ],
	  [ /\u{D704}/gu,
	    "\\mathsl{\\Iota}" ],
	  [ /\u{D705}/gu,
	    "\\mathsl{\\Kappa}" ],
	  [ /\u{D706}/gu,
	    "\\mathsl{\\Lambda}" ],
	  [ /\u{D709}/gu,
	    "\\mathsl{\\Xi}" ],
	  [ /\u{D70B}/gu,
	    "\\mathsl{\\Pi}" ],
	  [ /\u{D70C}/gu,
	    "\\mathsl{\\Rho}" ],
	  [ /\u{D70D}/gu,
	    "\\mathsl{\\varsigma}" ],
	  [ /\u{D70E}/gu,
	    "\\mathsl{\\Sigma}" ],
	  [ /\u{D70F}/gu,
	    "\\mathsl{\\Tau}" ],
	  [ /\u{D710}/gu,
	    "\\mathsl{\\Upsilon}" ],
	  [ /\u{D711}/gu,
	    "\\mathsl{\\Phi}" ],
	  [ /\u{D712}/gu,
	    "\\mathsl{\\Chi}" ],
	  [ /\u{D713}/gu,
	    "\\mathsl{\\Psi}" ],
	  [ /\u{D714}/gu,
	    "\\mathsl{\\Omega}" ],
	  [ /\u{D715}/gu,
	    "\\partial{}" ],
	  [ /\u{D716}/gu,
	    "\\in" ],
	  [ /\u{D717}/gu,
	    "\\mathsl{\\vartheta}" ],
	  [ /\u{D718}/gu,
	    "\\mathsl{\\varkappa}" ],
	  [ /\u{D719}/gu,
	    "\\mathsl{\\phi}" ],
	  [ /\u{D71A}/gu,
	    "\\mathsl{\\varrho}" ],
	  [ /\u{D71B}/gu,
	    "\\mathsl{\\varpi}" ],
	  [ /\u{D71C}/gu,
	    "\\mathbit{\\Alpha}" ],
	  [ /\u{D71D}/gu,
	    "\\mathbit{\\Beta}" ],
	  [ /\u{D71E}/gu,
	    "\\mathbit{\\Gamma}" ],
	  [ /\u{D71F}/gu,
	    "\\mathbit{\\Delta}" ],
	  [ /\u{D720}/gu,
	    "\\mathbit{\\Epsilon}" ],
	  [ /\u{D721}/gu,
	    "\\mathbit{\\Zeta}" ],
	  [ /\u{D722}/gu,
	    "\\mathbit{\\Eta}" ],
	  [ /\u{D723}/gu,
	    "\\mathbit{\\Theta}" ],
	  [ /\u{D724}/gu,
	    "\\mathbit{\\Iota}" ],
	  [ /\u{D725}/gu,
	    "\\mathbit{\\Kappa}" ],
	  [ /\u{D726}/gu,
	    "\\mathbit{\\Lambda}" ],
	  [ /\u{D729}/gu,
	    "\\mathbit{\\Xi}" ],
	  [ /\u{D72B}/gu,
	    "\\mathbit{\\Pi}" ],
	  [ /\u{D72C}/gu,
	    "\\mathbit{\\Rho}" ],
	  [ /\u{D72D}/gu,
	    "\\mathbit{O}" ],
	  [ /\u{D72E}/gu,
	    "\\mathbit{\\Sigma}" ],
	  [ /\u{D72F}/gu,
	    "\\mathbit{\\Tau}" ],
	  [ /\u{D730}/gu,
	    "\\mathbit{\\Upsilon}" ],
	  [ /\u{D731}/gu,
	    "\\mathbit{\\Phi}" ],
	  [ /\u{D732}/gu,
	    "\\mathbit{\\Chi}" ],
	  [ /\u{D733}/gu,
	    "\\mathbit{\\Psi}" ],
	  [ /\u{D734}/gu,
	    "\\mathbit{\\Omega}" ],
	  [ /\u{D735}/gu,
	    "\\mathbit{\\nabla}" ],
	  [ /\u{D736}/gu,
	    "\\mathbit{\\Alpha}" ],
	  [ /\u{D737}/gu,
	    "\\mathbit{\\Beta}" ],
	  [ /\u{D738}/gu,
	    "\\mathbit{\\Gamma}" ],
	  [ /\u{D739}/gu,
	    "\\mathbit{\\Delta}" ],
	  [ /\u{D73A}/gu,
	    "\\mathbit{\\Epsilon}" ],
	  [ /\u{D73B}/gu,
	    "\\mathbit{\\Zeta}" ],
	  [ /\u{D73C}/gu,
	    "\\mathbit{\\Eta}" ],
	  [ /\u{D73D}/gu,
	    "\\mathbit{\\Theta}" ],
	  [ /\u{D73E}/gu,
	    "\\mathbit{\\Iota}" ],
	  [ /\u{D73F}/gu,
	    "\\mathbit{\\Kappa}" ],
	  [ /\u{D740}/gu,
	    "\\mathbit{\\Lambda}" ],
	  [ /\u{D743}/gu,
	    "\\mathbit{\\Xi}" ],
	  [ /\u{D745}/gu,
	    "\\mathbit{\\Pi}" ],
	  [ /\u{D746}/gu,
	    "\\mathbit{\\Rho}" ],
	  [ /\u{D747}/gu,
	    "\\mathbit{\\varsigma}" ],
	  [ /\u{D748}/gu,
	    "\\mathbit{\\Sigma}" ],
	  [ /\u{D749}/gu,
	    "\\mathbit{\\Tau}" ],
	  [ /\u{D74A}/gu,
	    "\\mathbit{\\Upsilon}" ],
	  [ /\u{D74B}/gu,
	    "\\mathbit{\\Phi}" ],
	  [ /\u{D74C}/gu,
	    "\\mathbit{\\Chi}" ],
	  [ /\u{D74D}/gu,
	    "\\mathbit{\\Psi}" ],
	  [ /\u{D74E}/gu,
	    "\\mathbit{\\Omega}" ],
	  [ /\u{D74F}/gu,
	    "\\partial{}" ],
	  [ /\u{D750}/gu,
	    "\\in" ],
	  [ /\u{D751}/gu,
	    "\\mathbit{\\vartheta}" ],
	  [ /\u{D752}/gu,
	    "\\mathbit{\\varkappa}" ],
	  [ /\u{D753}/gu,
	    "\\mathbit{\\phi}" ],
	  [ /\u{D754}/gu,
	    "\\mathbit{\\varrho}" ],
	  [ /\u{D755}/gu,
	    "\\mathbit{\\varpi}" ],
	  [ /\u{D756}/gu,
	    "\\mathsfbf{\\Alpha}" ],
	  [ /\u{D757}/gu,
	    "\\mathsfbf{\\Beta}" ],
	  [ /\u{D758}/gu,
	    "\\mathsfbf{\\Gamma}" ],
	  [ /\u{D759}/gu,
	    "\\mathsfbf{\\Delta}" ],
	  [ /\u{D75A}/gu,
	    "\\mathsfbf{\\Epsilon}" ],
	  [ /\u{D75B}/gu,
	    "\\mathsfbf{\\Zeta}" ],
	  [ /\u{D75C}/gu,
	    "\\mathsfbf{\\Eta}" ],
	  [ /\u{D75D}/gu,
	    "\\mathsfbf{\\Theta}" ],
	  [ /\u{D75E}/gu,
	    "\\mathsfbf{\\Iota}" ],
	  [ /\u{D75F}/gu,
	    "\\mathsfbf{\\Kappa}" ],
	  [ /\u{D760}/gu,
	    "\\mathsfbf{\\Lambda}" ],
	  [ /\u{D763}/gu,
	    "\\mathsfbf{\\Xi}" ],
	  [ /\u{D765}/gu,
	    "\\mathsfbf{\\Pi}" ],
	  [ /\u{D766}/gu,
	    "\\mathsfbf{\\Rho}" ],
	  [ /\u{D767}/gu,
	    "\\mathsfbf{\\vartheta}" ],
	  [ /\u{D768}/gu,
	    "\\mathsfbf{\\Sigma}" ],
	  [ /\u{D769}/gu,
	    "\\mathsfbf{\\Tau}" ],
	  [ /\u{D76A}/gu,
	    "\\mathsfbf{\\Upsilon}" ],
	  [ /\u{D76B}/gu,
	    "\\mathsfbf{\\Phi}" ],
	  [ /\u{D76C}/gu,
	    "\\mathsfbf{\\Chi}" ],
	  [ /\u{D76D}/gu,
	    "\\mathsfbf{\\Psi}" ],
	  [ /\u{D76E}/gu,
	    "\\mathsfbf{\\Omega}" ],
	  [ /\u{D76F}/gu,
	    "\\mathsfbf{\\nabla}" ],
	  [ /\u{D770}/gu,
	    "\\mathsfbf{\\Alpha}" ],
	  [ /\u{D771}/gu,
	    "\\mathsfbf{\\Beta}" ],
	  [ /\u{D772}/gu,
	    "\\mathsfbf{\\Gamma}" ],
	  [ /\u{D773}/gu,
	    "\\mathsfbf{\\Delta}" ],
	  [ /\u{D774}/gu,
	    "\\mathsfbf{\\Epsilon}" ],
	  [ /\u{D775}/gu,
	    "\\mathsfbf{\\Zeta}" ],
	  [ /\u{D776}/gu,
	    "\\mathsfbf{\\Eta}" ],
	  [ /\u{D777}/gu,
	    "\\mathsfbf{\\Theta}" ],
	  [ /\u{D778}/gu,
	    "\\mathsfbf{\\Iota}" ],
	  [ /\u{D779}/gu,
	    "\\mathsfbf{\\Kappa}" ],
	  [ /\u{D77A}/gu,
	    "\\mathsfbf{\\Lambda}" ],
	  [ /\u{D77D}/gu,
	    "\\mathsfbf{\\Xi}" ],
	  [ /\u{D77F}/gu,
	    "\\mathsfbf{\\Pi}" ],
	  [ /\u{D780}/gu,
	    "\\mathsfbf{\\Rho}" ],
	  [ /\u{D781}/gu,
	    "\\mathsfbf{\\varsigma}" ],
	  [ /\u{D782}/gu,
	    "\\mathsfbf{\\Sigma}" ],
	  [ /\u{D783}/gu,
	    "\\mathsfbf{\\Tau}" ],
	  [ /\u{D784}/gu,
	    "\\mathsfbf{\\Upsilon}" ],
	  [ /\u{D785}/gu,
	    "\\mathsfbf{\\Phi}" ],
	  [ /\u{D786}/gu,
	    "\\mathsfbf{\\Chi}" ],
	  [ /\u{D787}/gu,
	    "\\mathsfbf{\\Psi}" ],
	  [ /\u{D788}/gu,
	    "\\mathsfbf{\\Omega}" ],
	  [ /\u{D789}/gu,
	    "\\partial{}" ],
	  [ /\u{D78A}/gu,
	    "\\in" ],
	  [ /\u{D78B}/gu,
	    "\\mathsfbf{\\vartheta}" ],
	  [ /\u{D78C}/gu,
	    "\\mathsfbf{\\varkappa}" ],
	  [ /\u{D78D}/gu,
	    "\\mathsfbf{\\phi}" ],
	  [ /\u{D78E}/gu,
	    "\\mathsfbf{\\varrho}" ],
	  [ /\u{D78F}/gu,
	    "\\mathsfbf{\\varpi}" ],
	  [ /\u{D790}/gu,
	    "\\mathsfbfsl{\\Alpha}" ],
	  [ /\u{D791}/gu,
	    "\\mathsfbfsl{\\Beta}" ],
	  [ /\u{D792}/gu,
	    "\\mathsfbfsl{\\Gamma}" ],
	  [ /\u{D793}/gu,
	    "\\mathsfbfsl{\\Delta}" ],
	  [ /\u{D794}/gu,
	    "\\mathsfbfsl{\\Epsilon}" ],
	  [ /\u{D795}/gu,
	    "\\mathsfbfsl{\\Zeta}" ],
	  [ /\u{D796}/gu,
	    "\\mathsfbfsl{\\Eta}" ],
	  [ /\u{D797}/gu,
	    "\\mathsfbfsl{\\vartheta}" ],
	  [ /\u{D798}/gu,
	    "\\mathsfbfsl{\\Iota}" ],
	  [ /\u{D799}/gu,
	    "\\mathsfbfsl{\\Kappa}" ],
	  [ /\u{D79A}/gu,
	    "\\mathsfbfsl{\\Lambda}" ],
	  [ /\u{D79D}/gu,
	    "\\mathsfbfsl{\\Xi}" ],
	  [ /\u{D79F}/gu,
	    "\\mathsfbfsl{\\Pi}" ],
	  [ /\u{D7A0}/gu,
	    "\\mathsfbfsl{\\Rho}" ],
	  [ /\u{D7A1}/gu,
	    "\\mathsfbfsl{\\vartheta}" ],
	  [ /\u{D7A2}/gu,
	    "\\mathsfbfsl{\\Sigma}" ],
	  [ /\u{D7A3}/gu,
	    "\\mathsfbfsl{\\Tau}" ],
	  [ /\u{D7A4}/gu,
	    "\\mathsfbfsl{\\Upsilon}" ],
	  [ /\u{D7A5}/gu,
	    "\\mathsfbfsl{\\Phi}" ],
	  [ /\u{D7A6}/gu,
	    "\\mathsfbfsl{\\Chi}" ],
	  [ /\u{D7A7}/gu,
	    "\\mathsfbfsl{\\Psi}" ],
	  [ /\u{D7A8}/gu,
	    "\\mathsfbfsl{\\Omega}" ],
	  [ /\u{D7A9}/gu,
	    "\\mathsfbfsl{\\nabla}" ],
	  [ /\u{D7AA}/gu,
	    "\\mathsfbfsl{\\Alpha}" ],
	  [ /\u{D7AB}/gu,
	    "\\mathsfbfsl{\\Beta}" ],
	  [ /\u{D7AC}/gu,
	    "\\mathsfbfsl{\\Gamma}" ],
	  [ /\u{D7AD}/gu,
	    "\\mathsfbfsl{\\Delta}" ],
	  [ /\u{D7AE}/gu,
	    "\\mathsfbfsl{\\Epsilon}" ],
	  [ /\u{D7AF}/gu,
	    "\\mathsfbfsl{\\Zeta}" ],
	  [ /\u{D7B0}/gu,
	    "\\mathsfbfsl{\\Eta}" ],
	  [ /\u{D7B1}/gu,
	    "\\mathsfbfsl{\\vartheta}" ],
	  [ /\u{D7B2}/gu,
	    "\\mathsfbfsl{\\Iota}" ],
	  [ /\u{D7B3}/gu,
	    "\\mathsfbfsl{\\Kappa}" ],
	  [ /\u{D7B4}/gu,
	    "\\mathsfbfsl{\\Lambda}" ],
	  [ /\u{D7B7}/gu,
	    "\\mathsfbfsl{\\Xi}" ],
	  [ /\u{D7B9}/gu,
	    "\\mathsfbfsl{\\Pi}" ],
	  [ /\u{D7BA}/gu,
	    "\\mathsfbfsl{\\Rho}" ],
	  [ /\u{D7BB}/gu,
	    "\\mathsfbfsl{\\varsigma}" ],
	  [ /\u{D7BC}/gu,
	    "\\mathsfbfsl{\\Sigma}" ],
	  [ /\u{D7BD}/gu,
	    "\\mathsfbfsl{\\Tau}" ],
	  [ /\u{D7BE}/gu,
	    "\\mathsfbfsl{\\Upsilon}" ],
	  [ /\u{D7BF}/gu,
	    "\\mathsfbfsl{\\Phi}" ],
	  [ /\u{D7C0}/gu,
	    "\\mathsfbfsl{\\Chi}" ],
	  [ /\u{D7C1}/gu,
	    "\\mathsfbfsl{\\Psi}" ],
	  [ /\u{D7C2}/gu,
	    "\\mathsfbfsl{\\Omega}" ],
	  [ /\u{D7C3}/gu,
	    "\\partial{}" ],
	  [ /\u{D7C4}/gu,
	    "\\in" ],
	  [ /\u{D7C5}/gu,
	    "\\mathsfbfsl{\\vartheta}" ],
	  [ /\u{D7C6}/gu,
	    "\\mathsfbfsl{\\varkappa}" ],
	  [ /\u{D7C7}/gu,
	    "\\mathsfbfsl{\\phi}" ],
	  [ /\u{D7C8}/gu,
	    "\\mathsfbfsl{\\varrho}" ],
	  [ /\u{D7C9}/gu,
	    "\\mathsfbfsl{\\varpi}" ],
	  [ /\u{D7CE}/gu,
	    "\\mathbf{0}" ],
	  [ /\u{D7CF}/gu,
	    "\\mathbf{1}" ],
	  [ /\u{D7D0}/gu,
	    "\\mathbf{2}" ],
	  [ /\u{D7D1}/gu,
	    "\\mathbf{3}" ],
	  [ /\u{D7D2}/gu,
	    "\\mathbf{4}" ],
	  [ /\u{D7D3}/gu,
	    "\\mathbf{5}" ],
	  [ /\u{D7D4}/gu,
	    "\\mathbf{6}" ],
	  [ /\u{D7D5}/gu,
	    "\\mathbf{7}" ],
	  [ /\u{D7D6}/gu,
	    "\\mathbf{8}" ],
	  [ /\u{D7D7}/gu,
	    "\\mathbf{9}" ],
	  [ /\u{D7D8}/gu,
	    "\\mathbb{0}" ],
	  [ /\u{D7D9}/gu,
	    "\\mathbb{1}" ],
	  [ /\u{D7DA}/gu,
	    "\\mathbb{2}" ],
	  [ /\u{D7DB}/gu,
	    "\\mathbb{3}" ],
	  [ /\u{D7DC}/gu,
	    "\\mathbb{4}" ],
	  [ /\u{D7DD}/gu,
	    "\\mathbb{5}" ],
	  [ /\u{D7DE}/gu,
	    "\\mathbb{6}" ],
	  [ /\u{D7DF}/gu,
	    "\\mathbb{7}" ],
	  [ /\u{D7E0}/gu,
	    "\\mathbb{8}" ],
	  [ /\u{D7E1}/gu,
	    "\\mathbb{9}" ],
	  [ /\u{D7E2}/gu,
	    "\\mathsf{0}" ],
	  [ /\u{D7E3}/gu,
	    "\\mathsf{1}" ],
	  [ /\u{D7E4}/gu,
	    "\\mathsf{2}" ],
	  [ /\u{D7E5}/gu,
	    "\\mathsf{3}" ],
	  [ /\u{D7E6}/gu,
	    "\\mathsf{4}" ],
	  [ /\u{D7E7}/gu,
	    "\\mathsf{5}" ],
	  [ /\u{D7E8}/gu,
	    "\\mathsf{6}" ],
	  [ /\u{D7E9}/gu,
	    "\\mathsf{7}" ],
	  [ /\u{D7EA}/gu,
	    "\\mathsf{8}" ],
	  [ /\u{D7EB}/gu,
	    "\\mathsf{9}" ],
	  [ /\u{D7EC}/gu,
	    "\\mathsfbf{0}" ],
	  [ /\u{D7ED}/gu,
	    "\\mathsfbf{1}" ],
	  [ /\u{D7EE}/gu,
	    "\\mathsfbf{2}" ],
	  [ /\u{D7EF}/gu,
	    "\\mathsfbf{3}" ],
	  [ /\u{D7F0}/gu,
	    "\\mathsfbf{4}" ],
	  [ /\u{D7F1}/gu,
	    "\\mathsfbf{5}" ],
	  [ /\u{D7F2}/gu,
	    "\\mathsfbf{6}" ],
	  [ /\u{D7F3}/gu,
	    "\\mathsfbf{7}" ],
	  [ /\u{D7F4}/gu,
	    "\\mathsfbf{8}" ],
	  [ /\u{D7F5}/gu,
	    "\\mathsfbf{9}" ],
	  [ /\u{D7F6}/gu,
	    "\\mathtt{0}" ],
	  [ /\u{D7F7}/gu,
	    "\\mathtt{1}" ],
	  [ /\u{D7F8}/gu,
	    "\\mathtt{2}" ],
	  [ /\u{D7F9}/gu,
	    "\\mathtt{3}" ],
	  [ /\u{D7FA}/gu,
	    "\\mathtt{4}" ],
	  [ /\u{D7FB}/gu,
	    "\\mathtt{5}" ],
	  [ /\u{D7FC}/gu,
	    "\\mathtt{6}" ],
	  [ /\u{D7FD}/gu,
	    "\\mathtt{7}" ],
	  [ /\u{D7FE}/gu,
	    "\\mathtt{8}" ],
	  [ /\u{D7FF}/gu,
	    "\\mathtt{9}" ] ];

	/* jshint node: true, esversion: 6, unused: true */

	const options = { 
		omit: { description: 'Properties to remove (eg. abstract)', value: [] },
		curly: { description: 'Enclose property values in curly brackets', value: false },
		numeric: { description: 'Don\'t enclose numeric/month values', value: false },
		space: { description: 'Indent using n spaces', value: 2 },
		tab: { description: 'Indent using tabs', value: false },
		tex: { description: 'LaTeX contents to search for occurences within', value: '' },
		metadata: { description: 'Generate metadata for each entry', value: false },
		sort: { description: 'Sort entries alphabetically by id', value: false },
		merge: { description: 'Merge duplicate entries', value: false },
		stripEnclosingBraces: { description: 'Where an entire value is enclosed in double braces, remove the extra braces', value: false },
		dropAllCaps: { description: 'Where values are all caps, make them title case', value: false },
		escapeSpecialCharacters: { description: 'Escape special characters, such as umlaut', value: true },
		sortProperties: { description: 'Sort the properties within entries', value: false }
	};

	const defaults = {};
	Object.entries(options).forEach(([k, { value }]) => defaults[k] = value);

	const keyOrder = [
		'title', 'shorttitle', 'author', 'year', 'month', 'day', 'journal',
		'booktitle', 'location', 'on',  'publisher', 'address', 'series',
		'volume', 'number', 'pages', 'doi', 'isbn', 'issn', 'url', 
		'urldate', 'copyright', 'category', 'note', 'metadata'
	];

	const escapeSpecialCharacters = str => {
		unicode.forEach(([regexp, latex]) => {
			str = str.replace(regexp, latex);
		});
		return str;
	};

	const titleCase = str => str.replace(/\w\S*/g, txt => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());

	const val = (e, prop) => e.properties[prop] && e.properties[prop].value ? e.properties[prop].value.replace(/\W/g, '').toLowerCase() : null;

	const inc = (collection, key) => collection[key] = (collection[key] || 0) + 1;

	const occurrences = (string = '', subString = '') => {
		if (subString.length <= 0) { return (string.length + 1); }
		let n = 0,
			pos = 0;
		while (true) {
			pos = string.indexOf(subString, pos);
			if (pos >= 0) {
				++n;
				pos += subString.length;
			} else break;
		}
		return n;
	};

	const tidy = (input, options = {}) => {
		options = Object.assign({}, defaults, options);
		let result = bibtexParse.parse(input),
			entries = result.entries,
			proceedings = {},
			publishers = {},
			journals = {},
			duplicates = [],
			indent = options.tab ? '\t' : Array(options.space).fill(' ').join('');

		let hashes = [];
		entries.forEach(entry => {
			if (entry.properties.booktitle) { inc(proceedings, entry.properties.booktitle.value); }
			if (entry.properties.journal) { inc(journals, entry.properties.journal.value); }
			if (entry.properties.publisher) { inc(publishers, entry.properties.publisher.value); }
			if (options.merge) {
				let hash = {
					entry,
					doi: val(entry, 'doi'),
					abstract: val(entry, 'abstract') ? val(entry, 'abstract').slice(0, 100) : null,
					authorTitle: (val(entry, 'author') ? entry.properties.author.value.match(/([^\s]+)\s*(,|and |et |$)/)[1] : '') + ':' + // surname (comes before comma or 'and')
						(val(entry, 'title') || '').slice(0, 50)
				};
				let duplicate = hashes.find(h => {
					return hash.doi && hash.doi === h.doi ||
						hash.abstract && hash.abstract === h.abstract ||
						hash.authorTitle === h.authorTitle;
				});
				if (duplicate) {
					duplicates.push({ entry, duplicateOf: duplicate.entry });
					Object.keys(entry.properties).forEach(k => {
						if (!duplicate.entry.properties[k]) { duplicate.entry.properties[k] = entry.properties[k]; }
					});
				} else {
					hashes.push(hash);
				}
			}
		});

		if (options.sort) {
			entries = entries.sort((a, b) => {
				a = a.id.toLowerCase();
				b = b.id.toLowerCase();
				return a < b ? -1 : a > b ? 1 : 0;
			});
		}
		let bibtex = '';
		bibtex += result.commentsBefore.map(c => `%${c}\n`).join('');

		if (result.preamble) {
			let braced = result.preamble.brace === 'curly' ? `{${result.preamble.value}}` : `"${result.preamble.value}"`;
			bibtex += `@preamble{${braced}}\n`;
		}

		bibtex += entries
			.filter(entry => !duplicates.find(d => d.entry === entry))
			.map(entry => {
				entry.citations = occurrences(options.tex, entry.id);
				if (options.metadata) {
					entry.properties.metadata = {
						brace: 'curly',
						value: `citations: ${entry.citations}`
					};
					if (entry.properties.booktitle) { entry.properties.metadata.value += `, bookcount: ${proceedings[entry.properties.booktitle.value]}`; }
					if (entry.properties.journal) { entry.properties.metadata.value += `, journalcount: ${journals[entry.properties.journal.value]}`; }
					if (entry.properties.publisher) { entry.properties.metadata.value += `, publishercount: ${publishers[entry.properties.publisher.value]}`; }
				}
				let props = Object.keys(entry.properties)
					.filter(k => !options.omit.includes(k));
				if (options.sortProperties) {
					props = props
						.sort((a, b) => {
							return keyOrder.includes(a) && keyOrder.includes(b) ? keyOrder.indexOf(a) - keyOrder.indexOf(b) :
									keyOrder.includes(a) ? -1 :
									keyOrder.includes(b) ? 1 : 0;
						});
				}
				props = props
					.map(k => {
						let v = entry.properties[k],
							val = String(v.value).replace(/\n/g, ' ');
						if (options.stripEnclosingBraces) {
							val = val.replace(/^\{(.*)\}$/g, '$1');
						}
						if (options.dropAllCaps && val.match(/^[^a-z]+$/)) {
							val = titleCase(val);
						}
						if (options.escapeSpecialCharacters) {
							val = escapeSpecialCharacters(val);
						}
						let braced = v.brace === 'curly' || options.curly ? `{${val}}` : v.brace === 'quote' ? `"${val}"` : val;
						if (options.numeric && (val.match(/^[0-9]+$/) || (k === 'month' && val.match(/^\w+$/)))) {
							braced = String(val).toLowerCase();
						}
						return `${indent}${k.padEnd(14)}= ${braced}`;
					});
				return entry.comments.map(c => `%${c}\n`).join('') +
					`@${entry.type.toLowerCase()}{${entry.id},\n${props.join(',\n')}\n}`;
			})
			.join('\n');

		bibtex += result.commentsAfter.map(c => `%${c}\n`).join('');

		return { entries, bibtex, proceedings, publishers, journals, duplicates };
	};

	var index = { tidy, options };

	return index;

})));
